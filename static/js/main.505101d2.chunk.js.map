{"version":3,"sources":["../../../src/node_editor/model.ts","../../../src/node_editor/pan_zoom.tsx","../../../../src/node_editor/theme/dark.ts","../../../../src/node_editor/theme/index.ts","../../../src/node_editor/background.tsx","../../../../src/node_editor/link/link_bezier.tsx","../../../../src/node_editor/link/link_line.tsx","../../../../src/node_editor/link/index.tsx","../../../src/node_editor/link_canvas.tsx","../../../../src/node_editor/connector_content/default.tsx","../../../../src/node_editor/connector_content/error.tsx","../../../../src/node_editor/connector_content/check_box.tsx","../../../../src/node_editor/connector_content/number.tsx","../../../../src/node_editor/connector_content/select.tsx","../../../../src/node_editor/connector_content/button.tsx","../../../../src/node_editor/connector_content/text_area.tsx","../../../../src/node_editor/connector_content/string.tsx","../../../../src/node_editor/utils/index.ts","../../../../src/node_editor/utils/drag.ts","../../../../src/node_editor/node/pin.tsx","../../../../src/node_editor/node/connector.tsx","../../../../src/node_editor/connector_content/index.tsx","../../../../src/node_editor/node/header.tsx","../../../../src/node_editor/node/footer.tsx","../../../../src/node_editor/node/node.tsx","../../../src/node_editor/node_canvas.tsx","../../../src/node_editor/node_editor.tsx","nodes/consts.ts","../../../src/contextual_menu/menu_item_list.tsx","../../../src/contextual_menu/basic_contextual_menu.tsx","../../../src/contextual_menu/add_node_contextual_menu.tsx","../../../src/contextual_menu/selection_management_contextual_menu.tsx","nodes/node.ts","nodes/canvas.ts","nodes/rectangle.ts","nodes/rotate.ts","nodes/number.ts","nodes/color.ts","nodes/timer.ts","nodes/translate.ts","nodes/if_else.ts","nodes/string.ts","nodes/split.ts","nodes/operation.ts","nodes/log.ts","nodes/arc.ts","nodes/check.ts","nodes/boolean.ts","nodes/function.ts","nodes/threejs.tsx","nodes/threejs_box.tsx","nodes/range.ts","nodes/map.ts","nodes/textArea.ts","nodes/pop.ts","nodes/length.ts","nodes/object.ts","nodes/index.ts","connector_content/canvas.tsx","connector_content/threejs.tsx","connector_content/index.tsx","oura_canvas.tsx","App.tsx","index.tsx"],"names":["PinSide","PinLayout","arePositionEquals","rPos","lPos","x","y","generateUuid","replace","c","r","Math","random","toString","props","_super","_this","state","panDisabled","onMouseDown","bind","onMouseUp","onZoomChange","onPanning","onPanningStart","onPanningStop","__extends","PanZoom","e","shiftKey","target","mouseDownOnLinkCanvas","id","mouseDownOnPanCanvas","className","includes","setState","button","ref","onPanZoomInfo","zoom","scale","topLeftCorner","positionX","positionY","panStartPosition","onSelectItem","panEndPosition","panZoomInfo","children","React","style","position","width","height","TransformWrapper","limitToBounds","minScale","panning","excluded","disabled","velocityDisabled","doubleClick","wheel","step","onWheel","initialScale","initialPositionX","initialPositionY","TransformComponent","theme","node","selected","boxShadow","borderRadius","header","backgroundColor","color","cursor","overflow","paddingLeft","body","footer","basePin","customPins","string","transform","link","stroke","strokeWidth","fill","unselected","connectors","leftText","textOverflow","border","outline","number","boxSizing","textAlign","paddingRight","select","buildBackgroundStyle","grid","String","backgroundPosition","concat","backgroundImage","ThemeContext","createContext","darkTheme","BackGround","useContext","top","left","BezierLink","nextProps","_","event","linkId","onSelectLink","context","linkPosition","isLinkSelected","sourceX","inputPinPosition","sourceY","targetX","outputPinPosition","targetY","center","source","offsetX","abs","xCenter","offsetY","getCenter","path","__assign","_a","_b","_c","_d","_e","_f","d","onClick","Component","contextType","LineLink","x1","y1","x2","y2","createLink","linkType","LinkCanvas","linksPositions","selectedItems","draggedLink","Object","keys","links","filter","key","map","some","type","DefaultConnectorContent","connector","pinLayout","RIGHT_PIN","name","ErrorConnectorComponent","message","CheckBox","onChange","nodeId","cId","onConnectorUpdate","produce","draft","data","value","ErrorConnectorContent","tabIndex","checked","NumberConnectorContent","isEqual","isNaN","Number","currentTarget","display","placeholder","SelectConnectorContent","setSelectedValue","useCallback","selected_index","newConnector","selectedIndex","defaultValue","values","ButtonConnectorContent","label","createRef","TextAreaConnectorContent","textAreaRef","current","height_1","whiteSpace","resize","StringConnectorContent","DragWrapper","onMouseMove","initialPos","getZoom","window","addEventListener","finalPos","lastZoom","tmpPos","pageX","pageY","onMouseMoveCb","onMouseUpCb","offsetPos","targetClassName","removeEventListener","Pin","contentType","leftPinPosition","pinPxRadius","pinColor","customStyle","undefined","Connector","onPinPositionUpdate","leftPinPos","getConnectorPinPosition","LEFT","rightPinPos","RIGHT","pinSide","onUpdatePreviewLink","onCreateLink","pinPosition","dragWrapper","_iPos","_fPos","mouseUpEvent","tag","match","inputNodeId","inputPinId","inputPinSide","outputNodeId","outputPinId","outputPinSide","connectorRef","NO_PINS","LEFT_PIN","offsetTop","offsetHeight","createCustomConnectorComponent","connectorContent","createConnectorComponent","paddingTop","BOTH_PINS","leftPinColor","rightPinColor","Header","Footer","Node","isNodeSelected","onNodeMoveStart","onNodeMove","onNodeMoveEnd","stopEvent","classNameStr","_finalPos","iPos","fPos","mouseUpEv","onNodePinPositionsUpdate","pinPositions","connectableConnectorsLength","length","nodeCoreSelectionStyle","NodeEditor","selection","alreadySelected","forEach","item","lastSettedSelection","offsetWidth","nodes","newX","newY","newWidth","wasNodeMoved","enableMapSet","NodeName","filterRenderedNodes","filterRenderedLinks","updateLinkPositions","onSelectedItems","newSelection","indexToDelete_1","index","splice","push","previewLink","nodesPinPositions","redrawPinPosition","newLinksPositions","iNPins","oNPins","mainDivRef","minX","minY","maxX","margin","maxY","filteredNodes","valueInRange","min","max","xOverlap","yOverlap","renderedNodesKeys","filteredlinks","renderedNodes","renderedLinks","Provider","NodeCanvas","MenuItem","onMouseEnter","onMouseLeave","MenuItemList","flex","overflowY","items","BasicContextualMenu","useState","searchText","setSearchText","filteredItems","toLowerCase","lcSearchText","flexDirection","menuTitle","NodePrevisualizer","previewDivRef","useRef","nodeElem","divDim","getBoundingClientRect","displayedNode","gridArea","AddNodeContextualMenu","onNodeSelection","onMouseHover","previsualizedNodeId","setPrevisualizedNodeId","nodesSchema","onMouseLeaves","SelectionManagementContextualMenu","onDeleteSelection","delete_selection","getOutputLinks","linkOutputs","linkKey","getInputsLinks","propagationDictToOrderedList","propagationDict","propagationList","sort","a","b","createPropagationTree","depth","outputLinks","TaskQueue","tasks","propagationValues","functionCalls","functionResults","this","pop","fIns","fLinkId","find","fOutId","unshift","functionOutId","inputs","alreadyComputedNodes","toBeComputed","console","log","v","k","FunctionOutputNode","fOutIdLinks","fInId","fIn","FunctionInputNode","funName","functionCallersNodeIds","FunctionCallNode","Map","LambdaCall","propagateNode","setNodes","runFunctionTask","runTask","functionCall","outputsLinks","outputsNodes","readyToCompute","IfElse","ifLinkId","res","depNodeId","inputLinks","inputValues","pinId","isMultiInputAllowed","registerfunctionRun","outputValues","computeSpecific","ouputsLinks","shift","fLinkResId","propagingNodeId","immerable","queue","jsonObj","CanvasNode","Canvas","canvas_width","canvas_height","canvas_color","draw","ctx","clearRect","canvas","Array","isArray","ee","canvas_draw","initFromJson","RectangleNode","Rectangle","lineWidth","fillStyle","fillRect","strokeStyle","oldLineWidth","strokeRect","RotateNode","Rotate","rotation","PI","rotate","NumberNode","json","ColorNode","Color","red","green","blue","alpha","colorCode","TimerNode","Timer","TranslateNode","Translate","translate","IfElseNode","cond","if_value","ret","StringNode","SplitNode","Split","str","split","RegExp","OperationNode","Operation","pow","log10","sin","cos","tan","LogNode","Log","JSON","stringify","ArcNode","Arc","radius","start_angle","end_angle","counterclockwise","beginPath","arc","closePath","CheckNode","Check","BooleanNode","Boolean","functionName","expectedConnectors","finNodeId","nodeKey","i","propateFunction","popResult","add","remove","LambdaCallNode","val","ThreeJS","obj","ThreeJSBox","cube","geometry","THREE","material","rotation_x","rotation_y","rotation_z","setStyle","set","RangeNode","Range","count","array","cur","MapNode","TextAreaNode","TextArea","ShiftNode","Shift","elem","PopNode","Pop","LengthNode","Length","ObjectCreatorNode","ObjectExtractorNode","paramName","createNodeFromJson","createFromJson","Error","canvasRef","useEffect","getContext","zIndex","imageRendering","ThreeJs","divRef","div","scene","camera","innerWidth","innerHeight","renderer","light","setSize","appendChild","domElement","z","animate","requestAnimationFrame","render","cancelAnimationFrame","removeChild","dispose","createCustomConnectorsContents","taskQueue","OuraCanvasApp","nodePickerPos","setNodePickerPos","nodePickerOnMouseHover","setNodePickerOnMouseHover","setPanZoomInfo","setSelectedItems","setLinks","runFirstPropagation","setRunFirstPropagation","locallyStoredNodes","localStorage","getItem","locallyStoredLinks","initNodes","parse","initLinks","propagateAll","runAll","setItem","nodesSchemas","setSelectedItemsAndMoveSelectedNodeFront","selectedNodeId","newNodes","interval","setInterval","updated","clearInterval","newLinks","deleteNodeIds","deletedLinksIds","nodeIdToRecompute","newNodeId","setNewNodeId","newNode","onContextMenu","preventDefault","onSaveButton","element","document","createElement","setAttribute","encodeURIComponent","click","onLoadButton","evt","reset","files","size","reader","FileReader","onload","file","result","atob","substring","readAsDataURL","onResetButton","nodePicker","buttonStyle","font","textDecoration","padding","borderTop","borderRight","borderBottom","borderLeft","bottom","htmlFor","visibility","right","App","container","getElementById","createRoot","StrictMode"],"mappings":"iKA6DYA,EAKAC,E,gFA/CN,SAAUC,EAAkBC,EAAkBC,GAChD,OAAOD,EAAKE,IAAMD,EAAKC,GAAKF,EAAKG,IAAMF,EAAKE,EAuB1C,SAAUC,IACZ,MAAO,uCAAuCC,QAAQ,SAAS,SAACC,GAC5D,IAAMC,EAAqB,GAAhBC,KAAKC,SAAiB,EAEjC,OADgB,MAANH,EAAYC,EAAS,EAAJA,EAAW,GAC7BG,SAAS,QAc1B,SAAYb,GACRA,mBACAA,qBAFJ,CAAYA,MAAO,KAKnB,SAAYC,GACRA,yBACAA,2BACAA,6BACAA,6BAJJ,CAAYA,MAAS,K,yeC/CrB,YAII,WAAYa,GAAZ,MACIC,YAAMD,IAAM,K,OAJRE,mBAAsC,KACtCA,YAAW,EAIfA,EAAKC,MAAQ,CACTC,aAAa,GAGjBF,EAAKG,YAAcH,EAAKG,YAAYC,KAAKJ,GACzCA,EAAKK,UAAYL,EAAKK,UAAUD,KAAKJ,GACrCA,EAAKM,aAAeN,EAAKM,aAAaF,KAAKJ,GAC3CA,EAAKO,UAAYP,EAAKO,UAAUH,KAAKJ,GACrCA,EAAKQ,eAAiBR,EAAKQ,eAAeJ,KAAKJ,GAC/CA,EAAKS,cAAgBT,EAAKS,cAAcL,KAAKJ,G,EAiGrD,OAhHqCU,OAkBjCC,iCAAYC,GAER,KAAKC,SAAWD,EAAEC,SAElB,IAAMC,EAASF,EAAEE,OAEbC,GAAwB,EACH,kBAAdD,EAAOE,KACdD,EAAsC,gBAAdD,EAAOE,IAGnC,IAAIC,GAAuB,EACK,kBAArBH,EAAOI,YACdD,EAAuBH,EAAOI,UAAUC,SAAS,4BAIrD,KAAKC,SAAS,CACVlB,YAA0B,IAAbU,EAAES,SAAkBN,IAA0BE,KAInEN,iCACI,KAAKS,SAAS,CACVlB,aAAa,KAIrBS,kCAAaW,IAETC,EAD0B,KAAKzB,MAAKyB,eACtB,CAAEC,KAAMF,EAAIrB,MAAMwB,MAAOC,cAAe,CAAErC,EAAGiC,EAAIrB,MAAM0B,UAAWrC,EAAGgC,EAAIrB,MAAM2B,cAGjGjB,+BAAUW,IAENC,EAD0B,KAAKzB,MAAKyB,eACtB,CAAEC,KAAMF,EAAIrB,MAAMwB,MAAOC,cAAe,CAAErC,EAAGiC,EAAIrB,MAAM0B,UAAWrC,EAAGgC,EAAIrB,MAAM2B,cAGjGjB,oCAAeW,GACX,KAAKO,iBAAmB,CAAExC,EAAGiC,EAAIrB,MAAM0B,UAAWrC,EAAGgC,EAAIrB,MAAM2B,YAGnEjB,mCAAcW,GACF,MAAiB,KAAKxB,MAAKgC,aAC7BC,EAAsBT,EAAIrB,MAAM0B,UAAhCI,EAA8CT,EAAIrB,MAAM2B,UAC1D,KAAKC,kBAAoB,KAAKA,iBAAiBxC,IAAM0C,GAAoB,KAAKF,iBAAiBvC,IAAMyC,GACrGD,EAAa,KAAM,KAAKjB,WAIhCF,8BACU,MAA4B,KAAKb,MAA/BkC,EAAW,cAAEC,EAAQ,WACrB,EAAgB,KAAKhC,MAAKC,YAElC,OACIgC,uBACIlB,GAAG,UACHmB,MAAO,CACHC,SAAU,WACVC,MAAO,OACPC,OAAQ,QAEZnC,YAAa,KAAKA,YAClBE,UAAW,KAAKA,WAEhB6B,gBAACK,IAAgB,CACbC,eAAe,EACfC,SAAU,IACVC,QAAS,CACLC,SAAU,CAAC,QAAS,SAAU,WAAY,SAAU,QACpDC,SAAU1C,EACV2C,kBAAkB,GAEtBC,YAAa,CACTF,UAAU,GAEdG,MAAO,CACHC,KAAM,IAEVC,QAAS,KAAK3C,aACdE,eAAgB,KAAKA,eACrBD,UAAW,KAAKA,UAChBE,cAAe,KAAKA,cACpByC,aAAclB,EAAYR,KAC1B2B,iBAAkBnB,EAAYN,cAAcrC,EAC5C+D,iBAAkBpB,EAAYN,cAAcpC,GAE5C4C,gBAACmB,IAAkB,KACfnB,uBAAKC,MAAO,CAAEG,OAAQ,QAASD,MAAO,UAAYJ,OAM1E,EAhHA,CAAqCC,aC0FtB,OACXoB,MAzGqB,CACrBC,KAAM,CACFC,SAAU,CACNC,UAAW,wBACXC,aAAc,uBAElBC,OAAQ,CACJC,gBAAiB,SACjBC,MAAO,QACPH,aAAc,oBACdpB,OAAQ,OACRwB,OAAQ,OACRC,SAAU,SACVC,YAAa,QAEjBC,KAAM,CACFJ,MAAO,QACPD,gBAAiB,yBACjBE,OAAQ,QAEZI,OAAQ,CACJR,aAAc,oBACdpB,OAAQ,OACRsB,gBAAiB,yBACjBE,OAAQ,aAEZK,QAAS,CACLP,gBAAiB,wBACjBF,aAAc,kBACdI,OAAQ,QAEZM,WAAY,CACRC,OAAQ,CACJT,gBAAiB,MACjBU,UAAW,mBAIvBC,KAAM,CACFf,SAAU,CACNgB,OAAQ,QACRC,YAAa,MACbC,KAAM,QAEVC,WAAY,CACRH,OAAQ,4BACRC,YAAa,MACbC,KAAM,SAGdE,WAAY,CACRC,SAAU,CACNxC,MAAO,MACPyC,aAAc,WACdf,SAAU,UAEdM,OAAQ,CACJhC,MAAO,OACPuB,gBAAiB,UACjBC,MAAO,QACPkB,OAAQ,EACRC,QAAS,QAEbC,OAAQ,CACJ5C,MAAO,MACP6C,UAAW,aACXtB,gBAAiB,UACjBC,MAAO,QACPkB,OAAQ,EACRC,QAAS,OACTG,UAAW,QACXzB,aAAc,MACd0B,aAAc,OAElBC,OAAQ,CACJhD,MAAO,MACPuB,gBAAiB,UACjBsB,UAAW,aACXrB,MAAO,QACPkB,OAAQ,EACRC,QAAS,OACTG,UAAW,QACXzB,aAAc,MACd0B,aAAc,OAElB/D,OAAQ,CACJgB,MAAO,OACPuB,gBAAiB,UACjBC,MAAO,QACPkB,OAAQ,EACRC,QAAS,UAgBjBM,qBAXJ,SAAuCtD,GACnC,IAAMuD,EAAOC,OAAO,IAAMxD,EAAYR,MACtC,MAAO,CACHoC,gBAAiB,UACjB6B,mBAAoB,UAAGzD,EAAYN,cAAcrC,EAAC,OAAAqG,OAAM1D,EAAYN,cAAcpC,EAAC,MACnFqG,gBAAiB,oFAA4EJ,EAAI,cAAAG,OAAaH,EAAI,ilDC7FpHK,EAAeC,wBAAgCC,G,gNCFvC,SAAUC,EAAWjG,GACvB,MAAyBkG,qBAAWJ,GAAaN,qBACjD,EAA0BxF,EAAK,YAAlBmC,EAAanC,EAAK,SAEnCqC,EAAwB,CACxBC,SAAU,WACV6D,IAAK,IACLC,KAAM,IACN7D,MAAO,OACPC,OAAQ,OACRyB,SAAU,UAOd,OAJIuB,IACAnD,EAAK,OAAQA,GAAUmD,EAAqBtD,KAGzCE,yBAAKC,MAAOA,GAAQF,G,+qBCZ/B,2B,+CAoCA,OApCwCvB,OACpCyF,2CAAsBC,GAClB,OAAQC,UAAU,KAAKvG,MAAOsG,IAGlCD,kCAAaG,GACH,MAA2B,KAAKxG,MAA9ByG,EAAM,SAAEC,EAAY,eACxBA,GAAgBD,GAChBC,EAAaD,EAAQD,EAAMzF,WAInCsF,8B,gBACY,EAAU,KAAKM,QAAOnD,MACxB,EAA2C,KAAKxD,MAA9CyG,EAAM,SAAEG,EAAY,eAAEC,EAAc,iBACtCC,EAAUF,EAAaG,iBAAiBxH,EACxCyH,EAAUJ,EAAaG,iBAAiBvH,EACxCyH,EAAUL,EAAaM,kBAAkB3H,EACzC4H,EAAUP,EAAaM,kBAAkB1H,EACzC4H,EA3BI,SAACC,EAAoBrG,GACnC,IAAMsG,EAAUzH,KAAK0H,IAAIvG,EAAOzB,EAAI8H,EAAO9H,GAAK,EAC1CiI,EAAUxG,EAAOzB,EAAI8H,EAAO9H,EAAIyB,EAAOzB,EAAI+H,EAAUtG,EAAOzB,EAAI+H,EAChEG,EAAU5H,KAAK0H,IAAIvG,EAAOxB,EAAI6H,EAAO7H,GAAK,EAEhD,MAAO,CAAED,EAAGiI,EAAShI,EADLwB,EAAOxB,EAAI6H,EAAO7H,EAAIwB,EAAOxB,EAAIiI,EAAUzG,EAAOxB,EAAIiI,GAuBnDC,CAAUd,EAAaG,iBAAkBH,EAAaM,mBAE/DS,EAAO,WAAIb,EAAO,KAAAlB,OAAIoB,EAAO,MAAApB,OAAKwB,EAAO7H,EAAC,KAAAqG,OAAIoB,EAAO,KAAApB,OAAIwB,EAAO7H,EAAC,KAAAqG,OAAIuB,EAAO,KAAAvB,OAAIqB,EAAO,KAAArB,OAAIuB,GAE3F9E,EAAQwE,EAAgBe,OACX,QAAX,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOnD,YAAIoD,WAAA,EAAAA,EAAEnE,UAAmC,QAAtB,EAAe,QAAf,OAAK1D,MAAMyE,YAAIqD,WAAA,EAAAA,EAAEtE,aAAKuE,WAAA,EAAAA,EAAErE,UAAWkE,OAClD,QAAX,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOnD,YAAIuD,WAAA,EAAAA,EAAEnD,YAAqC,QAAtB,EAAe,QAAf,OAAK7E,MAAMyE,YAAIwD,WAAA,EAAAA,EAAEzE,aAAK0E,WAAA,EAAAA,EAAErD,YAE5D,OACIzC,0BACIlB,GAAI,eAAQuF,GACZ0B,EAAGR,EACHtF,MAAOA,EACP+F,QAAS,KAAK1B,aAAapG,KAAK,SAIhD,EApCA,CAAwC+H,a,IAsCxChC,EAAWiC,YAAcxC,E,+qBC/CzB,2B,+CAgCA,OAhCsClF,OAClC2H,2CAAsBjC,GAClB,OAAQC,UAAU,KAAKvG,MAAOsG,IAGlCiC,kCAAa/B,GACH,MAA2B,KAAKxG,MAA9ByG,EAAM,SAAEC,EAAY,eACxBA,GAAgBD,GAChBC,EAAaD,EAAQD,EAAMzF,WAInCwH,8B,gBACY,EAAU,KAAK5B,QAAOnD,MACxB,EAA2C,KAAKxD,MAA9CyG,EAAM,SAAEG,EAAY,eAEtBvE,EAFsC,iBAEduF,OACX,QAAX,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOnD,YAAIoD,WAAA,EAAAA,EAAEnE,UAAmC,QAAtB,EAAe,QAAf,OAAK1D,MAAMyE,YAAIqD,WAAA,EAAAA,EAAEtE,aAAKuE,WAAA,EAAAA,EAAErE,UAAWkE,OAClD,QAAX,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOnD,YAAIuD,WAAA,EAAAA,EAAEnD,YAAqC,QAAtB,EAAe,QAAf,OAAK7E,MAAMyE,YAAIwD,WAAA,EAAAA,EAAEzE,aAAK0E,WAAA,EAAAA,EAAErD,YAE5D,OACIzC,0BACIlB,GAAI,eAAQuF,GACZ+B,GAAI5B,EAAaG,iBAAiBxH,EAClCkJ,GAAI7B,EAAaG,iBAAiBvH,EAClCkJ,GAAI9B,EAAaM,kBAAkB3H,EACnCoJ,GAAI/B,EAAaM,kBAAkB1H,EACnC6C,MAAOA,EACP+F,QAAS,KAAK1B,aAAapG,KAAK,SAIhD,EAhCA,CAAsC+H,a,IAkCtCE,EAASD,YAAcxC,E,oNCjCT,SAAU8C,EAAW5I,GACvB,MAASA,EAAK,KACtB,MAAuB,UAAf,OAAJ,QAAI,IAAJ,OAAI,EAAJ,EAAM6I,UACCzG,kBAACmG,EAAQX,KAAK5H,IAGlBoC,kBAACiE,EAAUuB,KAAK5H,ICEb,SAAU8I,EAAW9I,GACvB,MAAsDA,EAAK,MAApD+I,EAA+C/I,EAAK,eAApCgJ,EAA+BhJ,EAAK,cAArBiJ,EAAgBjJ,EAAK,YAC3D,EAAiBA,EAAK,aAW9B,OACIoC,yBAAKC,MAVoB,CACzBC,SAAU,WACV6D,IAAK,IACLC,KAAM,IACN7D,MAAO,OACPC,OAAQ,OACRyB,SAAU,WAIS/C,GAAG,eAEjBgI,OAAOC,KAAKC,GACRC,QAAO,SAACC,GAAQ,YAAOP,KACvBQ,KAAI,SAACD,GACF,SAAW,CACP7C,OAAQ6C,EACR7E,KAAM2E,EAAME,GACZA,IAAG,EACH1C,aAAcmC,EAAeO,GAC7BzC,eAAgBN,IAAEiD,KAAKR,EAAe,CAAE9H,GAAIoI,EAAKG,KAAM,SACvD/C,aAAc,SAACxF,EAAIH,GAAa,SAAa,CAAEG,GAAE,EAAEuI,KAAM,QAAU1I,SAI9EkI,GACGL,EAAW,CACPhC,aAAcqC,EACdpC,gBAAgB,K,+dCzCpC,2B,+CAkBA,OAlBsCjG,OAClC8I,2CAAsBpD,GAClB,OAAQC,UAAU,KAAKvG,MAAOsG,IAGlCoD,8BACY,MAAc,KAAK1J,MAAK2J,UAChC,OACIvH,yBACIhB,UAAU,kBACViB,MAAO,CACHgD,UAAWsE,EAAUC,YAAczK,EAAU0K,UAAY,QAAU,SAGtEF,EAAUG,OAI3B,EAlBA,CAAsCzB,aAoBvBqB,ICfAK,EALiB,SAAC/J,GACrB,MAAYA,EAAK,QACzB,OAAOoC,yBAAKC,MAAO,CAAE0B,MAAO,QAAU,iBAAUiG,K,2dCwCrCC,EAzCf,YACI,WAAYjK,GAAZ,MACIC,YAAMD,IAAM,K,OAEZE,EAAKgK,SAAWhK,EAAKgK,SAAS5J,KAAKJ,G,EAmC3C,OAvCuBU,OAOnBqJ,gCACU,MAAgD,KAAKjK,MAAnDmK,EAAM,SAAEC,EAAG,MAAET,EAAS,aAI9BU,EAJiD,qBAI/BF,EAAQC,EAHLE,YAAQX,GAAW,SAACY,GACrCA,EAAMC,KAAKC,OAASF,EAAMC,KAAKC,WAKvCR,8BACY,MAAc,KAAKjK,MAAK2J,UAChC,KAAM,UAAWA,EAAUa,MAAO,CAE9B,OAAOpI,kBAACsI,EAAqB,CAACV,QADd,wEAGpB,OACI5H,oCACIA,2BACIuI,UAAW,EACXC,QAASjB,EAAUa,KAAKC,MACxBP,SAAU,KAAKA,SACfT,KAAK,WACLpH,MAAO,CACHyB,gBAAiB,UACjBC,MAAO,QACPkB,OAAQ,EACRC,QAAS,UAGhByE,EAAUG,OAI3B,EAvCA,CAAuBzB,a,2dCEvB,cACI,WAAYrI,GAAZ,MACIC,YAAMD,IAAM,K,OAEZE,EAAKgK,SAAWhK,EAAKgK,SAAS5J,KAAKJ,G,EAsC3C,OA1CoDU,OAOhDiK,2CAAsBvE,GAClB,OAAQC,IAAEuE,QAAQ,KAAK9K,MAAOsG,IAGlCuE,8BAASrE,GACC,MAAgD,KAAKxG,MAAnDmK,EAAM,SAAEC,EAAG,MAAET,EAAS,YAAEU,EAAiB,oBAC9CU,MAAMC,OAAOxE,EAAMyE,cAAcR,SAMpCJ,EAAkBF,EAAQC,EAHLE,YAAQX,GAAW,SAACY,GACrCA,EAAMC,KAAKC,MAAQjE,EAAMyE,cAAcR,WAK/CI,8B,QACY,EAAU,KAAKlE,QAAOnD,MACtB,EAAc,KAAKxD,MAAK2J,UAChC,KAAM,UAAWA,EAAUa,MAAO,CAE9B,OAAOpI,kBAACsI,EAAqB,CAACV,QADd,uEAGpB,OACI5H,yBAAKC,MAAO,CAAC6I,QAAS,SAClB9I,yBAAKhB,UAAU,kBAAkBiB,MAAwB,QAAjB,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOyC,kBAAU+C,WAAA,EAAAA,EAAE9C,UAAY4E,EAAUG,MACjF1H,2BACIU,SAAU,aAAc6G,EAAUa,MAAOb,EAAUa,KAAK1H,SACxDT,MAAwB,QAAjB,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOyC,kBAAUgD,WAAA,EAAAA,EAAE3C,OAC1BsF,MAAOd,EAAUa,KAAKC,MACtBP,SAAU,KAAKA,SACfiB,YAAaxB,EAAUG,SAK3C,EA1CA,CAAoDzB,a,IA4CpDwC,EAAuBvC,YAAcxC,EC7CrC,IA8BesF,EA9BgB,SAACvD,G,QAAC8B,EAAS,YAAEQ,EAAM,SAAEC,EAAG,MAAEC,EAAiB,oBAC9D,EAAUnE,qBAAWJ,GAAatC,MAE1C,KAAK,WAAYmG,EAAUa,SAAW,mBAAoBb,EAAUa,MAAQ,CAExE,OAAOpI,kBAACsI,EAAqB,CAACV,QADd,kHAIpB,IAAMqB,EAAmBC,uBAAY,SAACC,GAClC,IAAMC,EAAelB,YAAQX,GAAW,SAACY,GACrCA,EAAMC,KAAKe,eAAiBA,KAEhClB,EAAkBF,EAAQC,EAAKoB,KAChC,CAACnB,EAAmBF,EAAQC,EAAKT,IAEpC,OACIvH,yBAAKC,MAAO,CAAC6I,QAAS,SAClB9I,yBAAKhB,UAAU,kBAAkBiB,MAAwB,QAAjB,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOyC,kBAAUgD,WAAA,EAAAA,EAAE/C,UAAY4E,EAAUG,MACjF1H,4BACI8H,SAAU,SAAC1D,GAAU,SAAiBA,EAAMxF,OAAOyK,gBACnDpJ,MAAwB,QAAjB,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOyC,kBAAUiD,WAAA,EAAAA,EAAExC,OAC1BmG,aAAc/B,EAAUa,KAAKmB,OAAOhC,EAAUa,KAAKe,iBAElD5B,EAAUa,KAAKmB,OAAOpC,KAAI,SAACkB,GAAkB,mCAAQnB,IAAKmB,EAAOA,MAAOA,GAAQA,SCNlFmB,EAlBgB,SAAC/D,G,MAAC8B,EAAS,YAAElG,EAAI,OACpC,EAAUyC,qBAAWJ,GAAatC,MAE1C,KAAK,UAAWmG,EAAUa,SAAW,YAAab,EAAUa,MAAQ,CAEhE,OAAOpI,kBAACsI,EAAqB,CAACV,QADd,gGAIpB,OACI5H,4BACIC,MAAwB,QAAjB,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOyC,kBAAUgD,WAAA,EAAAA,EAAEvG,OAC1B6G,QAAS,WAAM,SAAUoC,KAAKpC,QAAQ3E,KAErCkG,EAAUa,KAAKqB,Q,2qBCX5B,cAGI,WAAY7L,GAAZ,MACIC,YAAMD,IAAM,K,OAHRE,cAAckC,IAAM0J,YAKxB5L,EAAKgK,SAAWhK,EAAKgK,SAAS5J,KAAKJ,GACnCA,EAAKK,UAAYL,EAAKK,UAAUD,KAAKJ,G,EA6C7C,OApDsDU,OAUlDmL,2CAAsBzF,GAClB,OAAQC,IAAEuE,QAAQ,KAAK9K,MAAOsG,IAGlCyF,8BAASvF,GACC,MAAgD,KAAKxG,MAAnDmK,EAAM,SAAEC,EAAG,MAAET,EAAS,aAI9BU,EAJiD,qBAI/BF,EAAQC,EAHLE,YAAQX,GAAW,SAACY,GACrCA,EAAMC,KAAKC,MAAQjE,EAAMyE,cAAcR,WAK/CsB,iCACI,GAAG,KAAKC,YAAYC,QAAS,CACnB,MAAgD,KAAKjM,MAAnDmK,EAAM,SAAEC,EAAG,MAAET,EAAS,YAAEU,EAAiB,oBAC3C6B,EAAS,KAAKF,YAAYC,QAAQ5J,MAAMG,OAI9C6H,EAAkBF,EAAQC,EAHLE,YAAQX,GAAW,SAACY,GACrCA,EAAMC,KAAKhI,OAAS0J,QAMhCH,8B,MACY,EAAU,KAAKpF,QAA2BnD,MAC1C,EAAc,KAAKxD,MAAK2J,UAChC,KAAM,UAAWA,EAAUa,MAAO,CAE9B,OAAOpI,kBAACsI,EAAqB,CAACV,QADd,0EAGpB,IAAMxH,EAAS,WAAYmH,EAAUa,KAAOb,EAAUa,KAAKhI,OAAS,IACpE,OACIJ,8BACIZ,IAAM,KAAKwK,YACX3J,MAAK,GAAGG,OAAQA,EAAQ2J,WAAY,MAAOC,OAAQ,YAAgC,QAAjB,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOtH,kBAAU+C,WAAA,EAAAA,EAAEtD,QACrFkG,MAAOd,EAAUa,KAAKC,MACtBP,SAAU,KAAKA,SACf3J,UAAW,KAAKA,UAChB4K,YAAaxB,EAAUG,QAIvC,EApDA,CAAsDzB,a,IAsDtD0D,EAAyBzD,YAAcxC,E,+dCtDvC,cACI,WAAY9F,GAAZ,MACIC,YAAMD,IAAM,K,OAEZE,EAAKgK,SAAWhK,EAAKgK,SAAS5J,KAAKJ,G,EAmC3C,OAvCoDU,OAOhDyL,2CAAsB/F,GAClB,OAAQC,IAAEuE,QAAQ,KAAK9K,MAAOsG,IAGlC+F,8BAAS7F,GACC,MAAgD,KAAKxG,MAAnDmK,EAAM,SAAEC,EAAG,MAAET,EAAS,aAI9BU,EAJiD,qBAI/BF,EAAQC,EAHLE,YAAQX,GAAW,SAACY,GACrCA,EAAMC,KAAKC,MAAQjE,EAAMyE,cAAcR,WAK/C4B,8B,QACY,EAAU,KAAK1F,QAA2BnD,MAC1C,EAAc,KAAKxD,MAAK2J,UAChC,KAAM,UAAWA,EAAUa,MAAO,CAE9B,OAAOpI,kBAACsI,EAAqB,CAACV,QADd,uEAGpB,OACI5H,yBAAKC,MAAO,CAAC6I,QAAS,SAClB9I,yBAAKhB,UAAU,kBAAkBiB,MAAwB,QAAjB,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOyC,kBAAU+C,WAAA,EAAAA,EAAE9C,UAAY4E,EAAUG,MACjF1H,2BACIU,SAAU,aAAc6G,EAAUa,MAAOb,EAAUa,KAAK1H,SACxDT,MAAwB,QAAjB,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOyC,kBAAUgD,WAAA,EAAAA,EAAE3C,OAC1BsF,MAAOd,EAAUa,KAAKC,MACtBP,SAAU,KAAKA,SACfiB,YAAaxB,EAAUG,SAK3C,EAvCA,CAAoDzB,a,IAyCpDgE,EAAuB/D,YAAcxC,E,waChDtBwG,GCSf,WAUI,aATQ,mBAA6B,WAAM,aACnC,iBAAyB,WAAM,aAC/B,gBAAyB,CAAE/M,EAAG,EAAGC,EAAG,GACpC,cAAuB,CAAED,EAAG,EAAGC,EAAG,GAClC,YAAqB,CAAED,EAAG,EAAGC,EAAG,GAChC,aAAU,WAAM,UAChB,qBAAkB,GAClB,cAAW,EAGf,KAAK+M,YAAc,KAAKA,YAAYjM,KAAK,MACzC,KAAKC,UAAY,KAAKA,UAAUD,KAAK,MAiD7C,OA9CIgM,iCACI9F,EACAgG,EACAC,EACAF,EACAhM,GAEAmM,OAAOC,iBAAiB,YAAa,KAAKJ,aAC1CG,OAAOC,iBAAiB,UAAW,KAAKpM,WACxC,KAAKkM,QAAUA,EACf,KAAKD,WAAaA,EAClB,KAAKI,SAAW,CAAErN,EAAGiN,EAAWjN,EAAGC,EAAGgN,EAAWhN,GACjD,IAAMkC,EAAO+K,IACb,KAAKI,SAAWnL,EAChB,KAAKoL,OAAS,CAAEvN,EAAGiH,EAAMuG,MAAQrL,EAAMlC,EAAGgH,EAAMwG,MAAQtL,GACxD,KAAKuL,cAAgBV,EACrB,KAAKW,YAAc3M,GAGf+L,wBAAR,SAAoB9F,GAChB,IAAM9E,EAAO,KAAK+K,UACZU,EAAY,CACd5N,EAAGiH,EAAMuG,MAAQ,KAAKF,SAAW,KAAKC,OAAOvN,EAC7CC,EAAGgH,EAAMwG,MAAQ,KAAKH,SAAW,KAAKC,OAAOtN,GAEjD,KAAKoN,SAASrN,GAAK4N,EAAU5N,EAC7B,KAAKqN,SAASpN,GAAK2N,EAAU3N,EAC7B,KAAKsN,OAAS,CAAEvN,EAAGiH,EAAMuG,MAAQrL,EAAMlC,EAAGgH,EAAMwG,MAAQtL,GACxD,IAAM0L,EAAmB5G,EAAMxF,OAAmBI,UACnB,kBAApBgM,IACP,KAAKA,gBAAkBA,GAE3B,KAAKH,cAAarF,KACT,KAAK4E,YAAU5E,KACf,KAAKgF,UACVO,EACA,KAAKC,iBAET,KAAKP,SAAWnL,GAGZ4K,sBAAR,SAAkB9F,GACdkG,OAAOW,oBAAoB,YAAa,KAAKd,aAC7CG,OAAOW,oBAAoB,UAAW,KAAK9M,WAC3C,KAAK2M,YAAWtF,KAAM,KAAK4E,YAAU5E,KAAS,KAAKgF,UAAYpG,IAEvE,EA7DA,G,mNCgCe8G,GA5BH,SAACtN,G,YACD,EAAgFA,EAAK,UAA1EuN,EAAqEvN,EAAK,YAA7DwN,EAAwDxN,EAAK,gBAA5CyN,EAAuCzN,EAAK,YAA/B0N,EAA0B1N,EAAK,SAArBK,EAAgBL,EAAK,YACrF,EAAUkG,qBAAWJ,GAAatC,MAEtCmK,OAA0CC,GAChC,QAAX,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOnK,YAAIoE,WAAA,EAAAA,EAAEvD,cAAyB,QAAX,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOb,YAAIqE,WAAA,EAAAA,EAAExD,WAAWiJ,MAClDI,EAAyB,QAAX,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOlK,YAAIsE,WAAA,EAAAA,EAAEzD,WAAWiJ,IAG1C,IAAMlL,EAAK,MACJ,CACCC,SAAU,WACVC,MAAO,UAAiB,EAAdkL,EAAe,MACzBjL,OAAQ,UAAiB,EAAdiL,EAAe,MAC1BrH,KAAM,UAAGoH,EAAe,MACxBrH,IAAK,qBAAcsH,EAAW,QAEpB,QAAX,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOhK,YAAIuE,WAAA,EAAAA,EAAE3D,SACbsJ,GAOP,OAJGD,IACCrL,EAAMyB,gBAAkB4J,GAGrBtL,yBAAKhB,UAAWA,EAAWiB,MAAOA,EAAOhC,YAAaA,K,4dC4JlDwN,GArKf,YASI,WAAY7N,GAAZ,MACIC,YAAMD,IAAM,K,OATRE,cAA2B,IAAIoM,GAC/BpM,eAAekC,IAAM0J,YAErB5L,aAA0B,KAC1BA,cAA2B,KAE3BA,cAAc,EAKlBA,EAAKG,YAAcH,EAAKG,YAAYC,KAAKJ,GACzCA,EAAK4N,oBAAsB5N,EAAK4N,oBAAoBxN,KAAKJ,G,EAsJjE,OAnKwBU,QAgBpBiN,yCACI,KAAKC,uBAGTD,0CACI,KAAKC,uBAGTD,2CACU,MAA+B,KAAK7N,MAAlCoK,EAAG,MAAE0D,EAAmB,sBAC1BC,EAAa,KAAKC,wBAAwB9O,EAAQ+O,MAClDC,EAAc,KAAKF,wBAAwB9O,EAAQiP,OACpD5H,IAAEuE,QAAQiD,EAAY,KAAKA,aAAgBxH,IAAEuE,QAAQoD,EAAa,KAAKA,eACxE,KAAKH,WAAaA,EAClB,KAAKA,WAAaG,EAClBJ,EAAoB1D,EAAK2D,EAAYG,KAI7CL,iCAAYO,EAAkB5H,GACpB,MAA8D,KAAKxG,MAAjEmK,EAAM,SAAEC,EAAG,MAAEqC,EAAO,UAAE4B,EAAmB,sBAAEC,EAAY,eACzDC,EAAc,KAAKP,wBAAwBI,GACjD,GAAIG,GAAeF,GAAuBC,EAAc,CA6CpD,KAAKE,YAAYnO,YAAYmG,EAAO+H,EAAa9B,GA5C3B,SAACD,EAAwBI,GAC3CyB,EAAoB,CAChB5H,OAAQ,UACRS,kBAAmB0F,EACnB7F,iBAAkByF,OAIN,SAChBiC,EACAC,EACAC,GAEA,IACIC,EAA+B,KAC/BD,EAAa3N,SAEY,kBADH2N,EAAa3N,OAAiBI,YAEhDwN,EAAOD,EAAa3N,OAAmBI,UAAUyN,MALlC,2CAQX,OAARD,GAA2B,SAAXA,EAAI,GACpBN,EAAa,CACTQ,YAAaF,EAAI,GACjBG,WAAYH,EAAI,GAChBI,aAAc9P,EAAQ+O,KACtBgB,aAAc9E,EACd+E,YAAa9E,EACb+E,cAAejQ,EAAQiP,QAEb,OAARS,GACNN,EAAa,CACTQ,YAAa3E,EACb4E,WAAY3E,EACZ4E,aAAc9P,EAAQ+O,KACtBgB,aAAcL,EAAI,GAClBM,YAAaN,EAAI,GACjBO,cAAejQ,EAAQiP,MACvBtF,SAAU,WAGlBwF,OAAoBT,QAOhCC,6CAAwBO,GACd,MAAsB,KAAKpO,MAAzB2J,EAAS,YAAElG,EAAI,OACjB2L,EAAe,KAAKA,aAAanD,QACvC,OACKmD,GACDzF,EAAUC,YAAczK,EAAUkQ,SACjCjB,IAAYlP,EAAQ+O,MAAQtE,EAAUC,YAAczK,EAAU0K,WAC9DuE,IAAYlP,EAAQiP,OAASxE,EAAUC,YAAczK,EAAUmQ,SAEzD,KAGJ,CACH/P,EAAG6O,IAAYlP,EAAQiP,MAAQ1K,EAAKlB,MAAQkB,EAAKnB,SAAS/C,EAAIkE,EAAKnB,SAAS/C,EAC5EC,EAAGiE,EAAKnB,SAAS9C,EAAI4P,EAAaG,UAAYH,EAAaI,aAAe,IAIlF3B,8BAAA,WACU,EAAmE,KAAK7N,MAAtE2J,EAAS,YAAElG,EAAI,OAAE0G,EAAM,SAAEC,EAAG,MAAEqF,EAA8B,iCAGhEC,EAAuC,KAU3C,OARID,IACAC,EAAmBD,EAA+B,KAAKzP,QAGtD0P,IACDA,ECnIN,SAAmC1P,GAC7B,MAAcA,EAAK,UAC3B,MAA6B,WAA1B2J,EAAU4D,YACFnL,kBAACiK,EAAsBzE,KAAK5H,IAET,cAA1B2J,EAAU4D,YACHnL,kBAAC2J,EAAwBnE,KAAK5H,IAEZ,WAA1B2J,EAAU4D,YACFnL,kBAACyI,EAAsBjD,KAAK5H,IAET,cAA1B2J,EAAU4D,YACHnL,kBAAC6H,EAAQrC,KAAK5H,IAEK,WAA1B2J,EAAU4D,YACHnL,kBAACgJ,EAAsBxD,KAAK5H,IAET,WAA1B2J,EAAU4D,YACHnL,kBAACwJ,EAAsBhE,KAAK5H,IAGhCoC,kBAACsH,EAAuB9B,KAAK5H,ID8GT2P,CAAyB,KAAK3P,QAIjDoC,yBACIhB,UAAU,kBACVI,IAAK,KAAK4N,aACV/M,MAAO,CACHC,SAAU,WACVsN,WAAY,IAGf,CAACzQ,EAAUmQ,SAAUnQ,EAAU0Q,WAAWxO,SAASsI,EAAUC,YAC1DxH,kBAACkL,GAAG,CACAlM,UAAW,eAAQ+I,EAAM,eAAAvE,OAAcwE,EAAG,SAC1CmD,YAAa5D,EAAU4D,YACvBE,YAAa,KAAKA,YAClBD,iBAAkB,KAAKC,YACvBpN,YAAa,SAACS,GAAM,SAAKT,YAAYnB,EAAQ+O,KAAMnN,IACnD4M,SAAU,KAAK1N,MAAM2J,UAAUmG,eAItC,CAAC3Q,EAAU0K,UAAW1K,EAAU0Q,WAAWxO,SAASsI,EAAUC,YAC3DxH,kBAACkL,GAAG,CACAlM,UAAW,eAAQ+I,EAAM,eAAAvE,OAAcwE,EAAG,UAC1CmD,YAAa5D,EAAU4D,YACvBE,YAAa,KAAKA,YAClBD,gBAAiB/J,EAAKlB,MAAQ,KAAKkL,YACnCpN,YAAa,SAACS,GAAM,SAAKT,YAAYnB,EAAQiP,MAAOrN,IACpD4M,SAAU,KAAK1N,MAAM2J,UAAUoG,gBAIvC3N,yBACIhB,UAAU,kBACViB,MAAO,CACH4B,SAAU,SACVC,YAAgC,EAAnB,KAAKuJ,YAClBnI,aAAiC,EAAnB,KAAKmI,cAGtBiC,KAKrB,EAnKA,CAAwBrH,a,mNEvBV,SAAU2H,GAAOnI,G,QAACpE,EAAI,OACxB,EAAUyC,qBAAWJ,GAAatC,MAE1C,OACIpB,yBAAKhB,UAAU,8BAA8BiB,MAAK,SAAgB,QAAV,IAAMoB,YAAIqE,WAAA,EAAAA,EAAEjE,QAAqB,QAAV,IAAKL,aAAKuE,WAAA,EAAAA,EAAElE,SACtFJ,EAAKqG,M,uNCLJ,SAAUmG,GAAOpI,G,QAACpE,EAAI,OACxB,EAAUyC,qBAAWJ,GAAatC,MAE1C,OAAOpB,yBAAKhB,UAAU,8BAA8BiB,MAAK,SAAiB,QAAX,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOoB,YAAIqE,WAAA,EAAAA,EAAE1D,QAAsB,QAAX,EAAI,OAAJ,QAAI,IAAJ,OAAI,EAAJ,EAAMZ,aAAKuE,WAAA,EAAAA,EAAE3D,U,mrBCgCxG,eAII,WAAYpE,GAAZ,MACIC,YAAMD,IAAM,K,OAJRE,cAA2B,IAAIoM,GAC/BpM,eAAiC,GAKrCA,EAAKG,YAAcH,EAAKG,YAAYC,KAAKJ,GACzCA,EAAK4N,oBAAsB5N,EAAK4N,oBAAoBxN,KAAKJ,G,EA8GjE,OAtH0BU,QAWtBsP,2CAAsB5J,GACZ,MAA2B,KAAKtG,MAA9ByD,EAAI,OACZ,OAD4B,mBACF6C,EAAU6J,iBAAmB5J,IAAEuE,QAAQrH,EAAM6C,EAAU7C,OAGrFyM,iCAAY1J,GACF,MAAkE,KAAKxG,MAArEmK,EAAM,SAAEsC,EAAO,UAAE2D,EAAe,kBAAEC,EAAU,aAAEC,EAAa,gBACnE,GAAKF,GAAoBC,GAAeC,EAAxC,CAMA,IAAIC,GAAY,EACZC,EAAe,GACnB,GAAIhK,EAAMxF,OAAQ,CACN,MAAcwF,EAAMxF,OAAiBI,UACpB,kBAAdA,GAA0BA,EAAUC,SAAS,qBACpDmP,EAAepP,EACfmP,GAAY,GAGpB,IAAIA,EAAJ,CAMAH,EAAgBjG,EAAQ3D,EAAMzF,UAI9B,IAaMW,EAAO+K,IACPD,EAAa,CAAEjN,EAAGiH,EAAMuG,MAAQrL,EAAMlC,EAAGgH,EAAMwG,MAAQtL,GAC7D,KAAK8M,YAAYnO,YAAYmG,EAAOgG,EAAYC,GAf1B,SAACgC,EAAmBgC,EAAuBtD,GACzDqD,EAAanP,SAAS,eACtBgP,EAAW,EAAG,EAAGlD,EAAU5N,GAE3B8Q,EAAWlD,EAAU5N,EAAG4N,EAAU3N,EAAG,MAKzB,SAACkR,EAAkBC,EAAkBC,GACrDN,EAAcnG,GAAS/K,EAAkBsR,EAAMC,GAAOC,EAAU7P,gBAQxEmP,yCAAoB9F,EAAa2D,EAAyBG,GAChD,MAA6C,KAAKlO,MAAhDmK,EAAM,SAAE1G,EAAI,OAAEoN,EAAwB,2BAC9C,KAAKC,aAAa1G,GAAO,CAAC2D,EAAYG,GACtC,IAAM6C,EAA8B7H,OAAOC,KAAK1F,EAAKqB,YAAYuE,QAAO,YACpE,OAAO5F,EAAKqB,WAAWgF,GAAMF,YAAczK,EAAUkQ,WACtD2B,OACC9H,OAAOC,KAAK,KAAK2H,cAAcE,SAAWD,GAC1CF,EAAyB1G,EAAQ,KAAK2G,eAI9CZ,8BAAA,I,YAAA,OACY,EAAU,KAAKvJ,QAAOnD,MACxB,EAAmC,KAAKxD,MAAtCmK,EAAM,SAAE1G,EAAI,OAAE0M,EAAc,iBAC9B,EAAoE,KAAKnQ,MAAvEsO,EAAY,eAAED,EAAmB,sBAAE5B,EAAO,UAAEpC,EAAiB,oBAC7D,EAAmC,KAAKrK,MAAKyP,+BAE/CpN,EAAwB,CAC1BC,SAAU,WACVC,MAAO,UAAGkB,EAAKlB,MAAK,MACpB4D,IAAK,UAAG1C,EAAKnB,SAAS9C,EAAC,MACvB4G,KAAM,UAAG3C,EAAKnB,SAAS/C,EAAC,OAGtB0R,EAAyBd,EAC1BvI,SAAgB,QAAX,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOnE,YAAIoE,WAAA,EAAAA,EAAEnE,UAAwB,QAAX,EAAI,OAAJ,QAAI,IAAJ,OAAI,EAAJ,EAAMF,aAAKsE,WAAA,EAAAA,EAAEpE,UAC5CkE,SAAgB,QAAX,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOnE,YAAIsE,WAAA,EAAAA,EAAElD,YAA0B,QAAX,EAAI,OAAJ,QAAI,IAAJ,OAAI,EAAJ,EAAMrB,aAAKwE,WAAA,EAAAA,EAAEnD,YACnD,OACIzC,yBACIhB,UAAU,kBACViB,MAAK,SAAOA,GAAU4O,GACtB5Q,YAAa,KAAKA,YAClBa,GAAI,eAAQiJ,IAEZ/H,kBAAC4N,GAAM,CAACvM,KAAMA,IAEdrB,yBAAKC,MAAK,SAAiB,QAAX,EAAK,OAAL,QAAK,IAAL,OAAK,EAAL,EAAOoB,YAAIwE,WAAA,EAAAA,EAAE9D,MAAoB,QAAX,EAAI,OAAJ,QAAI,IAAJ,OAAI,EAAJ,EAAMX,aAAK0E,WAAA,EAAAA,EAAE/D,OAC9C+E,OAAOC,KAAK1F,EAAKqB,YAAYyE,KAAI,SAACD,GAAQ,OACvClH,kBAACyL,GAAS,CACN1D,OAAQA,EACRC,IAAKd,EACLmD,QAASA,EACThJ,KAAMA,EACN6F,IAAKA,EACLK,UAAWlG,EAAKqB,WAAWwE,GAC3BgF,aAAcA,EACdD,oBAAqBA,EACrBhE,kBAAmBA,EACnByD,oBAAqB5N,EAAK4N,oBAC1B2B,+BAAgCA,QAI5CrN,kBAAC6N,GAAM,CAACxM,KAAMA,MAI9B,EAtHA,CAA0B4E,aAwH1B6H,GAAK5H,YAAcxC,E,meCrInB,YAGI,WAAY9F,GAAZ,MACIC,YAAMD,IAAM,K,OAEZE,EAAKkQ,gBAAkBlQ,EAAKkQ,gBAAgB9P,KAAKJ,GACjDA,EAAKmQ,WAAanQ,EAAKmQ,WAAW/P,KAAKJ,GACvCA,EAAKoQ,cAAgBpQ,EAAKoQ,cAAchQ,KAAKJ,G,EAiFrD,OAzFwCU,QAWpCsQ,qCAAgBhQ,EAAYH,GAA5B,WACU,EAAkC,KAAKf,MAArCgJ,EAAa,gBAAEhH,EAAY,eAC7BmP,EAAY,CAAEjQ,GAAE,EAAEuI,KAAM,QAC1B2H,GAAkB,EACtBpI,EAAcqI,SAAQ,SAACC,GACfA,EAAKpQ,KAAOiQ,EAAUjQ,IAAMoQ,EAAK7H,OAAS0H,EAAU1H,OACpD2H,GAAkB,MAGtBA,IAGJ,KAAKG,oBAAsBJ,EAC3BnI,EAAcqI,SAAQ,SAACC,GACfA,EAAKpQ,KAAOA,GAAoB,SAAdoQ,EAAK7H,OACvBvJ,EAAKqR,yBAAsB3D,MAG/B7M,GAAY,KAAKwQ,qBACjBvP,EAAamP,EAAWpQ,GAEvBA,GACDiB,EAAamP,EAAWpQ,KAIhCmQ,gCAAW5J,EAAiBG,EAAiB+J,GAA7C,WAC8B,KAAKxR,MAAKgJ,cAEtBqI,SAAQ,SAACC,GACnB,GAAkB,SAAdA,EAAK7H,KAAiB,CAChB,MAAwBvJ,EAAKF,MAA3ByR,EAAK,QAAEpB,EAAU,aACnBqB,EAAOD,EAAMH,EAAKpQ,IAAIoB,SAAS/C,EAAI+H,EACnCqK,EAAOF,EAAMH,EAAKpQ,IAAIoB,SAAS9C,EAAIiI,EACnCmK,EAAWH,EAAMH,EAAKpQ,IAAIqB,MAAQiP,EACxCnB,EAAWiB,EAAKpQ,GAAIwQ,EAAMC,EAAMC,EAAW,IAAMA,EAAW,UAKxEV,mCAAchQ,EAAY2Q,EAAuB9Q,GACrC,MAAiB,KAAKf,MAAKgC,aAC7BmP,EAAY,CAAEjQ,GAAE,EAAEuI,KAAM,SACzBoI,GAAiB9Q,KAEV8Q,IAAgB9Q,GAAawF,IAAEuE,QAAQqG,EAAW,KAAKI,uBAD/DvP,EAAamP,EAAWpQ,GAI5B,KAAKwQ,yBAAsB3D,GAG/BsD,8BAAA,WACU,EAA2B,KAAKlR,MAA9ByR,EAAK,QAAEzI,EAAa,gBACtB,EAA2E,KAAKhJ,MAA9EyM,EAAO,UAAE6B,EAAY,eAAED,EAAmB,sBAAEwC,EAAwB,2BACtE,EAAwD,KAAK7Q,MAA3DqK,EAAiB,oBAAEoF,EAA8B,iCAEzD,OACIrN,oCACK8G,OAAOC,KAAKsI,GAAOlI,KAAI,SAACD,GAAQ,OAC7BlH,kBAAC8N,GAAI,CACD/F,OAAQb,EACRA,IAAKA,EACL7F,KAAMgO,EAAMnI,GACZ6G,eAAgB5J,IAAEiD,KAAKR,EAAe,CAAE9H,GAAIoI,EAAKG,KAAM,SACvDgD,QAASA,EACT2D,gBAAiBlQ,EAAKkQ,gBACtBC,WAAYnQ,EAAKmQ,WACjBC,cAAepQ,EAAKoQ,cACpBhC,aAAcA,EACdD,oBAAqBA,EACrBwC,yBAA0BA,EAC1BxG,kBAAmBA,EACnBoF,+BAAgCA,SAMxD,EAzFA,CAAwCrN,IAAMiG,W,+pBCP9CyJ,cAwBA,IC/CYC,GDuRGb,GAxOf,YAII,WAAYlR,GAAZ,MACIC,YAAMD,IAAM,K,OAJRE,oBAA4D,GAC5DA,aAAakC,IAAM0J,YAIvB5L,EAAKC,MAAQ,CACT4I,eAAgB,IAGpB7I,EAAKuM,QAAUvM,EAAKuM,QAAQnM,KAAKJ,GACjCA,EAAKmO,oBAAsBnO,EAAKmO,oBAAoB/N,KAAKJ,GACzDA,EAAK2Q,yBAA2B3Q,EAAK2Q,yBAAyBvQ,KAAKJ,GACnEA,EAAK8B,aAAe9B,EAAK8B,aAAa1B,KAAKJ,GAC3CA,EAAKoO,aAAepO,EAAKoO,aAAahO,KAAKJ,GAC3CA,EAAKmK,kBAAoBnK,EAAKmK,kBAAkB/J,KAAKJ,GACrDA,EAAKmQ,WAAanQ,EAAKmQ,WAAW/P,KAAKJ,GACvCA,EAAK8R,oBAAsB9R,EAAK8R,oBAAoB1R,KAAKJ,GACzDA,EAAK+R,oBAAsB/R,EAAK+R,oBAAoB3R,KAAKJ,G,EAoNjE,OAtOyBU,QAqBrBsQ,yCACI,KAAKgB,uBAGThB,0CACI,KAAKgB,uBAGThB,kCAAaC,EAAiCpQ,GACpC,MAAqC,KAAKf,MAAxCgJ,EAAa,gBAAEmJ,EAAe,kBACtC,GAAKhB,GAAcpQ,GAEZ,GAAIoQ,GAAapQ,GAAYwF,IAAEiD,KAAKR,EAAemI,GAAY,CAClE,IAAMiB,EAAY,MAAOpJ,GAAa,GAClCqJ,GAAiB,EACrBrJ,EAAcqI,SAAQ,SAACC,EAAMgB,GACrBhB,EAAKpQ,KAAOiQ,EAAUjQ,IAAMoQ,EAAK7H,OAAS0H,EAAU1H,OACpD4I,EAAgBC,OAGD,IAAnBD,GACAD,EAAaG,OAAOF,EAAe,GAEvCF,EAAgBC,QACb,GAAIjB,IAAc5K,IAAEiD,KAAKR,EAAemI,GAAY,CACnDiB,EAAY,MAAOpJ,GAAa,GAC/BjI,IACDqR,EAAe,IAEnBA,EAAaI,KAAKrB,GAClBgB,EAAgBC,SAnBhBD,EAAgB,KAqBfpR,GAAYoQ,GACbgB,EAAgB,CAAChB,KAIzBD,yCAAoBuB,GAChB,KAAKnR,SAAS,CACV2H,YAAawJ,KAIrBvB,8CAAyB/G,EAAgB2G,GACrC,KAAK4B,kBAAkBvI,GAAU2G,GAGrCI,kCAAazM,GACD,MAAiB,KAAKzE,MAAKsO,aAE/BA,GACA7J,EAAKuK,eAAiBvK,EAAK0K,eAC3B1K,EAAKqK,cAAgBrK,EAAKwK,cAE1BX,EAAa7J,IAIrByM,gCAAWhQ,EAAYwQ,EAAcC,EAAcC,GACvC,MAAe,KAAK5R,MAAKqQ,WAC7BA,GACAA,EAAWnP,EAAIwQ,EAAMC,EAAMC,IAInCV,uCAAkB/G,EAAgBC,EAAaT,GACnC,MAAsB,KAAK3J,MAAKqK,kBACpCA,GACAA,EAAkBF,EAAQC,EAAKT,IAIvCuH,+BAEI,OADwB,KAAKlR,MAAKkC,YACfR,MAGvBwP,2CAAA,WACY,EAAU,KAAKlR,MAAKoJ,MACpB,EAAmB,KAAKjJ,MAAK4I,eACjC4J,GAAoB,EAClBC,EAAoBtI,YAAQvB,GAAgB,SAACwB,GAE/CrB,OAAOC,KAAKC,GAAOiI,SAAQ,SAAC/H,GACxB,IAAM7E,EAAO2E,EAAME,GACnB,GACI7E,EAAKqK,eAAe5O,EAAKwS,qBAAsB,GAC/CjO,EAAKwK,gBAAgB/O,EAAKwS,qBAAsB,EAFpD,CAMA,IAAMG,EAAS3S,EAAKwS,kBAAkBjO,EAAKqK,aAAarK,EAAKsK,YACvD+D,EAAS5S,EAAKwS,kBAAkBjO,EAAKwK,cAAcxK,EAAKyK,aAC9D,GAAI2D,GAAUC,EAAQ,CAClB,IAAM/L,EAAmB8L,EAAOpO,EAAKuK,eAAiB9P,EAAQ+O,KAAO,EAAI,GACnE/G,EAAoB4L,EAAOrO,EAAK0K,gBAAkBjQ,EAAQ+O,KAAO,EAAI,GACvElH,GAAoBG,IAEdoC,KAAOiB,GACRnL,EAAkBmL,EAAMjB,GAAKvC,iBAAkBA,IAC/C3H,EAAkBmL,EAAMjB,GAAKpC,kBAAmBA,KAEjDqD,EAAMjB,GAAO,CAAE7C,OAAQ6C,EAAKvC,iBAAgB,EAAEG,kBAAiB,GAC/DyL,GAAoB,SAMpCzJ,OAAOC,KAAKJ,GAAgBsI,SAAQ,SAAC/H,GAC3BA,KAAOF,WACFmB,EAAMjB,GACbqJ,GAAoB,SAI5BA,GACA,KAAKrR,SAAS,CACVyH,eAAgB6J,KAK5B1B,2CACU,MAAyB,KAAKlR,MAA5ByR,EAAK,QAAEvP,EAAW,cACpB6Q,EAAa,KAAKA,WAAW9G,QACnC,IAAI8G,EACA,OAAOtB,EAGX,IACMuB,GAAS9Q,EAAYN,cAAcrC,EAAI2C,EAAYR,KAD1C,GAETuR,GAAS/Q,EAAYN,cAAcpC,EAAI0C,EAAYR,KAF1C,GAGTwR,EAAOF,EAAQD,EAAWvB,YAActP,EAAYR,KAASyR,IAC7DC,EAAOH,EAAQF,EAAWvD,aAAetN,EAAYR,KAASyR,IAC9DE,EAAgB,GAEhBC,EAAe,SAAC7I,EAAe8I,EAAaC,GAAgB,OAAC/I,GAAS8I,GAAS9I,GAAS+I,GAa9F,OAXAtK,OAAOC,KAAKsI,GAAOJ,SAAQ,YACvB,IAAM5N,EAAOgO,EAAMnI,GACbmK,EAAWH,EAAaN,EAAMvP,EAAKnB,SAAS/C,EAAGkE,EAAKnB,SAAS/C,EAAIkE,EAAKlB,QAC3D+Q,EAAa7P,EAAKnB,SAAS/C,EAAGyT,EAAME,GAC/CQ,EAAWJ,EAAaL,EAAMxP,EAAKnB,SAAS9C,EAAGiE,EAAKnB,SAAS9C,EAAI,MACtD8T,EAAa7P,EAAKnB,SAAS9C,EAAGyT,EAAMG,GAClDK,GAAYC,IACXL,EAAc/J,GAAO7F,MAItB4P,GAGXnC,yCAAoByC,GACR,MAAU,KAAK3T,MAAKoJ,MAEtBwK,EAAgB,GAQtB,OAPA1K,OAAOC,KAAKC,GAAOiI,SAAQ,YACvB,IAAM5M,EAAO2E,EAAME,IAChBqK,EAAkBtS,SAASoD,EAAKqK,cAAgB6E,EAAkBtS,SAASoD,EAAKwK,iBAC/E2E,EAActK,GAAO7E,MAItBmP,GAGX1C,8BACU,MAAwC,KAAKlR,MAA3CgJ,EAAa,gBAAE9G,EAAW,cAAEsB,EAAK,QACnC,EAAoD,KAAKxD,MAAvDyB,EAAa,gBAAEgO,EAA8B,iCAC/C,EAAkC,KAAKtP,MAArC8I,EAAW,cAAEF,EAAc,iBAE7B8K,EAAgB,KAAK7B,sBACrB8B,EAAgB,KAAK7B,oBAAoB/I,OAAOC,KAAK0K,IAE3D,OACIzR,kBAAC0D,EAAaiO,SAAQ,CAACtJ,MAAOjH,GAASwC,GACnC5D,yBAAKC,MAAO,CAACE,MAAO,OAAQC,OAAQ,QAAShB,IAAK,KAAKuR,YACnD3Q,kBAAC6D,EAAU,CAAC/D,YAAaA,GACrBE,kBAACvB,EAAO,CACJqB,YAAaA,EACbT,cAAeA,EACfO,aAAc,KAAKA,cAEnBI,kBAAC0G,EAAU,CACPM,MAAO0K,EACP/K,eAAgBA,EAChBE,YAAaA,EACbD,cAAeA,EACfhH,aAAc,KAAKA,eAEvBI,kBAAC4R,GAAU,CACPvC,MAAOoC,EACPpH,QAAS,KAAKA,QACd4D,WAAY,KAAKA,WACjB/B,aAAc,KAAKA,aACnBD,oBAAqB,KAAKA,oBAC1BhE,kBAAmB,KAAKA,kBACxBwG,yBAA0B,KAAKA,yBAC/B7H,cAAeA,EACfhH,aAAc,KAAKA,aACnByN,+BAAgCA,SAQhE,EAtOA,CAAyBpH,aE5CnB4L,GAAW,SAACjU,GACN,MAA8CA,EAAK,KAA7CoI,EAAwCpI,EAAK,QAApCkU,EAA+BlU,EAAK,aAAtBmU,EAAiBnU,EAAK,aAC3D,OACIoC,yBAAKgG,QAASA,EAAS8L,aAAcA,EAAcC,aAAcA,GAC5DrK,IAgCEsK,GAvBM,SAACpU,GACV,MAAUA,EAAK,MACvB,OACIoC,yBAAKC,MAAO,CAAEgS,KAAM,EAAGC,UAAW,WAC9BlS,yBAAKC,MAAO,CAAEG,OAAQ,UACjB0G,OAAOC,KAAKoL,GAAOhL,KAAI,SAACD,GACrB,IAAMgI,EAAOiD,EAAMjL,GACnB,OACIlH,kBAAC6R,GAAQ,CACLnK,KAAMwH,EAAKxH,KACX1B,QAASkJ,EAAKlJ,QACd8L,aAAc5C,EAAK4C,aACnBC,aAAc7C,EAAK6C,aACnB7K,IAAKA,UClBpBkL,GAAsB,SAACxU,GACxB,MAAqBA,EAAK,UAAfuU,EAAUvU,EAAK,MAE5B,EAA8BoC,IAAMqS,SAAiB,IAApDC,EAAU,KAAEC,EAAa,KAE1BzK,EAAW9H,IAAMkJ,aACnB,SAAC9E,GACGmO,EAAcnO,EAAMyE,cAAcR,SAEtC,CAACiK,IAGCE,EAAgBtK,YAAQiK,GAAO,SAAChK,GAClCrB,OAAOC,KAAKoL,GAAOlD,SAAQ,SAACnQ,GACxB,IAAM4I,EAAOyK,EAAMrT,GAAI4I,KAAK+K,cACtBC,EAAeJ,EAAWG,cACb,KAAfH,GAAsB5K,EAAKzI,SAASyT,WAC7BvK,EAAMrJ,SAKzB,OACIkB,yBAAKC,MAAO,CAAE6I,QAAS,OAAQ6J,cAAe,SAAU9Q,SAAU,SAC7D+Q,EACD5S,6BACAA,2BAAOqI,MAAOiK,EAAYxK,SAAUA,EAAUiB,YAAY,mBAC1D/I,kBAACgS,GAAY,CAACG,MAAOK,M,mNC3B3BK,GAAoB,SAACjV,GACf,MAAyCA,EAAK,KAAxCyP,EAAmCzP,EAAK,+BAChDkV,EAAgB9S,IAAM+S,OAA2B,MAEnDC,EAA+B,KACnC,GAAI3R,GAAQyR,GAAiBA,EAAcjJ,QAAS,CAChD,IAAMoJ,EAASH,EAAcjJ,QAAQqJ,wBAC/BC,EAAa,MAAQ9R,GAC3B8R,EAAcjT,SAAW,CAAE/C,EAAG,GAAIC,EAAG,IACrC+V,EAAchT,MAAQ8S,EAAO9S,MAAQ,GACrC6S,EAAW3R,EACPrB,kBAAC8N,GAAI,CACD/F,OAAO,IACPsC,QAAS,WAAM,UACf0D,gBAAc,EACd1M,KAAM8R,EACNlL,kBAAmB,WAAM,aACzBwG,yBAA0B,WAAM,aAChCpB,+BAAgCA,IAEpC,KAGR,OACIrN,yBACIZ,IAAK0T,EACL7S,MAAO,CACHC,SAAU,WACVkT,SAAU,UACVvR,SAAU,SACV1B,MAAO,QACPC,OAAQ,UAGX4S,IAYAK,GAAwB,SAACzV,GAC1B,MAA+EA,EAAK,YAAvE0V,EAAkE1V,EAAK,gBAAtDyP,EAAiDzP,EAAK,+BAAtB2V,EAAiB3V,EAAK,aAEtF,EAAgDoC,IAAMqS,SAAiB,IAAtEmB,EAAmB,KAAEC,EAAsB,KAE5CtB,EAAyC,GAC/CrL,OAAOC,KAAK2M,GAAazE,SAAQ,SAACnQ,GAC9BqT,EAAMrT,GAAM,CACR4I,KAAMgM,EAAY5U,GAAI4I,KACtBoK,aAAc,WACV2B,EAAuB3U,IAE3BiT,aAAc,WACV0B,EAAuB,KAE3BzN,QAAS,WACLsN,EAAgBxU,QAK5B,IAAMgT,EAAe9R,IAAMkJ,aAAY,WACnCqK,GAAa,KACd,CAACA,IAEEI,EAAgB3T,IAAMkJ,aAAY,WACpCqK,GAAa,KACd,CAACA,IAEJ,OACIvT,yBAAKC,MAAO,CAAC6I,QAAS,QAASiJ,aAAc4B,EAAe7B,aAAcA,GACtE9R,6BACIA,kBAACoS,GAAmB,CAACQ,UAAU,iBAAiBT,MAAOA,KAE3DnS,kBAAC6S,GAAiB,CACdxR,KAAMmS,EAAsBE,EAAYF,GAAuB,KAC/DnG,+BAAgCA,MCnFnCuG,GAAoC,SAC7ChW,GAEQ,MAAoCA,EAAK,aAA3BiW,EAAsBjW,EAAK,kBAE3CuU,EAAyC,GAC/CA,EAAM2B,iBAAmB,CACrBpM,KAAM,mBACN1B,QAAS,WACL6N,MAIR,IAAM/B,EAAe9R,IAAMkJ,aAAY,WACnCqK,GAAa,KACd,CAACA,IAEEI,EAAgB3T,IAAMkJ,aAAY,WACpCqK,GAAa,KACd,CAACA,IAEJ,OACIvT,yBAAK+R,aAAc4B,EAAe7B,aAAcA,GAC5C9R,kBAACoS,GAAmB,CAACQ,UAAU,uBAAuBT,MAAOA,M,gBCtBzE,SAAS4B,GAAehM,EAAgBf,GACpC,IAAMgN,EAA8B,GAOpC,OANAlN,OAAOC,KAAKC,GAAOiI,SAAQ,SAACgF,GACXjN,EAAMiN,GACVpH,eAAiB9E,IACtBiM,EAAYC,GAAWjN,EAAMiN,OAG9BD,EAGX,SAASE,GAAenM,EAAgBf,GACpC,IAAMgN,EAA8B,GAOpC,OANAlN,OAAOC,KAAKC,GAAOiI,SAAQ,SAACgF,GACXjN,EAAMiN,GACVvH,cAAgB3E,IACrBiM,EAAYC,GAAWjN,EAAMiN,OAG9BD,EAGX,SAASG,GAA6BC,GAClC,IAAMC,EAAsC,GAG5C,OAFAvN,OAAOC,KAAKqN,GAAiBnF,SAAQ,SAAAlH,GAAM,OAAIsM,EAAgBjE,KAAK,CAACrI,EAAQqM,EAAgBrM,QAC7FsM,EAAgBC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE,GAAKC,EAAE,MACjCH,EAAgBlN,KAAI,mCAAEY,EAAF,iBAAiBA,KAGhD,SAAS0M,GAAsB1M,EAAgBf,EAAuB0N,EAAeN,GACjFA,EAAgBrM,GAAUA,KAAUqM,EAAkB3W,KAAK2T,IAAIsD,EAAON,EAAgBrM,IAAW2M,EACjG,IAAMC,EAAcZ,GAAehM,EAAQf,GAC3CF,OAAOC,KAAK4N,GAAa1F,SAAQ,SAAAgF,GAC7BQ,GAAsBzN,EAAMiN,GAASvH,YAAa1F,EAAO0N,EAAQ,EAAGN,O,SL5ChEzE,K,gBAAAA,E,cAAAA,E,gBAAAA,E,sBAAAA,E,gBAAAA,E,cAAAA,E,sBAAAA,E,iBAAAA,E,gBAAAA,E,cAAAA,E,sBAAAA,E,UAAAA,E,UAAAA,E,cAAAA,E,kBAAAA,E,oCAAAA,E,sCAAAA,E,iCAAAA,E,kBAAAA,E,yBAAAA,E,cAAAA,E,UAAAA,E,qBAAAA,E,UAAAA,E,gBAAAA,E,cAAAA,E,mCAAAA,E,uCAAAA,E,0BAAAA,Q,KKwDL,IAAMiF,GAAb,kDACcC,MAA6B,GAD3C,KAEcC,kBAA2C,GAFzD,KAGcC,cAAgC,GAH9C,KAIcC,gBAAyB,GAJvC,0CAMI,WACIC,KAAKJ,MAAQ,GACbI,KAAKH,kBAAoB,GACzBG,KAAKF,cAAgB,GACrBE,KAAKD,gBAAkB,KAV/B,uBAaI,WACI,OAAOC,KAAKD,gBAAgBE,QAdpC,6BAiBI,SAAgBnN,EAAgBf,EAAuBmO,GAEnD,IAAMC,EAAUtO,OAAOC,KAAKC,GAAOqO,MAAK,SAACnO,GACrC,IAAM7E,EAAO2E,EAAME,GACnB,OAAO7E,EAAKwK,eAAiB9E,GAA+B,MAArB1F,EAAKyK,eAEhD,GAAKsI,EAAL,CAKA,IAAME,EAAStO,EAAMoO,GAAS1I,YAC9BuI,KAAKF,cAAcQ,QAAQ,CACvBC,cAAeF,EACfG,OAAQN,EACRL,kBAAmB,GACnBY,qBAAsB,GACtBC,aAAc,CAAC,CAACL,GAAQ,WAVxBM,QAAQC,IAAI,gBAxBxB,0BAsCI,SAAaxG,EAAuBrI,GAAwB,IAAD,OACjDoN,EAA4C,GAClDtN,OAAOC,KAAKsI,GAAOJ,SAAQ,SAAAlH,GACvB0M,GAAsB1M,EAAQf,EAAO,EAAGoN,MAEpBD,GAA6BC,GACrCnF,SAAQ,SAAA6G,GAAC,OAAI,EAAKjB,MAAMzE,KAAK,CAAC0F,GAAG,SA5CzD,2BA+CI,SAAc/N,EAAgBsH,EAAuBrI,GAAwB,IAAD,OAClEoN,EAA4C,GAClDK,GAAsB1M,EAAQf,EAAO,EAAGoN,GACxC,IAAMC,EAAkBF,GAA6BC,GAEjDkB,EAAS,GAQb,GAPAjB,EAAgBpF,SAAQ,SAAA8G,GAChB1G,EAAM0G,GAAGrO,OAASiI,GAASqG,qBAC3BV,EAASS,MAKF,KAAXT,EAAe,CAEf,IAAMW,EAAc/B,GAAeoB,EAAQtO,GACvCkP,EAAQ,GACZpP,OAAOC,KAAKkP,GAAahH,SAAQ,SAAA8G,GACD,MAAxB/O,EAAM+O,GAAGpJ,aACTuJ,EAAQlP,EAAM+O,GAAGlJ,iBAGzB,IAAMsJ,EAAM9G,EAAM6G,GAElB,GAAIC,GAAOA,EAAIzO,OAASiI,GAASyG,kBAAmB,CAChD,IAAMC,EAAUF,EAAIzT,WAAW,GAAK0F,KAAKC,MACnCiO,EAAmC,GAEzCxP,OAAOC,KAAKsI,GAAOJ,SAAQ,SAAA8G,GACnB1G,EAAM0G,GAAGrO,OAASiI,GAAS4G,kBAAoBlH,EAAM0G,GAAGrT,WAAW,GAAK0F,KAAKC,QAAUgO,GACvFC,EAAuBlG,KAAK2F,GAE5B1G,EAAM0G,GAAGrO,OAASiI,GAAS6G,KAAOnH,EAAM0G,GAAGrT,WAAW,GAAK0F,KAAKC,QAAUgO,GAC1EC,EAAuBlG,KAAK2F,GAE5B1G,EAAM0G,GAAGrO,OAASiI,GAAS8G,YAAcpH,EAAM0G,GAAGrT,WAAW,GAAK0F,KAAKC,QAAUgO,GACjFC,EAAuBlG,KAAK2F,MAGpCO,EAAuBrH,SAAQ,SAAA8G,GAAC,OAAI,EAAKW,cAAcX,EAAG1G,EAAOrI,YAKrEqN,EAAgBpF,SAAQ,SAAA6G,GAAC,OAAI,EAAKjB,MAAMzE,KAAK,CAAC0F,GAAG,SA3F7D,oBA+FI,SAAOzG,EAAuBrI,EAAuB2P,GACjD,KAAO1B,KAAKF,cAAcnG,OAAS,GAAKqG,KAAKJ,MAAMjG,OAAS,GACpDqG,KAAKF,cAAcnG,OAAS,EAC5BqG,KAAK2B,gBAAgBvH,EAAOrI,EAAO2P,GAEnC1B,KAAK4B,QAAQxH,EAAOrI,EAAO2P,KApG3C,6BAyGI,SAAgBtH,EAAuBrI,EAAuB2P,GAC1D,IAAMG,EAAe7B,KAAKF,cAAc,GAClChN,EAAS+O,EAAanB,aAAa,GAAG,GAE5C,GAAI5N,EAAQ,CACR,IAAM1G,EAAOgO,EAAMtH,GACbgP,EAAe7C,GAAenM,EAAQf,GACtCgQ,EAAelQ,OAAOC,KAAKgQ,GAAc5P,KAAI,SAAA4O,GAC/C,OAAO/O,EAAM+O,GAAGlJ,gBAGhBoK,GAAiB,EA8BrB,GA7BI5V,EAAKqG,OAASiI,GAASuH,OACvBpQ,OAAOC,KAAKgQ,GAAc9H,SAAQ,SAAAkI,GAC9B,GAAmC,MAA/BnQ,EAAMmQ,GAAUxK,WAChB,GAAIwK,KAAYL,EAAahC,kBAAmB,CAC5C,IAAMsC,EAAMN,EAAahC,kBAAkBqC,GAC3CrQ,OAAOC,KAAKgQ,GAAc9H,SAAQ,SAAA8G,GAC9B,GAA6B,MAAxB/O,EAAM+O,GAAGpJ,YAAsByK,GAAiC,MAAxBpQ,EAAM+O,GAAGpJ,aAAuByK,EAAM,CAC/E,IAAMtY,EAAKkI,EAAM+O,GAAGlJ,aACfiK,EAAapB,qBAAqBzW,SAASH,KAC5CmY,GAAiB,EACjBH,EAAanB,aAAaJ,QAAQ,CAACzW,GAAI,cAKnDmY,GAAiB,EACjBH,EAAanB,aAAaJ,QAAQ,CAACvO,EAAMmQ,GAAUtK,cAAc,OAK7EmK,EAAa/H,SAAQ,SAACoI,GACbP,EAAapB,qBAAqBzW,SAASoY,KAC5CJ,GAAiB,EACjBH,EAAanB,aAAaJ,QAAQ,CAAC8B,GAAW,QAKtDJ,EAAgB,CAEhB,IAAMK,EAAapD,GAAenM,EAAQf,GACpCuQ,EAAqC,GAkB3C,GAjBAzQ,OAAOC,KAAKuQ,GAAYrI,SAAQ,SAAC5K,GAC7B,GAAMA,KAAUyS,EAAahC,kBAA7B,CAGA,IAAM0C,EAAQxQ,EAAM3C,GAAQsI,WACxB6K,KAASnW,EAAKqB,aACVrB,EAAKqB,WAAW8U,GAAOC,qBACjBD,KAASD,IACXA,EAAYC,GAAS,IAEzBD,EAAYC,GAAOpH,KAAK0G,EAAahC,kBAAkBzQ,KAEvDkT,EAAYC,GAASV,EAAahC,kBAAkBzQ,SAK3DyS,EAAanB,aAAa,GAAG,KAC9BmB,EAAanB,aAAa,GAAG,GAAKtU,EAAKqW,oBAAoBH,EAAaxP,EAAQ4O,EAAUtH,EAAOrI,EAAOiO,MACpG6B,EAAanB,aAAa,GAAG,IAC7B,OAGR,IAAMgC,EAAetW,EAAKuW,gBAAgBvW,EAAKqG,OAASiI,GAASyG,kBAAoBU,EAAarB,OAAS8B,EAAaxP,EAAQ4O,EAAUtH,EAAOrI,EAAOiO,MAElJ4C,EAAc9D,GAAehM,EAAQf,GAC3CF,OAAOC,KAAK8Q,GAAa5I,SAAQ,SAAC5K,GAC9ByS,EAAahC,kBAAkBzQ,GAAUsT,EAAa3Q,EAAM3C,GAAQyI,gBAExEgK,EAAapB,qBAAqBtF,KAAKrI,GACvC+O,EAAanB,aAAamC,QAG9B,GAAyC,IAArChB,EAAanB,aAAa/G,OAAc,CACxC,IAAMmJ,EAAajR,OAAOC,KAAKC,GAAOqO,MAAK,SAACnO,GACxC,IAAM7E,EAAO2E,EAAME,GACnB,OAAO7E,EAAKqK,cAAgBoK,EAAatB,eAAqC,MAApBnT,EAAKsK,cAE/DoL,GAAcA,KAAcjB,EAAahC,mBACzCG,KAAKD,gBAAgB5E,KAAK0G,EAAahC,kBAAkBiD,IACzD9C,KAAKF,cAAc+C,UAEnB7C,KAAKD,gBAAgB5E,UAAK5E,GAC1ByJ,KAAKF,cAAc+C,aAjMvC,qBAuMI,SAAQzI,EAAuBrI,EAAuB2P,GAAiE,IAAD,OAC5GqB,EAAkB/C,KAAKJ,MAAM,GACnC,GAAImD,EAAiB,CACjB,IAAM3W,EAAOgO,EAAM2I,EAAgB,IAE7BV,EAAapD,GAAe8D,EAAgB,GAAIhR,GAChDuQ,EAAqC,GAgB3C,GAfAzQ,OAAOC,KAAKuQ,GAAYrI,SAAQ,SAAC5K,GAC7B,GAAMA,KAAU,EAAKyQ,kBAArB,CAGA,IAAM0C,EAAQxQ,EAAM3C,GAAQsI,WACxBtL,EAAKqB,WAAW8U,IAAUnW,EAAKqB,WAAW8U,GAAOC,qBAC3CD,KAASD,IACXA,EAAYC,GAAS,IAEzBD,EAAYC,GAAOpH,KAAK,EAAK0E,kBAAkBzQ,KACxChD,EAAKqB,WAAW8U,KACvBD,EAAYC,GAAS,EAAK1C,kBAAkBzQ,SAI/C2T,EAAgB,KACjB/C,KAAKJ,MAAM,GAAG,GAAKxT,EAAKqW,oBAAoBH,EAAaS,EAAgB,GAAIrB,EAAUtH,EAAOrI,EAAOiO,MACjGA,KAAKJ,MAAM,GAAG,IACd,OAGR,IAAM8C,EAAetW,EAAKuW,gBAAgBL,EAAaS,EAAgB,GAAIrB,EAAUtH,EAAOrI,EAAOiO,MAE7F4C,EAAc9D,GAAeiE,EAAgB,GAAIhR,GACvDF,OAAOC,KAAK8Q,GAAa5I,SAAQ,SAAC5K,GAC9B,EAAKyQ,kBAAkBzQ,GAAUsT,EAAa3Q,EAAM3C,GAAQyI,gBAEhEmI,KAAKJ,MAAMiD,aAzOvB,KA8O8BhK,G,WAO1B,WAAYpG,EAAcvH,EAAeD,EAAsBwC,GAAkC,0BANhGuV,MAAa,EAMkF,KALzFvQ,UAKyF,OAJzFxH,cAIyF,OAHzFC,WAGyF,OAFzFuC,gBAEyF,EAC5FuS,KAAKvN,KAAOA,EACZuN,KAAK9U,MAAQA,EACb8U,KAAK/U,SAAWA,EAChB+U,KAAKvS,WAAaA,E,wDAUtB,SAA2B+S,EAA+B1N,EAAgB4O,EAAgEtH,EAAuBrI,EAAuBkR,GACpL,OAAO,K,2BARX,SAAoBC,EAAc9W,GAC9BA,EAAKqG,KAAOyQ,EAAQzQ,KACpBrG,EAAKlB,MAAQgY,EAAQhY,MACrBkB,EAAKnB,SAAWiY,EAAQjY,SACxBmB,EAAKqB,WAAayV,EAAQzV,e,qBClTb0V,G,oDACjB,aAAe,wCACLzI,GAAS0I,OAAQ,IAAK,CAAClb,EAAE,EAAGC,EAAE,GAAI,CACpC,EAAG,CACCsK,KAAM,OACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEkQ,aAAc,IAAKC,cAAe,IAAKC,aAAc,SAC7Df,qBAAqB,GAEzB,EAAG,CACC/P,KAAM,QACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,MAEnB,EAAG,CACCX,KAAM,SACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,MAEnB,EAAG,CACCX,KAAM,QACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,CAAEC,MAAO,SACfqF,aAAc,Y,oDAW1B,SAAgB+H,EAA+B1N,EAAgB4O,GAC3D,IAAMxW,EAAQyI,OAAO,MAAO6M,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,OACnEjI,EAASwI,OAAO,MAAO6M,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,OACpE1G,EAAQ,MAAO8T,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAE5DoQ,EAAO,SAACC,GACVA,EAAIC,UAAU,EAAG,EAAGD,EAAIE,OAAOzY,MAAOuY,EAAIE,OAAOxY,QAC7CqV,EAAO,IACPA,EAAO,GAAGxG,SAAQ,SAACvQ,GACZma,MAAMC,QAAQpa,GACbA,EAAEuQ,SAAQ,SAAA8J,GAAE,OAAIA,EAAGL,MAEnBha,EAAEga,OAoBlB,OAbA/B,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKkQ,aAAe1P,OAAOzI,GACvDgI,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKmQ,cAAgB3P,OAAOxI,GACxD+H,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKoQ,aAAe7W,EAChDwG,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK4Q,YAAcP,EAC/CtQ,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQlI,EACzCgI,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQjI,QAI1C,M,6BAtCX,SAAsB+X,GAClB,IAAI9W,EAAO,IAAI+W,EAEf,OADAtK,GAAKmL,aAAad,EAAS9W,GACpBA,M,GAnCyByM,ICAnBoL,G,oDACjB,aAAe,wCACLvJ,GAASwJ,UAAW,IAAK,CAAChc,EAAE,EAAGC,EAAE,GAAI,CACvC,EAAG,CAAEsK,KAAM,OAAQF,UAAWzK,EAAU0K,UAAW0D,YAAa,OAAQ/C,KAAM,IAC9E,EAAG,CACCV,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,IAEhC,EAAG,CACCgH,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,IAEhC,EAAG,CACCgH,KAAM,QACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,IAAK3H,UAAU,IAElC,EAAG,CACCgH,KAAM,SACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,IAAK3H,UAAU,IAElC,EAAG,CACCgH,KAAM,QACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,CAAEC,MAAO,SACfqF,aAAc,UAElB,EAAG,CACChG,KAAM,OACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFmB,OAAQ,CAAC,OAAQ,SAAU,SAC3BJ,eAAgB,IAGxB,EAAG,CACCzB,KAAM,aACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,M,oDAWxC,SAAgB+U,EAA+B1N,EAAgB4O,GAC3D,IAAMxZ,EAAI,MAAOsY,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACxDjL,EAAI,MAAOqY,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACxDlI,EAAQ,MAAOsV,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAC5DjI,EAAS,MAAOqV,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAC7D1G,EAAQ,MAAO8T,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAC5D+Q,EAAY,MAAO3D,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAEtEsO,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQlL,EACzCgL,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQjL,EACzC+K,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQlI,EACzCgI,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQjI,EACzC+H,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQ+Q,QAIjD,IAAM/R,EAAO4N,KAAKvS,WAAW,GAAG0F,KAAKe,eAoBrC,MAAO,CAAE,EAnBI,SAACuP,GACV,GAAY,IAATrR,EACCqR,EAAIW,UAAY1X,EAChB+W,EAAIY,SAASnc,EAAGC,EAAG+C,EAAOC,GAC1BsY,EAAIW,UAAY,aAEf,GAAY,IAAThS,EAAY,CAChBqR,EAAIa,YAAc5X,EAClB,IAAM6X,EAAed,EAAIU,UACzBV,EAAIU,UAAYA,EAChBV,EAAIe,WAAWtc,EAAGC,EAAG+C,EAAOC,GAC5BsY,EAAIU,UAAYI,EAChBd,EAAIa,YAAc,aAEL,IAATlS,GACJqR,EAAIC,UAAUxb,EAAGC,EAAG+C,EAAOC,Q,6BA7CvC,SAAsB+X,GAClB,IAAI9W,EAAO,IAAI6X,EAEf,OADApL,GAAKmL,aAAad,EAAS9W,GACpBA,M,GAxD4ByM,ICAtB4L,G,oDACjB,aAAe,wCACL/J,GAASgK,OAAQ,IAAK,CAACxc,EAAE,EAAGC,EAAE,GAAI,CACpC,EAAG,CAAEsK,KAAM,OAAQF,UAAWzK,EAAU0Q,UAAWtC,YAAa,OAAQ/C,KAAM,IAC9E,EAAG,CACCV,KAAM,QACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,M,oDAW3B,SAAgBoN,EAA+B1N,EAAgB4O,GAC3D,IAAIiD,EAAW,MAAOnE,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACnEuR,EAAYA,EAAWnc,KAAKoc,GAAM,IAElClD,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQuR,QAajD,MAAO,CAAE,EATgB,SAAClB,GACtBA,EAAIoB,OAAOF,GACPnE,EAAO,IACPA,EAAO,GAAGxG,SAAQ,SAACwJ,GACfA,EAAKC,MAGbA,EAAIoB,QAAQF,Q,6BAxBpB,SAAsBzB,GAClB,IAAI9W,EAAO,IAAIqY,EAEf,OADA5L,GAAKmL,aAAad,EAAS9W,GACpBA,M,GAhByByM,ICDnBiM,G,oDACjB,aAAe,wCACLpK,GAAS/G,OAAQ,IAAK,CAACzL,EAAE,EAAGC,EAAE,GAAI,CACpC,EAAG,CACCsK,KAAM,SACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,SACb/C,KAAM,CAAEC,MAAO,M,oDAW3B,WACI,MAAO,CAAE,EAAKO,OAAOqM,KAAKvS,WAAW,GAAG0F,KAAKC,W,6BAPjD,SAAsB2R,GAClB,IAAI3Y,EAAO,IAAI0Y,EAEf,OADAjM,GAAKmL,aAAae,EAAM3Y,GACjBA,M,GAfyByM,ICCnBmM,G,oDACjB,aAAe,wCACLtK,GAASuK,MAAO,IAAK,CAAC/c,EAAE,EAAGC,EAAE,GAAI,CACnC,EAAG,CACCsK,KAAM,QACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,SACb/C,KAAM,CAAEkQ,aAAc,IAAUC,cAAe,GAAIC,aAAc,SACjE7K,cAAe,UAEnB,EAAG,CACCjG,KAAM,MACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,IAEnB,EAAG,CACCX,KAAM,QACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,IAEnB,EAAG,CACCX,KAAM,OACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,IAEnB,EAAG,CACCX,KAAM,QACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,M,oDAW3B,SAAgBoN,EAA+B1N,EAAgB4O,GAAwF,IAAD,OAC9IwD,EAAM,MAAO1E,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAC1D+R,EAAQ,MAAO3E,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAC5DgS,EAAO,MAAO5E,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAC3DiS,EAAQ,MAAO7E,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAGhE+R,EAAQA,EAAQ,IAAM,IAAMA,EAAQ,EAAI,EAAIA,EAC5CC,EAAOA,EAAO,IAAM,IAAMA,EAAO,EAAI,EAAIA,EACzCC,EAAQA,EAAQ,EAAI,EAAIA,EAAQ,EAAI,EAAIA,EACxC,IAAMC,EAAS,eAJfJ,EAAMA,EAAM,IAAM,IAAMA,EAAM,EAAI,EAAIA,EAIvB,aAAmBC,EAAnB,aAA6BC,EAA7B,aAAsCC,EAAtC,KAiBf,OAfA3D,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKkQ,aAAe,EAAKnY,MAAQ,GAC7DgI,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKoQ,aAAe+B,EAChDpS,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQ8R,EACzChS,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQ+R,EACzCjS,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQgS,EACzClS,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQiS,QAI1C,CAAE,EAAKC,M,6BAjClB,SAAsBpC,GAClB,IAAI9W,EAAO,IAAI4Y,EAEf,OADAnM,GAAKmL,aAAad,EAAS9W,GACpBA,M,GAxCwByM,ICDlB0M,G,oDACjB,aAAe,wCACL7K,GAAS8K,MAAO,IAAK,CAACtd,EAAE,EAAGC,EAAE,GAAI,CACnC,EAAG,CAAEsK,KAAM,QAASF,UAAWzK,EAAU0K,UAAW0D,YAAa,SAAU/C,KAAM,CAAEC,MAAO,MAC1F,EAAG,CAAEX,KAAM,aAAcF,UAAWzK,EAAUkQ,QAAS9B,YAAa,YAAa/C,KAAM,CAAEC,OAAO,M,oDAUxG,SAAgBoN,GACZ,MAAO,CAAE,EAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,U,6BAP1C,SAAsB8P,GAClB,IAAI9W,EAAO,IAAImZ,EAEf,OADA1M,GAAKmL,aAAad,EAAS9W,GACpBA,M,GAXwByM,ICClB4M,G,oDACjB,aAAe,wCACL/K,GAASgL,UAAW,IAAK,CAACxd,EAAE,EAAGC,EAAE,GAAI,CACvC,EAAG,CAAEsK,KAAM,OAAQF,UAAWzK,EAAU0Q,UAAWtC,YAAa,OAAQ/C,KAAM,IAC9E,EAAG,CACCV,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,IAEnB,EAAG,CACCX,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,M,oDAW3B,SAAgBoN,EAA+B1N,EAAgB4O,GAC3D,IAAIxZ,EAAI,MAAOsY,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACxDjL,EAAI,MAAOqY,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAE5DsO,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQlL,EACzCgL,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQjL,QAajD,MAAO,CAAE,EATiB,SAACsb,GACvBA,EAAIkC,UAAUzd,EAAGC,GACbqY,EAAO,IACPA,EAAO,GAAGxG,SAAQ,SAACwJ,GACfA,EAAKC,MAGbA,EAAIkC,WAAWzd,GAAIC,Q,6BA1B3B,SAAsB+a,GAClB,IAAI9W,EAAO,IAAIqZ,EAEf,OADA5M,GAAKmL,aAAad,EAAS9W,GACpBA,M,GAtB4ByM,ICAtB+M,G,oDACjB,aAAe,wCACLlL,GAASuH,OAAQ,IAAK,CAAE/Z,EAAG,EAAGC,EAAG,GAAK,CACxC,EAAG,CACCsK,KAAM,YACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,OACb/C,KAAM,IAEV,EAAG,CACCV,KAAM,OACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,YACb/C,KAAM,CAAEC,OAAO,IAEnB,EAAG,CACCX,KAAM,WACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,IAEV,EAAG,CACCV,KAAM,aACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,M,oDAWlB,SAAgBqN,EAA+B1N,EAAgB4O,GAC3D,IAAMmE,EAAO,MAAOrF,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAC3D0S,EAAW,MAAOtF,EAASA,EAAO,GAAK,KAEzCuF,EAAM,CAAE,EADO,MAAOvF,EAASA,EAAO,GAAK,MAa/C,OAXIqF,IACAE,EAAM,CAAE,EAAKD,IAGjBpE,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQyS,QAI1CE,K,6BAtBX,SAAsBhB,GAClB,IAAI3Y,EAAO,IAAIwZ,EAEf,OADA/M,GAAKmL,aAAae,EAAM3Y,GACjBA,M,GAjCyByM,ICDnBmN,G,oDACjB,aAAe,wCACLtL,GAASrM,OAAQ,IAAK,CAACnG,EAAE,EAAGC,EAAE,GAAI,CACpC,EAAG,CACCsK,KAAM,SACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,SACb/C,KAAM,CAAEC,MAAO,O,oDAW3B,WACI,MAAO,CAAE,EAAK4M,KAAKvS,WAAW,GAAG0F,KAAKC,U,6BAP1C,SAAsB2R,GAClB,IAAI3Y,EAAO,IAAI4Z,EAEf,OADAnN,GAAKmL,aAAae,EAAM3Y,GACjBA,M,GAfyByM,ICAnBoN,G,oDACjB,aAAe,wCACLvL,GAASwL,MAAO,IAAK,CAAEhe,EAAG,EAAGC,EAAG,GAAK,CACvC,EAAG,CACCsK,KAAM,MACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,OACb/C,KAAM,IAEV,EAAG,CACCV,KAAM,QACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,YACb/C,KAAM,CAAEC,MAAO,KAEnB,EAAG,CACCX,KAAM,YACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,GAAIjI,OAAQ,W,oDAWvC,SAAgBqV,GACZ,IAAI2F,EAAc,MAAO3F,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAClEgT,EAAgB,MAAO5F,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAGxE,OADAgT,EAASA,GAAQ,GACV,CAAE,GAFTD,EAAOA,GAAM,IAEKC,MAAM,IAAIC,OAAOD,Q,6BAXvC,SAAsBrB,GAClB,IAAI3Y,EAAO,IAAI6Z,EAEf,OADApN,GAAKmL,aAAae,EAAM3Y,GACjBA,M,GA3BwByM,ICClByN,G,oDACjB,aAAe,wCACL5L,GAAS6L,UAAW,IAAK,CAACre,EAAE,EAAGC,EAAE,GAAI,CACvC,EAAG,CACCsK,KAAM,SACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,IAEhC,EAAG,CACCgH,KAAM,OACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFmB,OAAQ,CAAC,MAAO,YAAa,WAAY,SAAU,SAAU,UAAW,UAAW,MAAO,MAAO,QAAS,SAAU,MAAO,MAAO,OAClIJ,eAAgB,IAGxB,EAAG,CACCzB,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,IAEhC,EAAG,CACCgH,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,M,oDAWxC,SAAgB+U,EAA+B1N,EAAgB4O,GAC3D,IAAMxZ,EAAIyL,OAAO,MAAO6M,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,OAC/DjL,EAAIwL,OAAO,MAAO6M,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,OAEjEA,EAAQ,EACZ,OAAO4M,KAAKvS,WAAW,GAAG0F,KAAKe,gBAC3B,KAAK,EACDd,EAAQlL,EAAIC,EACZ,MACJ,KAAK,EACDiL,EAAQlL,EAAIC,EACZ,MACJ,KAAK,EACDiL,EAAQlL,EAAIC,EACZ,MACJ,KAAK,EACDiL,EAAQM,MAAMxL,EAAIC,GAAK,EAAID,EAAIC,EAC/B,MACJ,KAAK,EACDiL,EAAQM,MAAMxL,EAAIC,GAAK,EAAID,EAAIC,EAC/B,MACJ,KAAK,EACDiL,EAAQlL,EAAIC,EAAIA,EAAID,EACpB,MACJ,KAAK,EACDkL,EAAQlL,EAAIC,EAAID,EAAIC,EACpB,MACJ,KAAK,EACDiL,EAAQ5K,KAAKge,IAAIte,EAAGC,GACpB,MACJ,KAAK,EACDiL,EAAQ5K,KAAKoY,IAAI1Y,GACjB,MACJ,KAAK,EACDkL,EAAQ5K,KAAKie,MAAMve,GACnB,MACJ,KAAK,GACDkL,GAASlL,EACT,MACJ,KAAK,GACDkL,EAAQ5K,KAAKke,IAAIxe,GACjB,MACJ,KAAK,GACDkL,EAAQ5K,KAAKme,IAAIze,GACjB,MACJ,KAAK,GACDkL,EAAQ5K,KAAKoe,IAAI1e,GAczB,OAVAwZ,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQA,EACzCF,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQlL,EACzCgL,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQjL,QAI1C,CAAE,EAAKiL,M,6BAlElB,SAAsB8P,GAClB,IAAI9W,EAAO,IAAIka,EAEf,OADAzN,GAAKmL,aAAad,EAAS9W,GACpBA,M,GApC4ByM,ICAtBgO,G,oDAGjB,aAAe,IAAD,+BACV,cAAMnM,GAASoM,IAAK,IAAK,CAAE5e,EAAG,EAAGC,EAAG,GAAK,CACrC,EAAG,CACCsK,KAAM,MACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,YACb/C,KAAM,CAAEC,MAAO,GAAI3H,UAAU,GAC7BgN,aAAc,UATnB+H,YAEO,I,oDAkBd,SAAgBA,EAA+B1N,EAAgB4O,GAM3D,OALAA,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQ,MAAOoN,EAASuG,KAAKC,UAAUxG,EAAO,IAAM,SAGtF,M,6BAZX,SAAsBuE,GAClB,IAAI3Y,EAAO,IAAIya,EAEf,OADAhO,GAAKmL,aAAae,EAAM3Y,GACjBA,M,GAlBsByM,ICAhBoO,G,oDACjB,aAAe,wCACLvM,GAASwM,IAAK,IAAK,CAAChf,EAAE,EAAGC,EAAE,GAAI,CACjC,EAAG,CAAEsK,KAAM,OAAQF,UAAWzK,EAAU0K,UAAW0D,YAAa,OAAQ/C,KAAM,IAC9E,EAAG,CACCV,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,IAEhC,EAAG,CACCgH,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,IAEhC,EAAG,CACCgH,KAAM,SACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,IAAK3H,UAAU,IAElC,EAAG,CACCgH,KAAM,cACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,IAEhC,EAAG,CACCgH,KAAM,YACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAI5K,KAAKoc,GAAInZ,UAAU,IAE1C,EAAG,CACCgH,KAAM,QACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,CAAEC,MAAO,SACfqF,aAAc,UAElB,EAAG,CACChG,KAAM,OACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFmB,OAAQ,CAAC,OAAQ,UACjBJ,eAAgB,IAGxB,EAAG,CACCzB,KAAM,aACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,IAEhC,EAAG,CACCgH,KAAM,mBACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,YACb/C,KAAM,CAAEC,OAAO,M,oDAW3B,SAAgBoN,EAA+B1N,EAAgB4O,GAC3D,IAAMxZ,EAAI,MAAOsY,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACxDjL,EAAI,MAAOqY,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACxD+T,EAAS,MAAO3G,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAC7DgU,EAAc,MAAO5G,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAClEiU,EAAY,MAAO7G,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAChE1G,EAAQ,MAAO8T,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAC5D+Q,EAAY,MAAO3D,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAChEkU,EAAmB,MAAO9G,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAE7EsO,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQlL,EACzCgL,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQjL,EACzC+K,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQ+T,EACzCjU,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQgU,EACzClU,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQiU,EACzCnU,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQ+Q,QAIjD,IAAM/R,EAAO4N,KAAKvS,WAAW,GAAG0F,KAAKe,eAuBrC,MAAO,CAAE,EAtBI,SAACuP,GACV,GAAY,IAATrR,EACCqR,EAAIW,UAAY1X,EAChB+W,EAAI8D,YACJ9D,EAAI+D,IAAItf,EAAGC,EAAGgf,EAAQC,EAAaC,EAAWC,GAC9C7D,EAAIgE,YACJhE,EAAIlW,OACJkW,EAAIW,UAAY,aAEf,GAAY,IAAThS,EAAY,CAChBqR,EAAIa,YAAc5X,EAClB,IAAM6X,EAAed,EAAIU,UACzBV,EAAIU,UAAYA,EAChBV,EAAI8D,YACJ9D,EAAI+D,IAAItf,EAAGC,EAAGgf,EAAQC,EAAaC,EAAWC,GAC9C7D,EAAIgE,YACJhE,EAAIpW,SACJoW,EAAIU,UAAYI,EAChBd,EAAIa,YAAc,c,6BApD9B,SAAsBpB,GAClB,IAAI9W,EAAO,IAAI6a,EAEf,OADApO,GAAKmL,aAAad,EAAS9W,GACpBA,M,GApEsByM,ICAhB6O,G,oDACjB,aAAe,wCACLhN,GAASiN,MAAO,IAAK,CAACzf,EAAE,EAAGC,EAAE,GAAI,CACnC,EAAG,CACCsK,KAAM,SACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,OACb/C,KAAM,CAAEC,OAAO,EAAO3H,UAAU,IAEpC,EAAG,CACCgH,KAAM,OACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFmB,OAAQ,CAAC,MAAO,MAAO,IAAK,KAAM,IAAK,MACvCJ,eAAgB,IAGxB,EAAG,CACCzB,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,IAEhC,EAAG,CACCgH,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,M,oDAWxC,SAAgB+U,EAA+B1N,EAAgB4O,GAC3D,IAAMxZ,EAAIyL,OAAO,MAAO6M,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,OAC/DjL,EAAIwL,OAAO,MAAO6M,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,OAEjEA,GAAQ,EACZ,OAAO4M,KAAKvS,WAAW,GAAG0F,KAAKe,gBAC3B,KAAK,EACDd,EAAQlL,IAAMC,EACd,MACJ,KAAK,EACDiL,EAAQlL,IAAMC,EACd,MACJ,KAAK,EACDiL,EAAQlL,EAAIC,EACZ,MACJ,KAAK,EACDiL,EAAQlL,GAAKC,EACb,MACJ,KAAK,EACDiL,EAAQlL,EAAIC,EACZ,MACJ,KAAK,EACDiL,EAAQlL,GAAKC,EAcrB,OAVAuZ,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQA,EACzCF,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQlL,EACzCgL,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQjL,QAI1C,CAAE,EAAKiL,M,6BA1ClB,SAAsB8P,GAClB,IAAI9W,EAAO,IAAIsb,EAEf,OADA7O,GAAKmL,aAAad,EAAS9W,GACpBA,M,GApCwByM,ICAlB+O,G,oDACjB,aAAe,wCACLlN,GAASmN,QAAS,IAAK,CAAC3f,EAAE,EAAGC,EAAE,GAAI,CACrC,EAAG,CACCsK,KAAM,SACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,OACb/C,KAAM,CAAEC,OAAO,EAAO3H,UAAU,IAEpC,EAAG,CACCgH,KAAM,OACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFmB,OAAQ,CAAC,MAAO,MAAO,KAAM,KAAM,KACnCJ,eAAgB,IAGxB,EAAG,CACCzB,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,YACb/C,KAAM,CAAEC,OAAO,IAEnB,EAAG,CACCX,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,YACb/C,KAAM,CAAEC,OAAO,M,oDAW3B,SAAgBoN,EAA+B1N,EAAgB4O,GAC3D,IAAMxZ,EAAI,MAAOsY,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACxDjL,EAAI,MAAOqY,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAE1DA,GAAQ,EACZ,OAAO4M,KAAKvS,WAAW,GAAG0F,KAAKe,gBAC3B,KAAK,EACDd,EAAQlL,IAAMC,EACd,MACJ,KAAK,EACDiL,EAAQlL,IAAMC,EACd,MACJ,KAAK,EACDiL,EAAQlL,GAAKC,EACb,MACJ,KAAK,EACDiL,EAAQlL,GAAKC,EACb,MACJ,KAAK,EACDiL,GAASlL,EAcjB,OAVAwZ,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQA,EACzCF,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQlL,EACzCgL,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,EACnDtN,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQjL,QAI1C,CAAE,EAAKiL,M,6BAvClB,SAAsB8P,GAClB,IAAI9W,EAAO,IAAIwb,EAEf,OADA/O,GAAKmL,aAAad,EAAS9W,GACpBA,M,GApC0ByM,I,QCC5ByI,GAAb,oDAEI,aAAe,wCACL5G,GAAS4G,iBAAkB,IAAK,CAAEpZ,EAAG,EAAGC,EAAG,GAAK,CAClD,EAAG,CACCsK,KAAM,gBACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CAAEC,MAAO,KAEnB,EAAG,CACCX,KAAM,SACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,OACb/C,KAAM,MAdtB,wDA0BI,SAAoBqN,EAA+B1N,EAAgB4O,EAAgEtH,EAAuBrI,EAAuBkR,GAE7K,IAAM6E,EAAe9H,KAAKvS,WAAW,GAAG0F,KAAKC,MACvC2U,EAA+B,GACjCC,EAAoB,GACxBnW,OAAOC,KAAKsI,GAAOJ,SAAQ,SAAAiO,GACvB,IAAM7b,EAAOgO,EAAM6N,GACf7b,EAAKqG,OAASiI,GAASyG,mBAAqB/U,EAAKqB,WAAW,GAAG0F,KAAKC,QAAU0U,IAC9EE,EAAYC,EACZpW,OAAOC,KAAK1F,EAAKqB,YAAYuM,SAAQ,SAAA/H,GAC7B0B,OAAO1B,GAAO,GAAK7F,GACnB2b,EAAmB5M,KAAK/O,EAAKqB,WAAWwE,GAAKQ,aAM7DiP,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACjBJ,IACAjB,OAAOC,KAAKoB,EAAMJ,GAAQrF,YAAYuM,SAAQ,SAAC/H,GACvC0B,OAAO1B,GAAO,UACPiB,EAAMJ,GAAQrF,WAAWwE,MAGxC8V,EAAmB/N,SAAQ,SAAC5G,EAAO8U,GAC/BhV,EAAMJ,GAAQrF,WAAWya,EAAI,GAAK,CAC9BzV,KAAMW,EACNb,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,cAO1B,IAAI+M,EAAY,GAOhB,OANA6H,EAAmB/N,SAAQ,SAAC9K,EAAGgZ,GACtBA,EAAI,KAAM1H,IACXN,EAAK,GAAD,OAAIgI,EAAI,IAAO1H,EAAO,GAAD,OAAI0H,EAAI,QAIrCF,EAAUrO,OAAS,IACnBsJ,EAAMkF,gBAAgBH,EAAWjW,EAAOmO,IACjC,KAxEnB,6BA6EI,SAAgBM,EAAgC1N,EAAgB4O,EAAoDtH,EAAuBrI,EAAuBkR,GAE9J,IAAM6E,EAAe9H,KAAKvS,WAAW,GAAG0F,KAAKC,MACvC2U,EAA+B,GACjCC,EAAoB,GACxBnW,OAAOC,KAAKsI,GAAOJ,SAAQ,SAAAiO,GACvB,IAAM7b,EAAOgO,EAAM6N,GACf7b,EAAKqG,OAASiI,GAASyG,mBAAqB/U,EAAKqB,WAAW,GAAG0F,KAAKC,QAAU0U,IAC9EE,EAAYC,EACZpW,OAAOC,KAAK1F,EAAKqB,YAAYuM,SAAQ,SAAA/H,GAC7B0B,OAAO1B,GAAO,GAAK7F,GACnB2b,EAAmB5M,KAAK/O,EAAKqB,WAAWwE,GAAKQ,aAM7D,IAAIyN,EAAY,GAOhB,OANA6H,EAAmB/N,SAAQ,SAAC9K,EAAGgZ,GACtBA,EAAI,KAAM1H,IACXN,EAAK,GAAD,OAAIgI,EAAI,IAAO1H,EAAO,GAAD,OAAI0H,EAAI,QAIrCF,EAAUrO,OAAS,EACZ,CAAE,EAAKsJ,EAAMmF,aAGjB,MAzGf,6BAmBI,SAAsBlF,GAClB,IAAI9W,EAAO,IAAIkV,EAEf,OADAzI,GAAKmL,aAAad,EAAS9W,GACpBA,MAtBf,GAAsCyM,IA6GzBsI,GAAb,oDAGI,aAAe,IAAD,+BACV,cAAMzG,GAASyG,kBAAmB,IAAK,CAAEjZ,EAAG,EAAGC,EAAG,GAAK,CACnD,EAAG,CACCsK,KAAM,OACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,SACb/C,KAAM,CAAEC,MAAO,KAEnB,EAAG,CACCX,KAAM,MACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFqB,MAAO,cAGf,EAAG,CACC/B,KAAM,SACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFqB,MAAO,oBAvBhB1B,YAEO,IADP4O,cACO,EAyBV,EAAK2G,IAAM,EAAKA,IAAIpf,KAAT,iBACX,EAAKqf,OAAS,EAAKA,OAAOrf,KAAZ,iBACd,EAAKwE,WAAW,GAAG0F,KAAKpC,QAAU,EAAKsX,IACvC,EAAK5a,WAAW,GAAG0F,KAAKpC,QAAU,EAAKuX,OA5B7B,EAHlB,wCAkCI,SAAIlc,GAAa,IAAD,OACR4T,KAAKlN,QAAUkN,KAAK0B,UACpB1B,KAAK0B,UACD,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACjB,EAAKJ,SACLI,EAAM,EAAKJ,QAAQrF,WAAWoE,OAAOC,KAAK1F,EAAKqB,YAAYkM,QAAU,CACjElH,KAAK,SAAD,OAAWZ,OAAOC,KAAK1F,EAAKqB,YAAYkM,OAAS,GACrDpH,UAAWzK,EAAU0K,UACrB0D,YAAa,SACb/C,KAAM,CACFC,MAAM,SAAD,OAAWvB,OAAOC,KAAK1F,EAAKqB,YAAYkM,OAAS,cA5CtF,oBAqDI,SAAOvN,GACCyF,OAAOC,KAAK1F,EAAKqB,YAAYkM,SAtDzC,6BAqEI,SAAgB6G,EAA+B1N,EAAgB4O,GAC3D,OAAOlB,KAtEf,6BA2DI,SAAsB0C,EAAcpQ,EAAgB4O,GAChD,IAAItV,EAAO,IAAI+U,EAMf,OALAtI,GAAKmL,aAAad,EAAS9W,GAC3BA,EAAK0G,OAASA,EACd1G,EAAKsV,SAAWA,EAChBtV,EAAKqB,WAAW,GAAG0F,KAAKpC,QAAU3E,EAAKic,IAAIpf,KAAKmD,GAChDA,EAAKqB,WAAW,GAAG0F,KAAKpC,QAAU3E,EAAKkc,OAAOrf,KAAKmD,GAC5CA,MAlEf,GAAuCyM,IA0E1BkI,GAAb,oDACI,aAAe,wCACLrG,GAASqG,mBAAoB,IAAK,CAAE7Y,EAAG,EAAGC,EAAG,GAAK,CACpD,EAAG,CACCsK,KAAM,WACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,GACNuF,cAAe,UAEnB,EAAG,CACCjG,KAAM,SACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,GACNuF,cAAe,YAf/B,oDA0BI,SAAgB8H,EAA+B1N,EAAgB4O,GAC3D,MAAO,MA3Bf,6BAoBI,SAAsBwB,GAClB,IAAI9W,EAAO,IAAI2U,EAEf,OADAlI,GAAKmL,aAAad,EAAS9W,GACpBA,MAvBf,GAAwCyM,IA+B3B0P,GAAb,oDAGI,aAAe,IAAD,+BACV,cAAM7N,GAAS8G,WAAY,IAAK,CAAEtZ,EAAG,EAAGC,EAAG,GAAK,CAC5C,EAAG,CACCsK,KAAM,OACNF,UAAWzK,EAAU0Q,UACrBtC,YAAa,SACb/C,KAAM,CAAEC,MAAO,KAEnB,EAAG,CACCX,KAAM,MACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFqB,MAAO,cAGf,EAAG,CACC/B,KAAM,SACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFqB,MAAO,oBAvBhB1B,YAEO,IADP4O,cACO,EAyBV,EAAK2G,IAAM,EAAKA,IAAIpf,KAAT,iBACX,EAAKqf,OAAS,EAAKA,OAAOrf,KAAZ,iBACd,EAAKwE,WAAW,GAAG0F,KAAKpC,QAAU,EAAKsX,IACvC,EAAK5a,WAAW,GAAG0F,KAAKpC,QAAU,EAAKuX,OA5B7B,EAHlB,wCAkCI,SAAIlc,GAAa,IAAD,OACR4T,KAAKlN,QAAUkN,KAAK0B,UACpB1B,KAAK0B,UACD,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACjB,EAAKJ,SACLI,EAAM,EAAKJ,QAAQrF,WAAWoE,OAAOC,KAAK1F,EAAKqB,YAAYkM,QAAU,CACjElH,KAAK,SAAD,OAAWZ,OAAOC,KAAK1F,EAAKqB,YAAYkM,OAAS,GACrDpH,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,CACFC,MAAM,SAAD,OAAWvB,OAAOC,KAAK1F,EAAKqB,YAAYkM,OAAS,cA5CtF,oBAqDI,SAAOvN,GACCyF,OAAOC,KAAK1F,EAAKqB,YAAYkM,SAtDzC,iCAqEI,SAAoB6G,EAA+B1N,EAAgB4O,EAAgEtH,EAAuBrI,EAAuBkR,GAE7K,IAAM6E,EAAe,MAAOtH,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACrE4U,EAAoB,GACxBnW,OAAOC,KAAKsI,GAAOJ,SAAQ,SAAAiO,GACvB,IAAM7b,EAAOgO,EAAM6N,GACf7b,EAAKqG,OAASiI,GAASyG,mBAAqB/U,EAAKqB,WAAW,GAAG0F,KAAKC,QAAU0U,IAC9EE,EAAYC,MAIpB,IAAI/H,EAAY,GAOhB,OANArO,OAAOC,KAAKkO,KAAKvS,YAAYuM,SAAQ,SAAC/H,EAAagJ,GAC/C,KAAIA,GAAS,GAAb,CACA,IAAMuN,EAAMvW,KAAOuO,EAASA,EAAOvO,QAAOsE,EAC1C2J,EAAKjO,GAAOuW,MAGZR,EAAUrO,OAAS,IACnBsJ,EAAMkF,gBAAgBH,EAAWjW,EAAOmO,IACjC,KAzFnB,6BA8FI,SAAgBM,EAAgC1N,EAAgB4O,EAAoDtH,EAAuBrI,EAAuBkR,GAC9J,IAAI+E,EAAoB,GAClBF,EAAe,MAAOtH,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAQzE,OAPAvB,OAAOC,KAAKsI,GAAOJ,SAAQ,SAAAiO,GACvB,IAAM7b,EAAOgO,EAAM6N,GACf7b,EAAKqG,OAASiI,GAASyG,mBAAqB/U,EAAKqB,WAAW,GAAG0F,KAAKC,QAAU0U,IAC9EE,EAAYC,MAIhBD,EAAUrO,OAAS,EACZ,CAAE,EAAKsJ,EAAMmF,aAGjB,MA5Gf,6BA2DI,SAAsBlF,EAAcpQ,EAAgB4O,GAChD,IAAItV,EAAO,IAAImc,EAMf,OALA1P,GAAKmL,aAAad,EAAS9W,GAC3BA,EAAK0G,OAASA,EACd1G,EAAKsV,SAAWA,EAChBtV,EAAKqB,WAAW,GAAG0F,KAAKpC,QAAU3E,EAAKic,IAAIpf,KAAKmD,GAChDA,EAAKqB,WAAW,GAAG0F,KAAKpC,QAAU3E,EAAKkc,OAAOrf,KAAKmD,GAC5CA,MAlEf,GAAoCyM,ICvNf4P,G,oDACjB,aAAe,wCACL/N,GAAS+N,QAAS,IAAK,CAAEvgB,EAAG,EAAGC,EAAG,GAAK,CACzC,EAAG,CACCsK,KAAM,UACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,UACb/C,KAAM,M,oDAYlB,SAAgBqN,EAA+B1N,EAAgB4O,GAM3D,OALAA,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKuV,IAAMlI,EAAO,GAAKA,EAAO,QAAKjK,QAGhE,M,6BAbX,SAAsBwO,GAClB,IAAI3Y,EAAO,IAAIqc,EAGf,OAFA5P,GAAKmL,aAAae,EAAM3Y,GACxBA,EAAKqB,WAAW,GAAG0F,KAAO,GACnB/G,M,GAhBsByM,I,SCEhB8P,G,oDAGjB,aAAe,IAAD,wBACV,cAAMjO,GAASiO,WAAY,IAAK,CAACzgB,EAAE,EAAGC,EAAE,GAAI,CACxC,EAAG,CACCsK,KAAM,SACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,OACb/C,KAAM,IAEV,EAAG,CACCV,KAAM,aACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,IAEhC,EAAG,CACCgH,KAAM,aACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,IAEhC,EAAG,CACCgH,KAAM,aACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,EAAG3H,UAAU,IAEhC,EAAG,CACCgH,KAAM,QACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,CAAEC,MAAO,uBACfqF,aAAc,aAjC1BmQ,UAEc,EAkCV,IAAMC,EAAW,IAAIC,KAAmB,EAAG,EAAG,GACxCC,EAAW,IAAID,KAAyB,CAAEpc,MAAO,WAnC7C,OAoCV,EAAKkc,KAAO,IAAIE,KAAYD,EAAUE,GApC5B,E,oDA6Cd,SAAgBvI,GACZ,IAAMwI,EAAa,MAAOxI,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACjE6V,EAAa,MAAOzI,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACjE8V,EAAa,MAAO1I,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACjE1G,EAAQ,MAAO8T,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MAKlE,OAHA4M,KAAK4I,KAAKG,SAASrc,MAAMyc,SAASzc,GAClCsT,KAAK4I,KAAKjE,SAASyE,IAAIJ,EAAYC,EAAYC,GAExC,CAAC,EAAKlJ,KAAK4I,S,6BAftB,SAAsB7D,GAClB,IAAI3Y,EAAO,IAAIuc,EAEf,OADA9P,GAAKmL,aAAae,EAAM3Y,GACjBA,M,GA7CyByM,ICFnBwQ,G,oDACjB,aAAe,wCACL3O,GAAS4O,MAAO,IAAK,CAACphB,EAAE,EAAGC,EAAE,GAAI,CACnC,EAAG,CACCsK,KAAM,QACNF,UAAWzK,EAAU0Q,UACrBtC,YAAa,SACb/C,KAAM,CAAEC,MAAO,M,oDAW3B,SAAgBoN,EAA+B1N,EAAgB4O,GAI3D,IAHA,IAAM6H,GAAQ5V,OAAO,MAAO6M,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,QACnEoW,EAAQ,GACVC,EAAM,EACJA,EAAMF,GACRC,EAAMrO,KAAKsO,GACXA,IASJ,OANA/H,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,SAAW,MAAO+U,QAIpD,CAAE,EAAKgJ,M,6BArBlB,SAAsBzE,GAClB,IAAI3Y,EAAO,IAAIid,EAEf,OADAxQ,GAAKmL,aAAae,EAAM3Y,GACjBA,M,GAfwByM,ICA1B6Q,GAAb,oDAEI,aAAe,wCACLhP,GAAS6G,IAAK,IAAK,CAAErZ,EAAG,EAAGC,EAAG,GAAK,CACrC,EAAG,CACCsK,KAAM,SACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,OACb/C,KAAM,IAEV,EAAG,CACCV,KAAM,QACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,IAEV,EAAG,CACCV,KAAM,IACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CAAEC,MAAO,OApB/B,wDA+BI,SAAoBoN,EAA+B1N,EAAgB4O,EAAgEtH,EAAuBrI,EAAuBkR,GAE7K,IAAM6E,EAAe,MAAOtH,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACrE4U,EAAoB,GAQxB,OAPAnW,OAAOC,KAAKsI,GAAOJ,SAAQ,SAAAiO,GACvB,IAAM7b,EAAOgO,EAAM6N,GACf7b,EAAKqG,OAASiI,GAASyG,mBAAqB/U,EAAKqB,WAAW,GAAG0F,KAAKC,QAAU0U,IAC9EE,EAAYC,MAId,MAAOzH,GAAyB,KAAdwH,IAGxBxH,EAAO,GAAGxG,SAAQ,SAACvQ,EAAQye,GACvB,IAAIhI,EAAY,GAChBA,EAAK,GAAOzW,EACZyW,EAAK,GAAOgI,EACZjF,EAAMkF,gBAAgBH,EAAWjW,EAAOmO,OAGrC,KApDf,6BAuDI,SAAgBM,EAAgC1N,EAAgB4O,EAAoDtH,EAAuBrI,EAAuBkR,GAE9J,IAAM6E,EAAe,MAAOtH,EAASA,EAAO,GAAKR,KAAKvS,WAAW,GAAG0F,KAAKC,MACrE4U,EAAoB,GAQxB,GAPAnW,OAAOC,KAAKsI,GAAOJ,SAAQ,SAAAiO,GACvB,IAAM7b,EAAOgO,EAAM6N,GACf7b,EAAKqG,OAASiI,GAASyG,mBAAqB/U,EAAKqB,WAAW,GAAG0F,KAAKC,QAAU0U,IAC9EE,EAAYC,QAId,MAAOzH,IAAyB,KAAdwH,EACpB,MAAO,CAAE,EAAK,IAElB,IAAM7F,EAAM,GAKZ,OAJA3B,EAAO,GAAGxG,SAAQ,SAACvQ,EAAQye,GACvB/F,EAAIhH,KAAK8H,EAAMmF,gBAGZ,CAAE,EAAKjG,MA1EtB,6BAyBI,SAAsBe,GAClB,IAAI9W,EAAO,IAAIsd,EAEf,OADA7Q,GAAKmL,aAAad,EAAS9W,GACpBA,MA5Bf,GAA6ByM,ICDR8Q,G,oDACjB,aAAe,wCACLjP,GAASkP,SAAU,IAAK,CAAC1hB,EAAE,EAAGC,EAAE,GAAI,CACtC,EAAG,CACCsK,KAAM,SACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,YACb/C,KAAM,CAAEC,MAAO,O,oDAW3B,WACI,MAAO,CAAE,EAAK4M,KAAKvS,WAAW,GAAG0F,KAAKC,U,6BAP1C,SAAsB2R,GAClB,IAAI3Y,EAAO,IAAIud,EAEf,OADA9Q,GAAKmL,aAAae,EAAM3Y,GACjBA,M,GAf2ByM,ICE7BgR,GAAb,oDACI,aAAe,wCACLnP,GAASoP,MAAO,IAAK,CAAE5hB,EAAG,EAAGC,EAAG,GAAK,CACvC,EAAG,CACCsK,KAAM,QACNF,UAAWzK,EAAU0Q,UACrBtC,YAAa,OACb/C,KAAM,IAEV,EAAG,CACCV,KAAM,UACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,OACb/C,KAAM,MAbtB,oDAwBI,SAAgBqN,GACZ,IAAMgJ,EAAQ,MAAOhJ,EAASA,EAAO,GAAK,GACpC7G,EAAS6P,EAAQA,EAAM7P,OAAS,EAClCoQ,OAAOxT,EAMX,MAAO,CAAE,EALQtD,YAAQuW,GAAO,SAACtW,GACzByG,EAAS,IACToQ,EAAO7W,EAAM2P,YAGG,EAAKkH,MAjCrC,6BAkBI,SAAsBhF,GAClB,IAAI3Y,EAAO,IAAIyd,EAEf,OADAhR,GAAKmL,aAAae,EAAM3Y,GACjBA,MArBf,GAA+ByM,IAqClBmR,GAAb,oDACI,aAAe,wCACLtP,GAASuP,IAAK,IAAK,CAAE/hB,EAAG,EAAGC,EAAG,GAAK,CACrC,EAAG,CACCsK,KAAM,QACNF,UAAWzK,EAAU0Q,UACrBtC,YAAa,OACb/C,KAAM,IAEV,EAAG,CACCV,KAAM,UACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,OACb/C,KAAM,MAbtB,oDAwBI,SAAgBqN,GACZ,IAAMgJ,EAAQ,MAAOhJ,EAASA,EAAO,GAAK,GACpC7G,EAAS6P,EAAQA,EAAM7P,OAAS,EAClCoQ,OAAOxT,EAMX,MAAO,CAAE,EALQtD,YAAQuW,GAAO,SAACtW,GACzByG,EAAS,IACToQ,EAAO7W,EAAM+M,UAGG,EAAK8J,MAjCrC,6BAkBI,SAAsBhF,GAClB,IAAI3Y,EAAO,IAAI4d,EAEf,OADAnR,GAAKmL,aAAae,EAAM3Y,GACjBA,MArBf,GAA6ByM,ICtCRqR,G,oDACjB,aAAe,wCACLxP,GAASyP,OAAQ,IAAK,CAAEjiB,EAAG,EAAGC,EAAG,GAAK,CACxC,EAAG,CACCsK,KAAM,OACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,SACb/C,KAAM,CAAEC,MAAO,IAAK3H,UAAU,IAElC,EAAG,CACCgH,KAAM,QACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,M,oDAWlB,SAAgBqN,EAA+B1N,EAAgB4O,GAC3D,IAAM8H,EAAQ,MAAOhJ,EAASA,EAAO,GAAK,GACpC7G,EAAS6P,EAAQA,EAAM7P,OAAS,EAOtC,OANA+H,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAK1H,UAAW,EAC5CyH,EAAMJ,GAAQrF,WAAW,GAAG0F,KAAKC,MAAQuG,QAG1C,CAAE,EAAKA,M,6BAflB,SAAsBoL,GAClB,IAAI3Y,EAAO,IAAI8d,EAEf,OADArR,GAAKmL,aAAae,EAAM3Y,GACjBA,M,GArByByM,ICA3BuR,GAAb,oDAGI,aAAe,IAAD,+BACV,cAAM1P,GAAS0P,kBAAmB,IAAK,CAAEliB,EAAG,EAAGC,EAAG,GAAK,CACnD,EAAG,CACCsK,KAAM,SACNF,UAAWzK,EAAU0K,UACrB0D,YAAa,OACb/C,KAAM,IAEV,EAAG,CACCV,KAAM,MACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFqB,MAAO,cAGf,EAAG,CACC/B,KAAM,SACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFqB,MAAO,oBAvBhB1B,YAEO,IADP4O,cACO,EAyBV,EAAK2G,IAAM,EAAKA,IAAIpf,KAAT,iBACX,EAAKqf,OAAS,EAAKA,OAAOrf,KAAZ,iBACd,EAAKwE,WAAW,GAAG0F,KAAKpC,QAAU,EAAKsX,IACvC,EAAK5a,WAAW,GAAG0F,KAAKpC,QAAU,EAAKuX,OA5B7B,EAHlB,wCAkCI,SAAIlc,GAAa,IAAD,OACR4T,KAAKlN,QAAUkN,KAAK0B,UACpB1B,KAAK0B,UACD,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACjB,EAAKJ,SACLI,EAAM,EAAKJ,QAAQrF,WAAWoE,OAAOC,KAAK1F,EAAKqB,YAAYkM,QAAU,CACjElH,KAAK,SAAD,OAAWZ,OAAOC,KAAK1F,EAAKqB,YAAYkM,OAAS,GACrDpH,UAAWzK,EAAUmQ,SACrB/B,YAAa,SACb/C,KAAM,CACFC,MAAO,cA5CvC,oBAqDI,SAAOhH,GACCyF,OAAOC,KAAK1F,EAAKqB,YAAYkM,SAtDzC,6BAqEI,SAAgB6G,GAAuD,IAAD,OAC5DkI,EAAW,GAMjB,OALA7W,OAAOC,KAAKkO,KAAKvS,YAAYuM,SAAQ,SAAC/H,EAAagJ,GAC/C,KAAIA,GAAS,GAAb,CACA,IAAMuN,EAAMvW,KAAOuO,EAASA,EAAOvO,QAAOsE,EAC1CmS,EAAI,EAAKjb,WAAWwE,GAAKkB,KAAKC,OAASoV,MAEpC,CAAE,EAAKE,MA5EtB,6BA2DI,SAAsBxF,EAAcpQ,EAAgB4O,GAChD,IAAItV,EAAO,IAAIge,EAMf,OALAvR,GAAKmL,aAAad,EAAS9W,GAC3BA,EAAK0G,OAASA,EACd1G,EAAKsV,SAAWA,EAChBtV,EAAKqB,WAAW,GAAG0F,KAAKpC,QAAU3E,EAAKic,IAAIpf,KAAKmD,GAChDA,EAAKqB,WAAW,GAAG0F,KAAKpC,QAAU3E,EAAKkc,OAAOrf,KAAKmD,GAC5CA,MAlEf,GAAuCyM,IAiF1BwR,GAAb,oDAGI,aAAe,IAAD,+BACV,cAAM3P,GAAS2P,oBAAqB,IAAK,CAAEniB,EAAG,EAAGC,EAAG,GAAK,CACrD,EAAG,CACCsK,KAAM,SACNF,UAAWzK,EAAUmQ,SACrB/B,YAAa,OACb/C,KAAM,IAEV,EAAG,CACCV,KAAM,MACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFqB,MAAO,cAGf,EAAG,CACC/B,KAAM,SACNF,UAAWzK,EAAUkQ,QACrB9B,YAAa,SACb/C,KAAM,CACFqB,MAAO,oBAvBhB1B,YAEO,IADP4O,cACO,EAyBV,EAAK2G,IAAM,EAAKA,IAAIpf,KAAT,iBACX,EAAKqf,OAAS,EAAKA,OAAOrf,KAAZ,iBACd,EAAKwE,WAAW,GAAG0F,KAAKpC,QAAU,EAAKsX,IACvC,EAAK5a,WAAW,GAAG0F,KAAKpC,QAAU,EAAKuX,OA5B7B,EAHlB,wCAkCI,SAAIlc,GAAa,IAAD,OACR4T,KAAKlN,QAAUkN,KAAK0B,UACpB1B,KAAK0B,UACD,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACjB,EAAKJ,SACLI,EAAM,EAAKJ,QAAQrF,WAAWoE,OAAOC,KAAK1F,EAAKqB,YAAYkM,QAAU,CACjElH,KAAK,SAAD,OAAWZ,OAAOC,KAAK1F,EAAKqB,YAAYkM,OAAS,GACrDpH,UAAWzK,EAAU0K,UACrB0D,YAAa,SACb/C,KAAM,CACFC,MAAO,cA5CvC,oBAqDI,SAAOhH,GACCyF,OAAOC,KAAK1F,EAAKqB,YAAYkM,SAtDzC,6BAqEI,SAAgB6G,GAAuD,IAAD,OAC5DuF,EAAW,GAOjB,OANAlU,OAAOC,KAAKkO,KAAKvS,YAAYuM,SAAQ,SAAC/H,EAAagJ,GAC/C,KAAIA,GAAS,GAAb,CACA,IAAMqP,EAAY,EAAK7c,WAAWwE,GAAKkB,KAAKC,MACtCoV,EAAM,MAAOhI,GAAU8J,KAAa9J,EAAO,GAAOA,EAAO,GAAK8J,QAAa/T,EACjFwP,EAAI9T,GAAOuW,MAERzC,KA7Ef,6BA2DI,SAAsB7C,EAAcpQ,EAAgB4O,GAChD,IAAItV,EAAO,IAAIie,EAMf,OALAxR,GAAKmL,aAAad,EAAS9W,GAC3BA,EAAK0G,OAASA,EACd1G,EAAKsV,SAAWA,EAChBtV,EAAKqB,WAAW,GAAG0F,KAAKpC,QAAU3E,EAAKic,IAAIpf,KAAKmD,GAChDA,EAAKqB,WAAW,GAAG0F,KAAKpC,QAAU3E,EAAKkc,OAAOrf,KAAKmD,GAC5CA,MAlEf,GAAyCyM,ICxBzC,SAAS0R,GAAmBrH,EAAcpQ,EAAgB4O,GACtD,IAAItV,OAAyBmK,EAC7B,OAAQ2M,EAAQzQ,MACZ,KAAKiI,GAAS0I,OACVhX,EAAO+W,GAAWqH,eAAetH,GACjC,MACJ,KAAKxI,GAASuK,MACV7Y,EAAO4Y,GAAUwF,eAAetH,GAChC,MACJ,KAAKxI,GAAS/G,OACVvH,EAAO0Y,GAAW0F,eAAetH,GACjC,MACJ,KAAKxI,GAASwJ,UACV9X,EAAO6X,GAAcuG,eAAetH,GACpC,MACJ,KAAKxI,GAASgK,OACVtY,EAAOqY,GAAW+F,eAAetH,GACjC,MACJ,KAAKxI,GAAS8K,MACVpZ,EAAOmZ,GAAUiF,eAAetH,GAChC,MACJ,KAAKxI,GAASgL,UACVtZ,EAAOqZ,GAAc+E,eAAetH,GACpC,MACJ,KAAKxI,GAASuH,OACV7V,EAAOwZ,GAAW4E,eAAetH,GACjC,MACJ,KAAKxI,GAASrM,OACVjC,EAAO4Z,GAAWwE,eAAetH,GACjC,MACJ,KAAKxI,GAASwL,MACV9Z,EAAO6Z,GAAUuE,eAAetH,GAChC,MACJ,KAAKxI,GAAS6L,UACVna,EAAOka,GAAckE,eAAetH,GACpC,MACJ,KAAKxI,GAASoM,IACV1a,EAAOya,GAAQ2D,eAAetH,GAC9B,MACJ,KAAKxI,GAASwM,IACV9a,EAAO6a,GAAQuD,eAAetH,GAC9B,MACJ,KAAKxI,GAASiN,MACVvb,EAAOsb,GAAU8C,eAAetH,GAChC,MACJ,KAAKxI,GAASmN,QACVzb,EAAOwb,GAAY4C,eAAetH,GAClC,MACJ,KAAKxI,GAASyG,kBACV/U,EAAO+U,GAAkBqJ,eAAetH,EAASpQ,EAAQ4O,GACzD,MACJ,KAAKhH,GAASqG,mBACV3U,EAAO2U,GAAmByJ,eAAetH,GACzC,MACJ,KAAKxI,GAAS4G,iBACVlV,EAAOkV,GAAiBkJ,eAAetH,GACvC,MACJ,KAAKxI,GAAS+N,QACVrc,EAAOqc,GAAQ+B,eAAetH,GAC9B,MACJ,KAAKxI,GAASiO,WACVvc,EAAOuc,GAAW6B,eAAetH,GACjC,MACJ,KAAKxI,GAAS4O,MACVld,EAAOid,GAAUmB,eAAetH,GAChC,MACJ,KAAKxI,GAAS6G,IACVnV,EAAOsd,GAAQc,eAAetH,GAC9B,MACJ,KAAKxI,GAASkP,SACVxd,EAAOud,GAAaa,eAAetH,GACnC,MACJ,KAAKxI,GAASuP,IACV7d,EAAO4d,GAAQQ,eAAetH,GAC9B,MACJ,KAAKxI,GAASyP,OACV/d,EAAO8d,GAAWM,eAAetH,GACjC,MACJ,KAAKxI,GAASoP,MACV1d,EAAOyd,GAAUW,eAAetH,GAChC,MACJ,KAAKxI,GAAS0P,kBACVhe,EAAOge,GAAkBI,eAAetH,EAASpQ,EAAQ4O,GACzD,MACJ,KAAKhH,GAAS2P,oBACVje,EAAOie,GAAoBG,eAAetH,EAASpQ,EAAQ4O,GAC3D,MACJ,KAAKhH,GAAS8G,WACVpV,EAAOmc,GAAeiC,eAAetH,EAASpQ,EAAQ4O,GAG9D,IAAKtV,EACD,MAAM,IAAIqe,MAAM,sCAEpB,OAAOre,E,YCtIIgX,GApBA,SAACza,GACZ,IAAM+hB,EAAY5M,iBAA0B,MAW5C,OATA6M,qBAAU,WACN,GAAGD,EAAU9V,QAAS,CAClB,IAAM6O,EAAMiH,EAAU9V,QAAQgW,WAAW,MACtCnH,GAAO9a,EAAM2J,UAAUa,KAAK4Q,aAC3Bpb,EAAM2J,UAAUa,KAAK4Q,YAAYN,MAG1C,CAACiH,EAAW/hB,EAAM2J,UAAUa,OAG3B,uCACI,sBAAKnI,MAAO,CAACC,SAAU,WAAY4f,OAAQ,GAAKpe,gBAAiB9D,EAAM2J,UAAUa,KAAKoQ,aAAcrY,MAAOvC,EAAM2J,UAAUa,KAAKkQ,aAAclY,OAAQxC,EAAM2J,UAAUa,KAAKmQ,iBAC3K,yBAAQtY,MAAO,CAACC,SAAU,WAAY6f,eAAgB,QAAS5f,MAAOvC,EAAM2J,UAAUa,KAAKkQ,aAAclY,OAAQxC,EAAM2J,UAAUa,KAAKmQ,cAAenZ,IAAKugB,QC0BvJK,GAxCC,SAACpiB,GACb,IAAMqiB,EAASlN,iBAAuB,MAkCtC,OAhCA6M,qBAAU,WACN,GAAIK,EAAOpW,QAAS,CAChB,IAAMqW,EAAMD,EAAOpW,QACbsW,EAAQ,IAAIpC,KACZqC,EAAS,IAAIrC,KAAwB,GAAIzT,OAAO+V,WAAa/V,OAAOgW,YAAa,GAAK,KACtFC,EAAW,IAAIxC,KACfyC,EAAQ,IAAIzC,KAAkB,SAAU,EAAG,KACjDyC,EAAMtgB,SAASme,IAAK,EAAG,EAAG,GAC1B8B,EAAM7C,IAAIkD,GACVD,EAASE,QAAQ,IAAK,KACtBP,EAAIQ,YAAYH,EAASI,YACzBP,EAAOlgB,SAAS0gB,EAAI,EAEhBhjB,EAAM2J,UAAUa,KAAKuV,KACrBwC,EAAM7C,IAAI1f,EAAM2J,UAAUa,KAAKuV,KAGnC,IAAI7e,EAAK,EAOT,OANgB,SAAV+hB,IACF/hB,EAAKgiB,sBAAuBD,GAC5BN,EAASQ,OAAQZ,EAAOC,GAE5BS,GAEO,WACHG,qBAAqBliB,GACrBohB,EAAIe,YAAYV,EAASI,YACzBJ,EAASW,cAGlB,CAACjB,EAAQriB,EAAM2J,UAAUa,OAGxB,sBAAKnI,MAAO,CAAEE,MAAO,IAAKC,OAAQ,KAAOhB,IAAK6gB,KCpC/C,SAASkB,GAA+BvjB,GAC3C,IAAQ2J,EAAc3J,EAAd2J,UACR,MAA8B,WAA1BA,EAAU4D,YACH,eAAC,GAAD,eAAYvN,IAEO,YAA1B2J,EAAU4D,YACH,eAAC,GAAD,eAAavN,IAEjB,KCSX,IAAIwjB,GAAuB,IAAIxM,GAgXhByM,GA9WO,WAElB,MAA0CrhB,IAAMqS,SAA4B,MAA5E,mBAAOiP,EAAP,KAAsBC,EAAtB,KACA,EAA4DvhB,IAAMqS,UAAkB,GAApF,mBAAOmP,EAAP,KAA+BC,EAA/B,KACA,EAAsCzhB,IAAMqS,SAAuB,CAC/D/S,KAAM,EACNE,cAAe,CAAErC,EAAG,EAAGC,EAAG,KAF9B,mBAAO0C,EAAP,KAAoB4hB,EAApB,KAIA,EAA0C1hB,IAAMqS,SAA0B,IAA1E,mBAAOzL,EAAP,KAAsB+a,EAAtB,KACA,EAA0B3hB,IAAMqS,SAAyB,IAAzD,mBAAOhD,EAAP,KAAcsH,EAAd,KACA,EAA0B3W,IAAMqS,SAAyB,IAAzD,mBAAOrL,EAAP,KAAc4a,EAAd,KAEA,EAAsD5hB,IAAMqS,UAAS,GAArE,mBAAOwP,EAAP,KAA4BC,EAA5B,KACAlC,qBAAU,WACN,IAAMmC,EAAqBC,aAAaC,QAAQ,SAC1CC,EAAqBF,aAAaC,QAAQ,SAC1CE,EAA4BJ,EAAqB/F,KAAKoG,MAAML,GAAsB,GAClFM,EAA4BH,EAAqBlG,KAAKoG,MAAMF,GAAsB,GACpFH,GACAjb,OAAOC,KAAKob,GAAWlT,SAAQ,SAAC/H,GAC5Bib,EAAUjb,GAAOsY,GAAmB2C,EAAUjb,GAAMA,EAAKyP,MAGjEiL,EAASS,GACT1L,EAASwL,GACTL,GAAuB,KACxB,IAEH9hB,IAAM4f,WAAU,WACRiC,IACAC,GAAuB,GACvBV,GAAUkB,aAAajT,EAAOrI,GAC9Boa,GAAUmB,OAAOlT,EAAOrI,EAAO2P,MAEpC,CAACkL,EAAqB7a,EAAOqI,IAEhCuQ,qBAAU,WACF9Y,OAAOC,KAAKsI,GAAOT,OAAS,GAC5BoT,aAAaQ,QAAQ,QAASxG,KAAKC,UAAU5M,MAElD,CAACA,IACJuQ,qBAAU,WACF9Y,OAAOC,KAAKC,GAAO4H,OAAS,GAC5BoT,aAAaQ,QAAQ,QAASxG,KAAKC,UAAUjV,MAElD,CAACA,IAEJ,IAAMyb,EJxCC,CACH,EAAG,IAAIrK,GACP,EAAG,IAAIc,GACP,EAAG,IAAIQ,GACP,EAAG,IAAIK,GACP,EAAG,IAAIS,GACP,EAAG,IAAIP,GACP,EAAG,IAAIS,GACP,EAAG,IAAIG,GACP,EAAG,IAAII,GACP,EAAG,IAAIC,GACP,GAAI,IAAIK,GACR,GAAI,IAAIO,GACR,GAAI,IAAII,GACR,GAAI,IAAIS,GACR,GAAI,IAAIE,GACR,GAAI,IAAIzG,GACR,GAAI,IAAIJ,GACR,GAAI,IAAIO,GACR,GAAI,IAAImH,GACR,GAAI,IAAIE,GACR,GAAI,IAAIU,GACR,GAAI,IAAIK,GACR,GAAI,IAAIC,GACR,GAAI,IAAIK,GACR,GAAI,IAAIE,GACR,GAAI,IAAIL,GACR,GAAI,IAAIO,GACR,GAAI,IAAIC,GACR,GAAI,IAAI9B,IIaNkF,EAA2CxZ,uBAAY,SAAC6F,GACjC,IAArBA,EAAUH,QAAsC,SAAtBG,EAAU,GAAG1H,MACvCsP,GACI,SAACtH,GACG,IAAMsT,EAAiB5T,EAAU,GAAGjQ,GAC9B8jB,EAA2B,GAOjC,OANA9b,OAAOC,KAAKsI,GAAOJ,SAAQ,SAAA/H,GACnBA,IAAQyb,IACRC,EAAS1b,GAAOmI,EAAMnI,OAG9B0b,EAASD,GAAkBtT,EAAMsT,GAC1BC,KAGnBjB,EAAiB5S,KAClB,IAEH/O,IAAM4f,WAAU,WACZ,IAAMiD,EAAWC,aAAY,WACzB,IAAMC,EAAoB,GACpBH,EAAW1a,YAAQmH,GAAO,SAAClH,GAC7B,cAAgBrB,OAAOC,KAAKsI,GAA5B,eAAoC,CAA/B,IAAInI,EAAG,KACgB,UAApBiB,EAAMjB,GAAKQ,MAAoBS,EAAMjB,GAAKxE,WAAW,GAAG0F,KAAKC,QAC7DF,EAAMjB,GAAKxE,WAAW,GAAG0F,KAAKC,OAASO,OAAOT,EAAMjB,GAAKxE,WAAW,GAAG0F,KAAKC,OAAS,GAAG1K,WACxFolB,EAAQ3S,KAAKlJ,QAIrB6b,EAAQnU,OAAS,IACjB+H,EAASiM,GACTG,EAAQ9T,SAAQ,SAAA8G,GAAC,OAAIqL,GAAU1K,cAAcX,EAAG6M,EAAU5b,MAC1Doa,GAAUmB,OAAOK,EAAU5b,EAAO2P,MAEvC,IAAO,IACV,OAAO,kBAAMqM,cAAcH,MAC5B,CAACxT,EAAOrI,IAEX,IAAMiH,EAAajO,IAAMkJ,aACrB,SAACpK,EAAYwQ,EAAcC,EAAcC,GACrCmH,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMrJ,GAAIoB,SAAW,CAAE/C,EAAGmS,EAAMlS,EAAGmS,GACnCpH,EAAMrJ,GAAIqB,MAAQqP,UAG3B,IAGDtD,EAAelM,IAAMkJ,aACvB,SAAC7G,GACGuf,GACI,SAAA5a,GAAK,OAAIkB,YAAQlB,GAAO,SAACmB,GACrBA,EAAM9K,KAAkBgF,QAGhC,IAAM4gB,EAAW/a,YAAQlB,GAAO,SAACmB,GAC7BA,EAAM9K,KAAkBgF,KAE5B+e,GAAU1K,cAAcrU,EAAKwK,aAAcwC,EAAO4T,GAClD7B,GAAUmB,OAAOlT,EAAO4T,EAAUtM,KACnC,CAAC3P,EAAOqI,IAGTwE,EAAoB7T,IAAMkJ,aAC5B,WACI,IAAMga,EAAgBtc,EAAcK,QAAO,SAACoB,GAAD,MAAyC,SAAfA,EAAMhB,QAAiBF,KAAI,SAACkB,GAAD,OAAWA,EAAMvJ,MAC3GqkB,EAAkBvc,EAAcK,QAAO,SAACoB,GAAD,MAAyC,SAAfA,EAAMhB,QAAiBF,KAAI,SAACkB,GAAD,OAAWA,EAAMvJ,MACnH6X,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrB+a,EAAcjU,SAAQ,SAACnQ,UACZqJ,EAAMrJ,YAIzB8iB,GACI,SAAA5a,GAAK,OAAIkB,YAAQlB,GAAO,SAACmB,GACrBrB,OAAOC,KAAKC,GAAOiI,SAAQ,SAAAgF,GACvB,IAAM5R,EAAO2E,EAAMiN,IACfiP,EAAcjkB,SAASoD,EAAKqK,cAAgBwW,EAAcjkB,SAASoD,EAAKwK,uBACjE1E,EAAM8L,MAGrBkP,EAAgBlU,SAAQ,SAACnQ,UACdqJ,EAAMrJ,YAKzB,IAAM8jB,EAAW1a,YAAQmH,GAAO,SAAClH,GAC7B+a,EAAcjU,SAAQ,SAACnQ,UACZqJ,EAAMrJ,SAGfskB,EAA8B,GAC9BH,EAAW/a,YAAQlB,GAAO,SAACmB,GAC7BrB,OAAOC,KAAKC,GAAOiI,SAAQ,SAAAgF,GACvB,IAAM5R,EAAO2E,EAAMiN,IACfiP,EAAcjkB,SAASoD,EAAKqK,cAAgBwW,EAAcjkB,SAASoD,EAAKwK,iBACpEqW,EAAcjkB,SAASoD,EAAKwK,gBAAkBqW,EAAcjkB,SAASoD,EAAKqK,cAC1E0W,EAAkBhT,KAAK/N,EAAKqK,oBAEzBvE,EAAM8L,OAGrBkP,EAAgBlU,SAAQ,SAACnQ,UACdqJ,EAAMrJ,SASrBskB,EAAkBnU,SAAQ,SAAAlH,GACtBqZ,GAAU1K,cAAc3O,EAAQ6a,EAAUK,GAC1C7B,GAAUmB,OAAOK,EAAUK,EAAUtM,QAG7C,CAAC/P,EAAeyI,EAAOrI,IAG3B,EAAkCqL,wBAA6B7G,GAA/D,mBAAO6X,EAAP,KAAkBC,EAAlB,KACA1D,qBAAU,WACFyD,IACAjC,GAAU1K,cAAc2M,EAAWhU,EAAOrI,GAC1Coa,GAAUmB,OAAOlT,EAAOrI,EAAO2P,GAC/B2M,OAAa9X,MAElB,CAAC6X,EAAWhU,EAAOrI,IACtB,IAAMsM,EAAkBtT,IAAMkJ,aAC1B,SAACpK,GACG,GAAIwiB,EAAe,CACf,IAAM+B,EAAYhmB,IAClBsZ,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrB,IACMob,EAAU/D,GADAxD,KAAKoG,MAAMpG,KAAKC,UAAUwG,EAAa3jB,KACXukB,EAAW1M,GACjDrH,GACDxP,EAAYN,cAAcrC,EAAI2C,EAAYR,KAC3CgiB,EAAcnkB,EAAI2C,EAAYR,KAC5BiQ,GACDzP,EAAYN,cAAcpC,EAAI0C,EAAYR,KAC3CgiB,EAAclkB,EAAI0C,EAAYR,KAClCikB,EAAQrjB,SAAW,CAAE/C,EAAGmS,EAAMlS,EAAGmS,GACjCpH,EAAMkb,GAAaE,QAG3BD,EAAaD,GACb5B,GAA0B,GAC1BF,EAAiB,SAGzB,CAACzhB,EAAawhB,EAAemB,IAG3Bxa,EAAoBjI,IAAMkJ,aAC5B,SAACnB,EAAgBC,EAAaT,GAC1BoP,GACI,SAAAtH,GAAK,OAAInH,YAAQmH,GAAO,SAAClH,GACrBA,EAAMJ,GAAQrF,WAAWsF,GAAOT,QAGxC,IAAMqb,EAAW1a,YAAQmH,GAAO,SAAClH,GAC7BA,EAAMJ,GAAQrF,WAAWsF,GAAOT,KAEpC6Z,GAAU1K,cAAc3O,EAAQ6a,EAAU5b,GAC1Coa,GAAUmB,OAAOK,EAAU5b,EAAO2P,KACnC,CAACtH,EAAOrI,IAGTwc,EAAgBxjB,IAAMkJ,aACxB,SAAC9E,GACGA,EAAMqf,iBACDnC,GAGDG,GAA0B,GAC1BF,EAAiB,OAHjBA,EAAiB,CAAEpkB,EAAGiH,EAAMuG,MAAOvN,EAAGgH,EAAMwG,UAMpD,CAAC0W,IAGCrjB,EAAc+B,IAAMkJ,aACtB,WACQoY,IAAkBE,IAClBC,GAA0B,GAC1BF,EAAiB,SAGzB,CAACC,EAAwBF,EAAeC,IAGtCmC,EAAexa,uBAAY,WAC7B,IAAMd,EAAO,CACT,MAASiH,EACT,MAASrI,GAGP2c,EAAUC,SAASC,cAAc,KACvCF,EAAQG,aAAa,OAAQ,iCAAmCC,mBAAmB/H,KAAKC,UAAU7T,KAClGub,EAAQG,aAAa,WAAY,yBAEjCH,EAAQ1jB,MAAM6I,QAAU,OACxB8a,SAAS7hB,KAAK2e,YAAYiD,GAE1BA,EAAQK,QAERJ,SAAS7hB,KAAKkf,YAAY0C,KAC3B,CAACtU,EAAOrI,IAELid,EAAe/a,uBAAY,SAACgb,GAE9B,GADA9C,GAAU+C,UACND,EAAItlB,OAAOwlB,MAAMC,KAAO,GAA5B,CAIA,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GACb,GAAIA,EAAK7lB,QAAU6lB,EAAK7lB,OAAO8lB,QAAUD,EAAK7lB,OAAO8lB,OAAQ,CACzD,IAAMtc,EAAO4T,KAAKoG,MAAMuC,KAAMF,EAAK7lB,OAAO8lB,OAAkBE,UAAU,MACtE9d,OAAOC,KAAKqB,EAAKiH,OAAOJ,SAAQ,SAAC/H,GAC7BkB,EAAKiH,MAAMnI,GAAOsY,GAAmBpX,EAAKiH,MAAMnI,GAAMA,EAAKyP,MAE/DA,EAASvO,EAAKiH,OACduS,EAASxZ,EAAKpB,OACd8a,GAAuB,KAG/BwC,EAAOO,cAAcX,EAAItlB,OAAOwlB,MAAM,OACvC,IAEGU,EAAgB5b,uBAAY,WAC9BkY,GAAU+C,QACVxN,EAAS,IACTiL,EAAS,MACV,IAECmD,EAAa,KACbzD,GAA0C,IAAzB1a,EAAcgI,OAC/BmW,EAAa,sBACT9kB,MAAO,CACHE,MAAO,IACPC,OAAQ,IACRF,SAAU,WACV6D,IAAKud,EAAclkB,EACnB4G,KAAMsd,EAAcnkB,EACpBuE,gBAAiB,SAPZ,SAST,eAAC,GAAD,CACIgS,YAAa+O,EACbnP,gBAAiBA,EACjBC,aAAckO,EACdpU,+BAAgC8T,OAInCG,IACLyD,EAAa,sBACT9kB,MAAO,CACHE,MAAO,IACPC,OAAQ,IACRF,SAAU,WACV6D,IAAKud,EAAclkB,EACnB4G,KAAMsd,EAAcnkB,EACpBuE,gBAAiB,SAPZ,SAST,eAAC,GAAD,CACI6R,aAAckO,EACd5N,kBAAmBA,OAK/B,IAAMmR,EAAc,CAChBC,KAAM,kBACNC,eAAgB,OAChBxjB,gBAAiB,UACjBC,MAAO,UACPwjB,QAAS,kBACTC,UAAW,oBACXC,YAAa,oBACbC,aAAc,oBACdC,WAAY,qBAGhB,OACI,uCACI,uBACItlB,MAAO,CAAEE,MAAO,OAAQC,OAAQ,QAChCojB,cAAeA,EACfvlB,YAAaA,EACbsK,SAAU,EAJd,UAKI,eAAC,GAAD,CACIzI,YAAaA,EACbuP,MAAOA,EACPrI,MAAOA,EACPJ,cAAeA,EACfvH,cAAeqiB,EACf3R,gBAAiB2S,EACjBzU,WAAYA,EACZ/B,aAAcA,EACdjE,kBAAmBA,EACnBoF,+BAAgC8T,KAEnC4D,KAEL,yBAAQ/e,QAAS0d,EAAczjB,MAAK,aAAIC,SAAU,WAAY8D,KAAM,EAAGwhB,OAAQ,GAAMR,GAArF,kBACA,wBAAOS,QAAQ,QAAQzmB,UAAU,MAAMiB,MAAK,aAAIC,SAAU,WAAY8D,KAAM,GAAIwhB,OAAQ,GAAMR,GAA9F,kBACA,wBAAOld,SAAUmc,EAAcnlB,GAAG,QAAQmB,MAAO,CAAEylB,WAAY,UAAYre,KAAK,SAChF,yBAAQrB,QAAS8e,EAAe7kB,MAAK,aAAIC,SAAU,WAAYylB,MAAO,EAAGH,OAAQ,GAAMR,GAAvF,uBCtXGY,GANH,kBACR,sBAAK3lB,MAAO,CAAEE,MAAO,OAAQC,OAAQ,SAAWpB,UAAU,MAA1D,SACI,eAAC,GAAD,OCDF6mB,GAAYjC,SAASkC,eAAe,QAC7BC,qBAAWF,IACnB9E,OAAO,eAAC,IAAMiF,WAAP,UAAkB,eAAC,GAAD,S","file":"static/js/main.505101d2.chunk.js","sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"export enum NodeName {\n    Canvas = \"canvas\",\n    Color = \"color\",\n    Number = \"number\",\n    Rectangle = \"rectangle\",\n    Rotate = \"rotate\",\n    Timer = \"timer\",\n    Translate = \"translate\",\n    IfElse = \"if-else\",\n    String = \"string\",\n    Split = \"split\",\n    Operation = \"operation\",\n    Log = \"log\",\n    Arc = \"arc\",\n    Check = \"check\",\n    Boolean = \"boolean\",\n    FunctionInputNode = \"function-inputs\",\n    FunctionOutputNode = \"function-outputs\",\n    FunctionCallNode = \"function-call\",\n    ThreeJS = \"threejs\",\n    ThreeJSBox = \"threejs-box\",\n    Range = \"range\",\n    Map = \"map\",\n    TextArea = \"text-area\",\n    Pop = \"pop\",\n    Length = \"length\",\n    Shift = \"shift\",\n    ObjectCreatorNode = \"object-creator\",\n    ObjectExtractorNode = \"object-extractor\",\n    LambdaCall = \"lambda-call\"\n}",null,null,null,null,"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { immerable } from \"immer\";\nimport {\n    ConnectorCollection,\n    LinkCollection,\n    NodeCollection,\n    NodeModel,\n    XYPosition\n} from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\n\nfunction getOutputLinks(nodeId: string, links: LinkCollection): LinkCollection {\n    const linkOutputs: LinkCollection = {};\n    Object.keys(links).forEach((linkKey) => {\n        const link = links[linkKey];\n        if (link.outputNodeId === nodeId) {\n            linkOutputs[linkKey] = links[linkKey];\n        }\n    });\n    return linkOutputs;\n}\n\nfunction getInputsLinks(nodeId: string, links: LinkCollection): LinkCollection {\n    const linkOutputs: LinkCollection = {};\n    Object.keys(links).forEach((linkKey) => {\n        const link = links[linkKey];\n        if (link.inputNodeId === nodeId) {\n            linkOutputs[linkKey] = links[linkKey];\n        }\n    });\n    return linkOutputs;\n}\n\nfunction propagationDictToOrderedList(propagationDict: { [id: string]: number }): string[] {\n    const propagationList: [string, number][] = [];\n    Object.keys(propagationDict).forEach(nodeId => propagationList.push([nodeId, propagationDict[nodeId]]));\n    propagationList.sort((a, b) => a[1] - b[1]);\n    return propagationList.map(([nodeId, _]) => nodeId);\n}\n\nfunction createPropagationTree(nodeId: string, links: LinkCollection, depth: number, propagationDict: { [id: string]: number }): void {\n    propagationDict[nodeId] = nodeId in propagationDict ? Math.max(depth, propagationDict[nodeId]) : depth;\n    const outputLinks = getOutputLinks(nodeId, links);\n    Object.keys(outputLinks).forEach(linkKey => {\n        createPropagationTree(links[linkKey].inputNodeId, links, depth + 1, propagationDict);\n    });\n}\n\ntype FunctionCall = {\n    functionOutId: string;\n    propagationValues: { [id: string]: any };\n    inputs: { [id: string]: any };\n    alreadyComputedNodes: string[];\n    toBeComputed: [string, boolean][];\n}\n\nexport class TaskQueue {\n    protected tasks: [string, boolean][] = [];\n    protected propagationValues: { [id: string]: any } = {};\n    protected functionCalls: FunctionCall[] = [];\n    protected functionResults: any[] = [];\n\n    reset() {\n        this.tasks = [];\n        this.propagationValues = {};\n        this.functionCalls = [];\n        this.functionResults = [];\n    }\n\n    popResult(): any {\n        return this.functionResults.pop();\n    }\n\n    propateFunction(nodeId: string, links: LinkCollection, fIns: { [id: string]: any }): any {\n        // 1. search output node\n        const fLinkId = Object.keys(links).find((key) => {\n            const link = links[key];\n            return link.outputNodeId === nodeId && link.outputPinId === \"0\";\n        });\n        if (!fLinkId) {\n            console.log(\"no node id\");\n            return;\n        }\n\n        const fOutId = links[fLinkId].inputNodeId;\n        this.functionCalls.unshift({\n            functionOutId: fOutId,\n            inputs: fIns,\n            propagationValues: {},\n            alreadyComputedNodes: [],\n            toBeComputed: [[fOutId, false]],\n        });\n    }\n\n    propagateAll(nodes: NodeCollection, links: LinkCollection) {\n        const propagationDict: { [id: string]: number } = {};\n        Object.keys(nodes).forEach(nodeId => {\n            createPropagationTree(nodeId, links, 0, propagationDict);\n        });\n        const propagationList = propagationDictToOrderedList(propagationDict);\n        propagationList.forEach(v => this.tasks.push([v, false]));\n    }\n\n    propagateNode(nodeId: string, nodes: NodeCollection, links: LinkCollection) {\n        const propagationDict: { [id: string]: number } = {};\n        createPropagationTree(nodeId, links, 0, propagationDict);\n        const propagationList = propagationDictToOrderedList(propagationDict);\n\n        let fOutId = \"\";\n        propagationList.forEach(k => {\n            if (nodes[k].name === NodeName.FunctionOutputNode) {\n                fOutId = k;\n            }\n        });\n\n        // If one of the node to propagate is a function output node\n        if (fOutId !== \"\") {\n            // Search associate function input\n            const fOutIdLinks = getInputsLinks(fOutId, links);\n            let fInId = \"\";\n            Object.keys(fOutIdLinks).forEach(k => {\n                if (links[k].inputPinId === \"0\") {\n                    fInId = links[k].outputNodeId;\n                }\n            });\n            const fIn = nodes[fInId];\n            // If function input is found\n            if (fIn && fIn.name === NodeName.FunctionInputNode) {\n                const funName = fIn.connectors[\"0\"].data.value;\n                const functionCallersNodeIds: string[] = [];\n                // Find each function caller and call them\n                Object.keys(nodes).forEach(k => {\n                    if (nodes[k].name === NodeName.FunctionCallNode && nodes[k].connectors[\"0\"].data.value === funName) {\n                        functionCallersNodeIds.push(k);\n                    }\n                    if (nodes[k].name === NodeName.Map && nodes[k].connectors[\"2\"].data.value === funName) {\n                        functionCallersNodeIds.push(k);\n                    }\n                    if (nodes[k].name === NodeName.LambdaCall && nodes[k].connectors[\"0\"].data.value === funName) {\n                        functionCallersNodeIds.push(k);\n                    }\n                });\n                functionCallersNodeIds.forEach(k => this.propagateNode(k, nodes, links));\n            }\n        }\n        // Else, run nominal transformation\n        else {\n            propagationList.forEach(v => this.tasks.push([v, false]));\n        }\n    }\n\n    runAll(nodes: NodeCollection, links: LinkCollection, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>) {\n        while (this.functionCalls.length > 0 || this.tasks.length > 0) {\n            if (this.functionCalls.length > 0) {\n                this.runFunctionTask(nodes, links, setNodes);\n            } else {\n                this.runTask(nodes, links, setNodes);\n            }\n        }\n    }\n\n    runFunctionTask(nodes: NodeCollection, links: LinkCollection, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>) {\n        const functionCall = this.functionCalls[0];\n        const nodeId = functionCall.toBeComputed[0][0];\n\n        if (nodeId) {\n            const node = nodes[nodeId] as Node;\n            const outputsLinks = getInputsLinks(nodeId, links);\n            const outputsNodes = Object.keys(outputsLinks).map(k => {\n                return links[k].outputNodeId;\n            });\n\n            let readyToCompute = true;\n            if (node.name === NodeName.IfElse) {\n                Object.keys(outputsLinks).forEach(ifLinkId => {\n                    if (links[ifLinkId].inputPinId === \"1\") {\n                        if (ifLinkId in functionCall.propagationValues) {\n                            const res = functionCall.propagationValues[ifLinkId] as boolean;\n                            Object.keys(outputsLinks).forEach(k => {\n                                if ((links[k].inputPinId === \"2\" && res) || (links[k].inputPinId === \"3\" && !res)) {\n                                    const id = links[k].outputNodeId;\n                                    if (!functionCall.alreadyComputedNodes.includes(id)) {\n                                        readyToCompute = false;\n                                        functionCall.toBeComputed.unshift([id, false]);\n                                    }\n                                }\n                            });\n                        } else {\n                            readyToCompute = false;\n                            functionCall.toBeComputed.unshift([links[ifLinkId].outputNodeId, false]);\n                        }\n                    }\n                });\n            } else {\n                outputsNodes.forEach((depNodeId) => {\n                    if (!functionCall.alreadyComputedNodes.includes(depNodeId)) {\n                        readyToCompute = false\n                        functionCall.toBeComputed.unshift([depNodeId, false]);\n                    }\n                });\n            }\n\n            if (readyToCompute) {\n                // Preparing inputs of current propagation\n                const inputLinks = getInputsLinks(nodeId, links);\n                const inputValues: { [id: string]: any } = {};\n                Object.keys(inputLinks).forEach((linkId) => {\n                    if (!(linkId in functionCall.propagationValues)) {\n                        return;\n                    }\n                    const pinId = links[linkId].inputPinId;\n                    if (pinId in node.connectors) {\n                        if (node.connectors[pinId].isMultiInputAllowed) {\n                            if (!(pinId in inputValues)) {\n                                inputValues[pinId] = [];\n                            }\n                            inputValues[pinId].push(functionCall.propagationValues[linkId]);\n                        } else {\n                            inputValues[pinId] = functionCall.propagationValues[linkId];\n                        }\n                    }\n                });\n                // Computing current node\n                if (!functionCall.toBeComputed[0][1]) {\n                    functionCall.toBeComputed[0][1] = node.registerfunctionRun(inputValues, nodeId, setNodes, nodes, links, this);\n                    if (functionCall.toBeComputed[0][1]) {\n                        return;\n                    }\n                }\n                const outputValues = node.computeSpecific(node.name === NodeName.FunctionInputNode ? functionCall.inputs : inputValues, nodeId, setNodes, nodes, links, this);\n                // Adding values to propagationValues\n                const ouputsLinks = getOutputLinks(nodeId, links);\n                Object.keys(ouputsLinks).forEach((linkId) => {\n                    functionCall.propagationValues[linkId] = outputValues[links[linkId].outputPinId];\n                });\n                functionCall.alreadyComputedNodes.push(nodeId);\n                functionCall.toBeComputed.shift();\n            }\n\n            if (functionCall.toBeComputed.length === 0) {\n                const fLinkResId = Object.keys(links).find((key) => {\n                    const link = links[key];\n                    return link.inputNodeId === functionCall.functionOutId && link.inputPinId === \"1\";\n                });\n                if (fLinkResId && fLinkResId in functionCall.propagationValues) {\n                    this.functionResults.push(functionCall.propagationValues[fLinkResId]);\n                    this.functionCalls.shift();\n                } else {\n                    this.functionResults.push(undefined);\n                    this.functionCalls.shift();\n                }\n            }\n        }\n    }\n\n    runTask(nodes: NodeCollection, links: LinkCollection, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>) {\n        const propagingNodeId = this.tasks[0];\n        if (propagingNodeId) {\n            const node = nodes[propagingNodeId[0]] as Node;\n            // Preparing inputs of current propagation\n            const inputLinks = getInputsLinks(propagingNodeId[0], links);\n            const inputValues: { [id: string]: any } = {};\n            Object.keys(inputLinks).forEach((linkId) => {\n                if (!(linkId in this.propagationValues)) {\n                    return;\n                }\n                const pinId = links[linkId].inputPinId;\n                if (node.connectors[pinId] && node.connectors[pinId].isMultiInputAllowed) {\n                    if (!(pinId in inputValues)) {\n                        inputValues[pinId] = [];\n                    }\n                    inputValues[pinId].push(this.propagationValues[linkId]);\n                } else if (node.connectors[pinId]) {\n                    inputValues[pinId] = this.propagationValues[linkId];\n                }\n            });\n            // Executing\n            if (!propagingNodeId[1]) {\n                this.tasks[0][1] = node.registerfunctionRun(inputValues, propagingNodeId[0], setNodes, nodes, links, this);\n                if (this.tasks[0][1]) {\n                    return;\n                }\n            }\n            const outputValues = node.computeSpecific(inputValues, propagingNodeId[0], setNodes, nodes, links, this);\n            // Adding values to propagationValues\n            const ouputsLinks = getOutputLinks(propagingNodeId[0], links);\n            Object.keys(ouputsLinks).forEach((linkId) => {\n                this.propagationValues[linkId] = outputValues[links[linkId].outputPinId];\n            });\n            this.tasks.shift();\n        }\n    }\n};\n\nexport default abstract class Node implements NodeModel {\n    [immerable] = true;\n    public name: string;\n    public position: XYPosition;\n    public width: number;\n    public connectors: ConnectorCollection;\n\n    constructor(name: string, width: number, position: XYPosition, connectors: ConnectorCollection) {\n        this.name = name;\n        this.width = width;\n        this.position = position;\n        this.connectors = connectors;\n    }\n\n    static initFromJson(jsonObj: any, node: Node) {\n        node.name = jsonObj.name;\n        node.width = jsonObj.width;\n        node.position = jsonObj.position;\n        node.connectors = jsonObj.connectors;\n    }\n\n    public registerfunctionRun(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>, nodes: NodeCollection, links: LinkCollection, queue: TaskQueue): boolean {\n        return false;\n    }\n    abstract computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>, nodes: NodeCollection, links: LinkCollection, queue: TaskQueue): { [id: string]: any };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class CanvasNode extends Node {\n    constructor() {\n        super(NodeName.Canvas, 430, {x:0, y:0}, {\n            0: { \n                name: \"draw\", \n                pinLayout: PinLayout.LEFT_PIN, \n                contentType: \"canvas\", \n                data: { canvas_width: 400, canvas_height: 400, canvas_color: \"white\" },\n                isMultiInputAllowed: true\n            },\n            1: { \n                name: \"width\", \n                pinLayout: PinLayout.LEFT_PIN, \n                contentType: \"number\", \n                data: { value: 400 } \n            },\n            2: { \n                name: \"height\", \n                pinLayout: PinLayout.LEFT_PIN, \n                contentType: \"number\", \n                data: { value: 400 } \n            },\n            3: {\n                name: \"color\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"none\",\n                data: { value: \"white\" },\n                leftPinColor: \"orange\"\n            },\n        });\n    }\n\n    static createFromJson(jsonObj: any) : CanvasNode {\n        let node = new CanvasNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        const width = Number(\"1\" in inputs ? inputs[1] : this.connectors[1].data.value);\n        const height = Number(\"2\" in inputs ? inputs[2] : this.connectors[2].data.value);\n        const color = \"3\" in inputs ? inputs[3] : this.connectors[3].data.value;\n\n        const draw = (ctx: CanvasRenderingContext2D) => {\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            if (inputs[0]) {\n                inputs[0].forEach((e: any) => {\n                    if(Array.isArray(e)) {\n                        e.forEach(ee => ee(ctx));\n                    } else {\n                        e(ctx);\n                    }\n                    \n                });  \n            }\n        }\n\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[0].data.canvas_width = Number(width);\n                draft[nodeId].connectors[0].data.canvas_height = Number(height);\n                draft[nodeId].connectors[0].data.canvas_color = color;\n                draft[nodeId].connectors[0].data.canvas_draw = draw;\n                draft[nodeId].connectors[1].data.disabled = \"1\" in inputs;\n                draft[nodeId].connectors[1].data.value = width;\n                draft[nodeId].connectors[2].data.disabled = \"2\" in inputs;\n                draft[nodeId].connectors[2].data.value = height;\n            })\n        );\n\n        return {};\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class RectangleNode extends Node {\n    constructor() {\n        super(NodeName.Rectangle, 200, {x:0, y:0}, {\n            0: { name: \"draw\", pinLayout: PinLayout.RIGHT_PIN, contentType: \"none\", data: {} },\n            1: {\n                name: \"x\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: false }\n            },\n            2: {\n                name: \"y\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: false }\n            },\n            3: {\n                name: \"width\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 100, disabled: false }\n            },\n            4: {\n                name: \"height\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 100, disabled: false }\n            },\n            5: {\n                name: \"color\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"none\",\n                data: { value: \"black\" },\n                leftPinColor: \"orange\"\n            },\n            6: {\n                name: \"type\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"select\",\n                data: { \n                    values: [\"fill\", \"stroke\", \"clear\"],\n                    selected_index: 0\n                }\n            },\n            7: {\n                name: \"line width\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 1, disabled: false }\n            },\n        });\n    }\n\n    static createFromJson(jsonObj: any) : RectangleNode {\n        let node = new RectangleNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        const x = \"1\" in inputs ? inputs[1] : this.connectors[1].data.value;\n        const y = \"2\" in inputs ? inputs[2] : this.connectors[2].data.value;\n        const width = \"3\" in inputs ? inputs[3] : this.connectors[3].data.value;\n        const height = \"4\" in inputs ? inputs[4] : this.connectors[4].data.value;\n        const color = \"5\" in inputs ? inputs[5] : this.connectors[5].data.value;\n        const lineWidth = \"7\" in inputs ? inputs[7] : this.connectors[7].data.value;\n\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[1].data.disabled = \"1\" in inputs;\n                draft[nodeId].connectors[1].data.value = x;\n                draft[nodeId].connectors[2].data.disabled = \"2\" in inputs;\n                draft[nodeId].connectors[2].data.value = y;\n                draft[nodeId].connectors[3].data.disabled = \"3\" in inputs;\n                draft[nodeId].connectors[3].data.value = width;\n                draft[nodeId].connectors[4].data.disabled = \"4\" in inputs;\n                draft[nodeId].connectors[4].data.value = height;\n                draft[nodeId].connectors[7].data.disabled = \"7\" in inputs;\n                draft[nodeId].connectors[7].data.value = lineWidth;\n            })\n        );\n\n        const type = this.connectors[6].data.selected_index;\n        const draw = (ctx: CanvasRenderingContext2D): void => {\n            if(type === 0) {\n                ctx.fillStyle = color;\n                ctx.fillRect(x, y, width, height);\n                ctx.fillStyle = \"black\";\n            }\n            else if(type === 1) {\n                ctx.strokeStyle = color;\n                const oldLineWidth = ctx.lineWidth;\n                ctx.lineWidth = lineWidth;\n                ctx.strokeRect(x, y, width, height);\n                ctx.lineWidth = oldLineWidth;\n                ctx.strokeStyle = \"black\";\n            }\n            else if(type === 2) {\n                ctx.clearRect(x, y, width, height);\n            } \n        };\n\n        return { \"0\": draw };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class RotateNode extends Node {\n    constructor() {\n        super(NodeName.Rotate, 150, {x:0, y:0}, {\n            0: { name: \"draw\", pinLayout: PinLayout.BOTH_PINS, contentType: \"none\", data: {} },\n            1: {\n                name: \"angle\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0 }\n            }\n        });\n    }\n\n    static createFromJson(jsonObj: any) : RotateNode {\n        let node = new RotateNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        let rotation = \"1\" in inputs ? inputs[1] : this.connectors[1].data.value;\n        rotation = (rotation * Math.PI) / 180;\n        \n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[1].data.disabled = \"1\" in inputs;\n                draft[nodeId].connectors[1].data.value = rotation;\n            })\n        );\n        \n        const drawWithRotation = (ctx: CanvasRenderingContext2D): void => {\n            ctx.rotate(rotation);\n            if (inputs[0]) {\n                inputs[0].forEach((draw: (arg0: CanvasRenderingContext2D) => void) => {\n                    draw(ctx);\n                });\n            }\n            ctx.rotate(-rotation);\n        };\n        return { \"0\": drawWithRotation };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\n\nexport default class NumberNode extends Node {\n    constructor() {\n        super(NodeName.Number, 170, {x:0, y:0}, {\n            0: {\n                name: \"number\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"number\",\n                data: { value: 0 }\n            }\n        });\n    }\n\n    static createFromJson(json: string) : NumberNode {\n        let node = new NumberNode();\n        Node.initFromJson(json, node);\n        return node;\n    }\n\n    computeSpecific(): { [id: string]: any } {\n        return { \"0\": Number(this.connectors[0].data.value) };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class ColorNode extends Node {\n    constructor() {\n        super(NodeName.Color, 150, {x:0, y:0}, {\n            0: { \n                name: \"color\", \n                pinLayout: PinLayout.RIGHT_PIN, \n                contentType: \"canvas\", \n                data: { canvas_width: 150 - 30, canvas_height: 40, canvas_color: \"black\" },\n                rightPinColor: \"orange\"\n            },\n            1: { \n                name: \"red\", \n                pinLayout: PinLayout.LEFT_PIN, \n                contentType: \"number\", \n                data: { value: 0 } \n            },\n            2: { \n                name: \"green\", \n                pinLayout: PinLayout.LEFT_PIN, \n                contentType: \"number\", \n                data: { value: 0 } \n            },\n            3: { \n                name: \"blue\", \n                pinLayout: PinLayout.LEFT_PIN, \n                contentType: \"number\", \n                data: { value: 0 } \n            },\n            4: { \n                name: \"alpha\", \n                pinLayout: PinLayout.LEFT_PIN, \n                contentType: \"number\", \n                data: { value: 1 } \n            }\n        });\n    }\n\n    static createFromJson(jsonObj: any) : ColorNode {\n        let node = new ColorNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        let red = \"1\" in inputs ? inputs[1] : this.connectors[1].data.value;\n        let green = \"2\" in inputs ? inputs[2] : this.connectors[2].data.value;\n        let blue = \"3\" in inputs ? inputs[3] : this.connectors[3].data.value;\n        let alpha = \"4\" in inputs ? inputs[4] : this.connectors[4].data.value;\n        \n        red = red > 255 ? 255 : red < 0 ? 0 : red;\n        green = green > 255 ? 255 : green < 0 ? 0 : green;\n        blue = blue > 255 ? 255 : blue < 0 ? 0 : blue;\n        alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\n        const colorCode = `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[0].data.canvas_width = this.width - 30;\n                draft[nodeId].connectors[0].data.canvas_color = colorCode;\n                draft[nodeId].connectors[1].data.disabled = \"1\" in inputs;\n                draft[nodeId].connectors[1].data.value = red;\n                draft[nodeId].connectors[2].data.disabled = \"2\" in inputs;\n                draft[nodeId].connectors[2].data.value = green;\n                draft[nodeId].connectors[3].data.disabled = \"3\" in inputs;\n                draft[nodeId].connectors[3].data.value = blue;\n                draft[nodeId].connectors[4].data.disabled = \"4\" in inputs;\n                draft[nodeId].connectors[4].data.value = alpha;\n            })\n        );\n\n        return { \"0\": colorCode };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\n\nexport default class TimerNode extends Node {\n    constructor() {\n        super(NodeName.Timer, 150, {x:0, y:0}, {\n            0: { name: \"count\", pinLayout: PinLayout.RIGHT_PIN, contentType: \"number\", data: { value: \"0\" } },\n            1: { name: \"is_running\", pinLayout: PinLayout.NO_PINS, contentType: \"check_box\", data: { value: false } }\n        });\n    }\n\n    static createFromJson(jsonObj: any) : TimerNode {\n        let node = new TimerNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }): { [id: string]: any } {\n        return { \"0\": this.connectors[0].data.value };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class TranslateNode extends Node {\n    constructor() {\n        super(NodeName.Translate, 100, {x:0, y:0}, {\n            0: { name: \"draw\", pinLayout: PinLayout.BOTH_PINS, contentType: \"none\", data: {} },\n            1: {\n                name: \"x\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0 }\n            },\n            2: {\n                name: \"y\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0 }\n            }\n        });\n    }\n\n    static createFromJson(jsonObj: any) : TranslateNode {\n        let node = new TranslateNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        let x = \"1\" in inputs ? inputs[1] : this.connectors[1].data.value;\n        let y = \"2\" in inputs ? inputs[2] : this.connectors[2].data.value;\n        \n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[1].data.disabled = \"1\" in inputs;\n                draft[nodeId].connectors[1].data.value = x;\n                draft[nodeId].connectors[2].data.disabled = \"2\" in inputs;\n                draft[nodeId].connectors[2].data.value = y;\n            })\n        );\n\n        const drawWithTranslate = (ctx: CanvasRenderingContext2D): void => {\n            ctx.translate(x, y);\n            if (inputs[0]) {\n                inputs[0].forEach((draw: (arg0: CanvasRenderingContext2D) => void) => {\n                    draw(ctx);\n                });\n            }\n            ctx.translate(-x, -y);\n        };\n        return { \"0\": drawWithTranslate };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class IfElseNode extends Node {\n    constructor() {\n        super(NodeName.IfElse, 100, { x: 0, y: 0 }, {\n            0: {\n                name: \"out_value\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"none\",\n                data: {}\n            },\n            1: {\n                name: \"test\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"check_box\",\n                data: { value: false }\n            },\n            2: {\n                name: \"if_value\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"none\",\n                data: {}\n            },\n            3: {\n                name: \"else_value\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"none\",\n                data: {}\n            }\n        });\n    }\n\n    static createFromJson(json: string): IfElseNode {\n        let node = new IfElseNode();\n        Node.initFromJson(json, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        const cond = \"1\" in inputs ? inputs[1] : this.connectors[1].data.value;\n        const if_value = \"2\" in inputs ? inputs[2] : null;\n        const else_value = \"3\" in inputs ? inputs[3] : null;\n        let ret = { \"0\": else_value };\n        if (cond) {\n            ret = { \"0\": if_value };\n        }\n\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[1].data.disabled = \"1\" in inputs;\n                draft[nodeId].connectors[1].data.value = cond;\n            })\n        );\n\n        return ret;\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\n\nexport default class StringNode extends Node {\n    constructor() {\n        super(NodeName.String, 100, {x:0, y:0}, {\n            0: {\n                name: \"string\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"string\",\n                data: { value: \"\" }\n            }\n        });\n    }\n\n    static createFromJson(json: string) : StringNode {\n        let node = new StringNode();\n        Node.initFromJson(json, node);\n        return node;\n    }\n\n    computeSpecific(): { [id: string]: any } {\n        return { \"0\": this.connectors[0].data.value };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\n\nexport default class SplitNode extends Node {\n    constructor() {\n        super(NodeName.Split, 100, { x: 0, y: 0 }, {\n            0: {\n                name: \"out\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"none\",\n                data: {}\n            },\n            1: {\n                name: \"input\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"text_area\",\n                data: { value: \"\" }\n            },\n            2: {\n                name: \"separator\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"string\",\n                data: { value: \"\", height: \"20px\" }\n            }\n        });\n    }\n\n    static createFromJson(json: string): SplitNode {\n        let node = new SplitNode();\n        Node.initFromJson(json, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }): { [id: string]: any } {\n        let str: string = \"1\" in inputs ? inputs[1] : this.connectors[1].data.value;\n        let split: string = \"2\" in inputs ? inputs[2] : this.connectors[2].data.value;\n        str = !str ? \"\" : str;\n        split = !split ? \"\" : split;\n        return { \"0\": str.split(new RegExp(split)) };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class OperationNode extends Node {\n    constructor() {\n        super(NodeName.Operation, 160, {x:0, y:0}, {\n            0: {\n                name: \"output\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: true }\n            },\n            1: {\n                name: \"type\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"select\",\n                data: { \n                    values: [\"add\", \"substract\", \"multiply\", \"divide\", \"modulo\", \"minimum\", \"maximum\", \"exp\", \"log\", \"log10\", \"negate\", \"sin\", \"cos\", \"tan\"],\n                    selected_index: 0\n                }\n            },\n            2: {\n                name: \"x\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: false }\n            },\n            3: {\n                name: \"y\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: false }\n            }\n        });\n    }\n\n    static createFromJson(jsonObj: any) : OperationNode {\n        let node = new OperationNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        const x = Number(\"2\" in inputs ? inputs[2] : this.connectors[2].data.value);\n        const y = Number(\"3\" in inputs ? inputs[3] : this.connectors[3].data.value);\n\n        let value = 0;\n        switch(this.connectors[1].data.selected_index) {\n            case 0:\n                value = x + y;\n                break;\n            case 1:\n                value = x - y;\n                break;\n            case 2:\n                value = x * y;\n                break;\n            case 3:\n                value = isNaN(x / y) ? 0 : x / y;\n                break;\n            case 4:\n                value = isNaN(x % y) ? 0 : x % y;\n                break;\n            case 5:\n                value = x > y ? y : x;\n                break;\n            case 6:\n                value = x > y ? x : y;\n                break;\n            case 7:\n                value = Math.pow(x, y);\n                break;\n            case 8:\n                value = Math.log(x);\n                break;\n            case 9:\n                value = Math.log10(x);\n                break;\n            case 10:\n                value = -x;\n                break;\n            case 11:\n                value = Math.sin(x);\n                break;\n            case 12:\n                value = Math.cos(x);\n                break;\n            case 13:\n                value = Math.tan(x);\n                break;\n        }\n\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[0].data.value = value;\n                draft[nodeId].connectors[2].data.disabled = \"2\" in inputs;\n                draft[nodeId].connectors[2].data.value = x;\n                draft[nodeId].connectors[3].data.disabled = \"3\" in inputs;\n                draft[nodeId].connectors[3].data.value = y;\n            })\n        );\n\n        return { \"0\": value };\n    }\n\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class LogNode extends Node {\n    public inputs: any;\n\n    constructor() {\n        super(NodeName.Log, 100, { x: 0, y: 0 }, {\n            0: {\n                name: \"log\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"text_area\",\n                data: { value: \"\", disabled: true },\n                leftPinColor: \"red\"\n            }\n        });\n    }\n\n    static createFromJson(json: string): LogNode {\n        let node = new LogNode();\n        Node.initFromJson(json, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[0].data.value = \"0\" in inputs ? JSON.stringify(inputs[0]) : \"\";\n            })\n        );\n        return {};\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class ArcNode extends Node {\n    constructor() {\n        super(NodeName.Arc, 200, {x:0, y:0}, {\n            0: { name: \"draw\", pinLayout: PinLayout.RIGHT_PIN, contentType: \"none\", data: {} },\n            1: {\n                name: \"x\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: false }\n            },\n            2: {\n                name: \"y\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: false }\n            },\n            3: {\n                name: \"radius\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 100, disabled: false }\n            },\n            4: {\n                name: \"start angle\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: false }\n            },\n            5: {\n                name: \"end angle\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 2 * Math.PI, disabled: false }\n            },\n            6: {\n                name: \"color\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"none\",\n                data: { value: \"black\" },\n                leftPinColor: \"orange\"\n            },\n            7: {\n                name: \"type\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"select\",\n                data: { \n                    values: [\"fill\", \"stroke\"],\n                    selected_index: 0\n                }\n            },\n            8: {\n                name: \"line width\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 1, disabled: false }\n            },\n            9: {\n                name: \"counterclockwise\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"check_box\",\n                data: { value: false }\n            },\n        });\n    }\n\n    static createFromJson(jsonObj: any) : ArcNode {\n        let node = new ArcNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        const x = \"1\" in inputs ? inputs[1] : this.connectors[1].data.value;\n        const y = \"2\" in inputs ? inputs[2] : this.connectors[2].data.value;\n        const radius = \"3\" in inputs ? inputs[3] : this.connectors[3].data.value;\n        const start_angle = \"4\" in inputs ? inputs[4] : this.connectors[4].data.value;\n        const end_angle = \"5\" in inputs ? inputs[5] : this.connectors[5].data.value;\n        const color = \"6\" in inputs ? inputs[6] : this.connectors[6].data.value;\n        const lineWidth = \"8\" in inputs ? inputs[8] : this.connectors[8].data.value;\n        const counterclockwise = \"9\" in inputs ? inputs[9] : this.connectors[9].data.value;\n\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[1].data.disabled = \"1\" in inputs;\n                draft[nodeId].connectors[1].data.value = x;\n                draft[nodeId].connectors[2].data.disabled = \"2\" in inputs;\n                draft[nodeId].connectors[2].data.value = y;\n                draft[nodeId].connectors[3].data.disabled = \"3\" in inputs;\n                draft[nodeId].connectors[3].data.value = radius;\n                draft[nodeId].connectors[4].data.disabled = \"4\" in inputs;\n                draft[nodeId].connectors[4].data.value = start_angle;\n                draft[nodeId].connectors[5].data.disabled = \"5\" in inputs;\n                draft[nodeId].connectors[5].data.value = end_angle;\n                draft[nodeId].connectors[8].data.disabled = \"8\" in inputs;\n                draft[nodeId].connectors[8].data.value = lineWidth;\n            })\n        );\n\n        const type = this.connectors[7].data.selected_index;\n        const draw = (ctx: CanvasRenderingContext2D): void => {\n            if(type === 0) {\n                ctx.fillStyle = color;\n                ctx.beginPath();\n                ctx.arc(x, y, radius, start_angle, end_angle, counterclockwise);\n                ctx.closePath();\n                ctx.fill();\n                ctx.fillStyle = \"black\";\n            }\n            else if(type === 1) {\n                ctx.strokeStyle = color;\n                const oldLineWidth = ctx.lineWidth;\n                ctx.lineWidth = lineWidth;\n                ctx.beginPath();\n                ctx.arc(x, y, radius, start_angle, end_angle, counterclockwise);\n                ctx.closePath();\n                ctx.stroke();\n                ctx.lineWidth = oldLineWidth;\n                ctx.strokeStyle = \"black\";\n            }\n        };\n\n        return { \"0\": draw };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class CheckNode extends Node {\n    constructor() {\n        super(NodeName.Check, 160, {x:0, y:0}, {\n            0: {\n                name: \"output\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"none\",\n                data: { value: false, disabled: true }\n            },\n            1: {\n                name: \"type\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"select\",\n                data: { \n                    values: [\"===\", \"!==\", \"<\", \"<=\", \">\", \">=\"],\n                    selected_index: 0\n                }\n            },\n            2: {\n                name: \"x\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: false }\n            },\n            3: {\n                name: \"y\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: false }\n            }\n        });\n    }\n\n    static createFromJson(jsonObj: any) : CheckNode {\n        let node = new CheckNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        const x = Number(\"2\" in inputs ? inputs[2] : this.connectors[2].data.value);\n        const y = Number(\"3\" in inputs ? inputs[3] : this.connectors[3].data.value);\n\n        let value = false;\n        switch(this.connectors[1].data.selected_index) {\n            case 0:\n                value = x === y;\n                break;\n            case 1:\n                value = x !== y;\n                break;\n            case 2:\n                value = x < y;\n                break;\n            case 3:\n                value = x <= y;\n                break;\n            case 4:\n                value = x > y;\n                break;\n            case 5:\n                value = x >= y;\n                break;\n        }\n\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[0].data.value = value;\n                draft[nodeId].connectors[2].data.disabled = \"2\" in inputs;\n                draft[nodeId].connectors[2].data.value = x;\n                draft[nodeId].connectors[3].data.disabled = \"3\" in inputs;\n                draft[nodeId].connectors[3].data.value = y;\n            })\n        );\n\n        return { \"0\": value };\n    }\n\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class BooleanNode extends Node {\n    constructor() {\n        super(NodeName.Boolean, 160, {x:0, y:0}, {\n            0: {\n                name: \"output\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"none\",\n                data: { value: false, disabled: true }\n            },\n            1: {\n                name: \"type\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"select\",\n                data: { \n                    values: [\"===\", \"!==\", \"&&\", '||', \"!\"],\n                    selected_index: 0\n                }\n            },\n            2: {\n                name: \"x\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"check_box\",\n                data: { value: false }\n            },\n            3: {\n                name: \"y\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"check_box\",\n                data: { value: false }\n            },\n        });\n    }\n\n    static createFromJson(jsonObj: any) : BooleanNode {\n        let node = new BooleanNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        const x = \"2\" in inputs ? inputs[2] : this.connectors[2].data.value;\n        const y = \"3\" in inputs ? inputs[3] : this.connectors[3].data.value;\n\n        let value = false;\n        switch(this.connectors[1].data.selected_index) {\n            case 0:\n                value = x === y;\n                break;\n            case 1:\n                value = x !== y;\n                break;\n            case 2:\n                value = x && y;\n                break;\n            case 3:\n                value = x || y;\n                break;\n            case 4:\n                value = !x;\n                break;\n        }\n\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[0].data.value = value;\n                draft[nodeId].connectors[2].data.disabled = \"2\" in inputs;\n                draft[nodeId].connectors[2].data.value = x;\n                draft[nodeId].connectors[3].data.disabled = \"3\" in inputs;\n                draft[nodeId].connectors[3].data.value = y;\n            })\n        );\n\n        return { \"0\": value };\n    }\n\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node, { TaskQueue } from \"./node\";\nimport { LinkCollection, NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\nimport { Dispatch, SetStateAction } from \"react\";\n\nexport class FunctionCallNode extends Node {\n\n    constructor() {\n        super(NodeName.FunctionCallNode, 150, { x: 0, y: 0 }, {\n            0: {\n                name: \"function_name\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"string\",\n                data: { value: \"\" },\n            },\n            1: {\n                name: \"output\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"none\",\n                data: {},\n            }\n        });\n    }\n\n    static createFromJson(jsonObj: any): FunctionCallNode {\n        let node = new FunctionCallNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n\n    registerfunctionRun(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>, nodes: NodeCollection, links: LinkCollection, queue: TaskQueue): boolean {\n        // 1. Fetch function node\n        const functionName = this.connectors[0].data.value;\n        const expectedConnectors: string[] = [];\n        let finNodeId: string = \"\";\n        Object.keys(nodes).forEach(nodeKey => {\n            const node = nodes[nodeKey];\n            if (node.name === NodeName.FunctionInputNode && node.connectors[0].data.value === functionName) {\n                finNodeId = nodeKey;\n                Object.keys(node.connectors).forEach(key => {\n                    if (Number(key) > 2 && node) {\n                        expectedConnectors.push(node.connectors[key].name);\n                    }\n                });\n            }\n        });\n\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                if (nodeId) {\n                    Object.keys(draft[nodeId].connectors).forEach((key) => {\n                        if (Number(key) > 1) {\n                            delete draft[nodeId].connectors[key];\n                        }\n                    });\n                    expectedConnectors.forEach((value, i) => {\n                        draft[nodeId].connectors[i + 2] = {\n                            name: value,\n                            pinLayout: PinLayout.LEFT_PIN,\n                            contentType: \"none\",\n                            data: {}\n                        }\n                    });\n                }\n            })\n        );\n\n        let fIns: any = {};\n        expectedConnectors.forEach((_, i) => {\n            if ((i + 2) in inputs) {\n                fIns[`${i + 3}`] = inputs[`${i + 2}`];\n            }\n        });\n\n        if (finNodeId.length > 0) {\n            queue.propateFunction(finNodeId, links, fIns);\n            return true;\n        }\n        return false;\n    }\n\n    computeSpecific(inputs: { [id: string]: any; }, nodeId: string, setNodes: Dispatch<SetStateAction<NodeCollection>>, nodes: NodeCollection, links: LinkCollection, queue: TaskQueue): { [id: string]: any; } {\n        // 1. Fetch function node\n        const functionName = this.connectors[0].data.value;\n        const expectedConnectors: string[] = [];\n        let finNodeId: string = \"\";\n        Object.keys(nodes).forEach(nodeKey => {\n            const node = nodes[nodeKey];\n            if (node.name === NodeName.FunctionInputNode && node.connectors[0].data.value === functionName) {\n                finNodeId = nodeKey;\n                Object.keys(node.connectors).forEach(key => {\n                    if (Number(key) > 2 && node) {\n                        expectedConnectors.push(node.connectors[key].name);\n                    }\n                });\n            }\n        });\n\n        let fIns: any = {};\n        expectedConnectors.forEach((_, i) => {\n            if ((i + 2) in inputs) {\n                fIns[`${i + 3}`] = inputs[`${i + 2}`];\n            }\n        });\n\n        if (finNodeId.length > 0) {\n            return { \"1\": queue.popResult() };\n        }\n\n        return {};\n    }\n}\n\nexport class FunctionInputNode extends Node {\n    public nodeId?: string;\n    public setNodes?: React.Dispatch<React.SetStateAction<NodeCollection>>;\n    constructor() {\n        super(NodeName.FunctionInputNode, 150, { x: 0, y: 0 }, {\n            0: {\n                name: \"name\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"string\",\n                data: { value: \"\" },\n            },\n            1: {\n                name: \"add\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"button\",\n                data: {\n                    label: \"add input\"\n                }\n            },\n            2: {\n                name: \"remove\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"button\",\n                data: {\n                    label: \"remove input\"\n                }\n            },\n        });\n        this.add = this.add.bind(this);\n        this.remove = this.remove.bind(this);\n        this.connectors[1].data.onClick = this.add;\n        this.connectors[2].data.onClick = this.remove;\n    }\n\n    add(node: Node) {\n        if (this.nodeId && this.setNodes) {\n            this.setNodes(\n                nodes => produce(nodes, (draft: NodeCollection) => {\n                    if (this.nodeId) {\n                        draft[this.nodeId].connectors[Object.keys(node.connectors).length] = {\n                            name: `param-${Object.keys(node.connectors).length - 2}`,\n                            pinLayout: PinLayout.RIGHT_PIN,\n                            contentType: \"string\",\n                            data: {\n                                value: `param-${Object.keys(node.connectors).length - 2}`\n                            }\n                        }\n                    }\n                })\n            );\n        }\n    }\n\n    remove(node: Node) {\n        if (Object.keys(node.connectors).length > 2) {\n\n        }\n    }\n\n    static createFromJson(jsonObj: any, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): FunctionInputNode {\n        let node = new FunctionInputNode();\n        Node.initFromJson(jsonObj, node);\n        node.nodeId = nodeId;\n        node.setNodes = setNodes;\n        node.connectors[1].data.onClick = node.add.bind(node);\n        node.connectors[2].data.onClick = node.remove.bind(node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        return inputs;\n    }\n}\n\nexport class FunctionOutputNode extends Node {\n    constructor() {\n        super(NodeName.FunctionOutputNode, 150, { x: 0, y: 0 }, {\n            0: {\n                name: \"function\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"none\",\n                data: {},\n                rightPinColor: \"orange\"\n            },\n            1: {\n                name: \"return\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"none\",\n                data: {},\n                rightPinColor: \"orange\"\n            }\n        });\n    }\n\n    static createFromJson(jsonObj: any): FunctionOutputNode {\n        let node = new FunctionOutputNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        return {};\n    }\n}\n\nexport class LambdaCallNode extends Node {\n    public nodeId?: string;\n    public setNodes?: React.Dispatch<React.SetStateAction<NodeCollection>>;\n    constructor() {\n        super(NodeName.LambdaCall, 150, { x: 0, y: 0 }, {\n            0: {\n                name: \"name\",\n                pinLayout: PinLayout.BOTH_PINS,\n                contentType: \"string\",\n                data: { value: \"\" },\n            },\n            1: {\n                name: \"add\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"button\",\n                data: {\n                    label: \"add input\"\n                }\n            },\n            2: {\n                name: \"remove\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"button\",\n                data: {\n                    label: \"remove input\"\n                }\n            },\n        });\n        this.add = this.add.bind(this);\n        this.remove = this.remove.bind(this);\n        this.connectors[1].data.onClick = this.add;\n        this.connectors[2].data.onClick = this.remove;\n    }\n\n    add(node: Node) {\n        if (this.nodeId && this.setNodes) {\n            this.setNodes(\n                nodes => produce(nodes, (draft: NodeCollection) => {\n                    if (this.nodeId) {\n                        draft[this.nodeId].connectors[Object.keys(node.connectors).length] = {\n                            name: `param-${Object.keys(node.connectors).length - 2}`,\n                            pinLayout: PinLayout.LEFT_PIN,\n                            contentType: \"none\",\n                            data: {\n                                value: `param-${Object.keys(node.connectors).length - 2}`\n                            }\n                        }\n                    }\n                })\n            );\n        }\n    }\n\n    remove(node: Node) {\n        if (Object.keys(node.connectors).length > 2) {\n\n        }\n    }\n\n    static createFromJson(jsonObj: any, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): LambdaCallNode {\n        let node = new LambdaCallNode();\n        Node.initFromJson(jsonObj, node);\n        node.nodeId = nodeId;\n        node.setNodes = setNodes;\n        node.connectors[1].data.onClick = node.add.bind(node);\n        node.connectors[2].data.onClick = node.remove.bind(node);\n        return node;\n    }\n\n    registerfunctionRun(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>, nodes: NodeCollection, links: LinkCollection, queue: TaskQueue): boolean {\n        // 1. Fetch function node\n        const functionName = \"0\" in inputs ? inputs[0] : this.connectors[0].data.value;\n        let finNodeId: string = \"\";\n        Object.keys(nodes).forEach(nodeKey => {\n            const node = nodes[nodeKey];\n            if (node.name === NodeName.FunctionInputNode && node.connectors[0].data.value === functionName) {\n                finNodeId = nodeKey;\n            }\n        });\n\n        let fIns: any = {};\n        Object.keys(this.connectors).forEach((key: string, index: number) => {\n            if (index <= 2) return;\n            const val = key in inputs ? inputs[key] : undefined;\n            fIns[key] = val;\n        });\n\n        if (finNodeId.length > 0) {\n            queue.propateFunction(finNodeId, links, fIns);\n            return true;\n        }\n        return false;\n    }\n\n    computeSpecific(inputs: { [id: string]: any; }, nodeId: string, setNodes: Dispatch<SetStateAction<NodeCollection>>, nodes: NodeCollection, links: LinkCollection, queue: TaskQueue): { [id: string]: any } {\n        let finNodeId: string = \"\";\n        const functionName = \"0\" in inputs ? inputs[0] : this.connectors[0].data.value;\n        Object.keys(nodes).forEach(nodeKey => {\n            const node = nodes[nodeKey];\n            if (node.name === NodeName.FunctionInputNode && node.connectors[0].data.value === functionName) {\n                finNodeId = nodeKey;\n            }\n        });\n\n        if (finNodeId.length > 0) {\n            return { \"0\": queue.popResult() };\n        }\n\n        return {};\n    }\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class ThreeJS extends Node {\n    constructor() {\n        super(NodeName.ThreeJS, 170, { x: 0, y: 0 }, {\n            0: {\n                name: \"threejs\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"threejs\",\n                data: {}\n            }\n        });\n    }\n\n    static createFromJson(json: string): ThreeJS {\n        let node = new ThreeJS();\n        Node.initFromJson(json, node);\n        node.connectors[0].data = {};\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[0].data.obj = inputs[0] ? inputs[0] : undefined;\n            })\n        );\n        return {};\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport * as THREE from \"three\";\n\n\n\nexport default class ThreeJSBox extends Node {\n    cube: THREE.Mesh<THREE.BoxGeometry, THREE.MeshBasicMaterial>;\n\n    constructor() {\n        super(NodeName.ThreeJSBox, 170, {x:0, y:0}, {\n            0: {\n                name: \"output\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"node\",\n                data: {}\n            },\n            1: {\n                name: \"rotation_x\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: false }\n            },\n            2: {\n                name: \"rotation_y\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: false }\n            },\n            3: {\n                name: \"rotation_z\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"number\",\n                data: { value: 0, disabled: false }\n            },\n            4: {\n                name: \"color\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"none\",\n                data: { value: \"rgba(255,255,255,1)\" },\n                leftPinColor: \"orange\"\n            }\n        });\n        const geometry = new THREE.BoxGeometry( 1, 1, 1 );\n        const material = new THREE.MeshBasicMaterial( { color: 0xffffff } );\n        this.cube = new THREE.Mesh( geometry, material );\n    }\n\n    static createFromJson(json: string) : ThreeJSBox {\n        let node = new ThreeJSBox();\n        Node.initFromJson(json, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }): { [id: string]: any } {\n        const rotation_x = \"1\" in inputs ? inputs[1] : this.connectors[1].data.value;\n        const rotation_y = \"2\" in inputs ? inputs[2] : this.connectors[2].data.value;\n        const rotation_z = \"3\" in inputs ? inputs[3] : this.connectors[3].data.value;\n        const color = \"4\" in inputs ? inputs[4] : this.connectors[4].data.value;\n\n        this.cube.material.color.setStyle(color);\n        this.cube.rotation.set(rotation_x, rotation_y, rotation_z);\n        \n        return {\"0\": this.cube};\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class RangeNode extends Node {\n    constructor() {\n        super(NodeName.Range, 170, {x:0, y:0}, {\n            0: {\n                name: \"count\",\n                pinLayout: PinLayout.BOTH_PINS,\n                contentType: \"number\",\n                data: { value: 0 }\n            }\n        });\n    }\n\n    static createFromJson(json: string) : RangeNode {\n        let node = new RangeNode();\n        Node.initFromJson(json, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        const count = Number(\"0\" in inputs ? inputs[0] : this.connectors[0].data.value);\n        const array = [];\n        let cur = 0;\n        while(cur < count) {\n            array.push(cur);\n            cur++;\n        }\n\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[0].data.disabled = \"0\" in inputs;\n            })\n        );\n\n        return { \"0\": array };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node, { TaskQueue } from \"./node\";\nimport { LinkCollection, NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport { Dispatch, SetStateAction } from \"react\";\n\nexport class MapNode extends Node {\n\n    constructor() {\n        super(NodeName.Map, 150, { x: 0, y: 0 }, {\n            0: {\n                name: \"output\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"none\",\n                data: {},\n            },\n            1: {\n                name: \"input\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"none\",\n                data: {},\n            },\n            2: {\n                name: \"f\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"string\",\n                data: { value: \"\" },\n            }\n        });\n    }\n\n    static createFromJson(jsonObj: any): MapNode {\n        let node = new MapNode();\n        Node.initFromJson(jsonObj, node);\n        return node;\n    }\n\n    registerfunctionRun(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>, nodes: NodeCollection, links: LinkCollection, queue: TaskQueue): boolean {\n        // 1. Fetch function node\n        const functionName = \"2\" in inputs ? inputs[2] : this.connectors[2].data.value;\n        let finNodeId: string = \"\";\n        Object.keys(nodes).forEach(nodeKey => {\n            const node = nodes[nodeKey];\n            if (node.name === NodeName.FunctionInputNode && node.connectors[0].data.value === functionName) {\n                finNodeId = nodeKey;\n            }\n        });\n\n        if (!(\"1\" in inputs) || finNodeId === \"\") {\n            return false;\n        }\n        inputs[1].forEach((e: any, i: number) => {\n            let fIns: any = {};\n            fIns[\"3\"] = e;\n            fIns[\"4\"] = i;\n            queue.propateFunction(finNodeId, links, fIns);\n        });\n\n        return true;\n    }\n\n    computeSpecific(inputs: { [id: string]: any; }, nodeId: string, setNodes: Dispatch<SetStateAction<NodeCollection>>, nodes: NodeCollection, links: LinkCollection, queue: TaskQueue): { [id: string]: any; } {\n        // 1. Fetch function node\n        const functionName = \"2\" in inputs ? inputs[2] : this.connectors[2].data.value;\n        let finNodeId: string = \"\";\n        Object.keys(nodes).forEach(nodeKey => {\n            const node = nodes[nodeKey];\n            if (node.name === NodeName.FunctionInputNode && node.connectors[0].data.value === functionName) {\n                finNodeId = nodeKey;\n            }\n        });\n\n        if (!(\"1\" in inputs) || finNodeId === \"\") {\n            return { \"0\": [] };\n        }\n        const res = [] as any[];\n        inputs[1].forEach((e: any, i: number) => {\n            res.push(queue.popResult());\n\n        });\n        return { \"0\": res };\n    }\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\n\nexport default class TextAreaNode extends Node {\n    constructor() {\n        super(NodeName.TextArea, 100, {x:0, y:0}, {\n            0: {\n                name: \"string\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"text_area\",\n                data: { value: \"\" }\n            }\n        });\n    }\n\n    static createFromJson(json: string) : TextAreaNode {\n        let node = new TextAreaNode();\n        Node.initFromJson(json, node);\n        return node;\n    }\n\n    computeSpecific(): { [id: string]: any } {\n        return { \"0\": this.connectors[0].data.value };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\n\nexport class ShiftNode extends Node {\n    constructor() {\n        super(NodeName.Shift, 170, { x: 0, y: 0 }, {\n            0: {\n                name: \"array\",\n                pinLayout: PinLayout.BOTH_PINS,\n                contentType: \"none\",\n                data: {}\n            },\n            1: {\n                name: \"element\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"none\",\n                data: {}\n            }\n        });\n    }\n\n    static createFromJson(json: string): ShiftNode {\n        let node = new ShiftNode();\n        Node.initFromJson(json, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }): { [id: string]: any } {\n        const array = \"0\" in inputs ? inputs[0] : [];\n        const length = array ? array.length : 0;\n        let elem = undefined;\n        const newArray = produce(array, (draft: any) => {\n            if (length > 0) {\n                elem = draft.shift();\n            }\n        });\n        return { \"0\": newArray, \"1\": elem };\n    }\n}\n\nexport class PopNode extends Node {\n    constructor() {\n        super(NodeName.Pop, 170, { x: 0, y: 0 }, {\n            0: {\n                name: \"array\",\n                pinLayout: PinLayout.BOTH_PINS,\n                contentType: \"none\",\n                data: {}\n            },\n            1: {\n                name: \"element\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"none\",\n                data: {}\n            }\n        });\n    }\n\n    static createFromJson(json: string): PopNode {\n        let node = new PopNode();\n        Node.initFromJson(json, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }): { [id: string]: any } {\n        const array = \"0\" in inputs ? inputs[0] : [];\n        const length = array ? array.length : 0;\n        let elem = undefined;\n        const newArray = produce(array, (draft: any) => {\n            if (length > 0) {\n                elem = draft.pop();\n            }\n        });\n        return { \"0\": newArray, \"1\": elem };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport default class LengthNode extends Node {\n    constructor() {\n        super(NodeName.Length, 170, { x: 0, y: 0 }, {\n            0: {\n                name: \"size\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"number\",\n                data: { value: \"0\", disabled: true }\n            },\n            1: {\n                name: \"array\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"none\",\n                data: {}\n            }\n        });\n    }\n\n    static createFromJson(json: string): LengthNode {\n        let node = new LengthNode();\n        Node.initFromJson(json, node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): { [id: string]: any } {\n        const array = \"1\" in inputs ? inputs[1] : [];\n        const length = array ? array.length : 0;\n        setNodes(\n            nodes => produce(nodes, (draft: NodeCollection) => {\n                draft[nodeId].connectors[0].data.disabled = true;\n                draft[nodeId].connectors[0].data.value = length;\n            })\n        );\n        return { \"0\": length };\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Node from \"./node\";\nimport { NodeCollection, PinLayout } from \"oura-node-editor\";\nimport { NodeName } from \"./consts\";\nimport produce from \"immer\";\n\nexport class ObjectCreatorNode extends Node {\n    public nodeId?: string;\n    public setNodes?: React.Dispatch<React.SetStateAction<NodeCollection>>;\n    constructor() {\n        super(NodeName.ObjectCreatorNode, 150, { x: 0, y: 0 }, {\n            0: {\n                name: \"object\",\n                pinLayout: PinLayout.RIGHT_PIN,\n                contentType: \"none\",\n                data: {},\n            },\n            1: {\n                name: \"add\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"button\",\n                data: {\n                    label: \"add input\"\n                }\n            },\n            2: {\n                name: \"remove\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"button\",\n                data: {\n                    label: \"remove input\"\n                }\n            },\n        });\n        this.add = this.add.bind(this);\n        this.remove = this.remove.bind(this);\n        this.connectors[1].data.onClick = this.add;\n        this.connectors[2].data.onClick = this.remove;\n    }\n\n    add(node: Node) {\n        if (this.nodeId && this.setNodes) {\n            this.setNodes(\n                nodes => produce(nodes, (draft: NodeCollection) => {\n                    if (this.nodeId) {\n                        draft[this.nodeId].connectors[Object.keys(node.connectors).length] = {\n                            name: `param-${Object.keys(node.connectors).length - 2}`,\n                            pinLayout: PinLayout.LEFT_PIN,\n                            contentType: \"string\",\n                            data: {\n                                value: \"\"\n                            }\n                        }\n                    }\n                })\n            );\n        }\n    }\n\n    remove(node: Node) {\n        if (Object.keys(node.connectors).length > 2) {\n\n        }\n    }\n\n    static createFromJson(jsonObj: any, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): ObjectCreatorNode {\n        let node = new ObjectCreatorNode();\n        Node.initFromJson(jsonObj, node);\n        node.nodeId = nodeId;\n        node.setNodes = setNodes;\n        node.connectors[1].data.onClick = node.add.bind(node);\n        node.connectors[2].data.onClick = node.remove.bind(node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }): { [id: string]: any } {\n        const obj: any = {};\n        Object.keys(this.connectors).forEach((key: string, index: number) => {\n            if (index <= 2) return;\n            const val = key in inputs ? inputs[key] : undefined;\n            obj[this.connectors[key].data.value] = val;\n        });\n        return { \"0\": obj };\n    }\n}\n\n\nexport class ObjectExtractorNode extends Node {\n    public nodeId?: string;\n    public setNodes?: React.Dispatch<React.SetStateAction<NodeCollection>>;\n    constructor() {\n        super(NodeName.ObjectExtractorNode, 150, { x: 0, y: 0 }, {\n            0: {\n                name: \"object\",\n                pinLayout: PinLayout.LEFT_PIN,\n                contentType: \"none\",\n                data: {},\n            },\n            1: {\n                name: \"add\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"button\",\n                data: {\n                    label: \"add input\"\n                }\n            },\n            2: {\n                name: \"remove\",\n                pinLayout: PinLayout.NO_PINS,\n                contentType: \"button\",\n                data: {\n                    label: \"remove input\"\n                }\n            },\n        });\n        this.add = this.add.bind(this);\n        this.remove = this.remove.bind(this);\n        this.connectors[1].data.onClick = this.add;\n        this.connectors[2].data.onClick = this.remove;\n    }\n\n    add(node: Node) {\n        if (this.nodeId && this.setNodes) {\n            this.setNodes(\n                nodes => produce(nodes, (draft: NodeCollection) => {\n                    if (this.nodeId) {\n                        draft[this.nodeId].connectors[Object.keys(node.connectors).length] = {\n                            name: `param-${Object.keys(node.connectors).length - 2}`,\n                            pinLayout: PinLayout.RIGHT_PIN,\n                            contentType: \"string\",\n                            data: {\n                                value: \"\"\n                            }\n                        }\n                    }\n                })\n            );\n        }\n    }\n\n    remove(node: Node) {\n        if (Object.keys(node.connectors).length > 2) {\n\n        }\n    }\n\n    static createFromJson(jsonObj: any, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): ObjectExtractorNode {\n        let node = new ObjectExtractorNode();\n        Node.initFromJson(jsonObj, node);\n        node.nodeId = nodeId;\n        node.setNodes = setNodes;\n        node.connectors[1].data.onClick = node.add.bind(node);\n        node.connectors[2].data.onClick = node.remove.bind(node);\n        return node;\n    }\n\n    computeSpecific(inputs: { [id: string]: any }): { [id: string]: any } {\n        const ret: any = {};\n        Object.keys(this.connectors).forEach((key: string, index: number) => {\n            if (index <= 2) return;\n            const paramName = this.connectors[key].data.value;\n            const val = \"0\" in inputs && paramName in inputs[\"0\"] ? inputs[\"0\"][paramName] : undefined;\n            ret[key] = val;\n        });\n        return ret;\n    }\n}","import { NodeCollection, NodeModel } from \"oura-node-editor\";\n\nimport Node from \"./node\";\nimport CanvasNode from \"./canvas\";\nimport RectangleNode from \"./rectangle\";\nimport RotateNode from \"./rotate\";\nimport NumberNode from \"./number\";\nimport ColorNode from \"./color\";\nimport TimerNode from \"./timer\";\nimport { NodeName } from \"./consts\";\nimport TranslateNode from \"./translate\";\nimport IfElseNode from \"./if_else\";\nimport StringNode from \"./string\";\nimport SplitNode from \"./split\";\nimport OperationNode from \"./operation\";\nimport LogNode from \"./log\";\nimport ArcNode from \"./arc\";\nimport CheckNode from \"./check\";\nimport BooleanNode from \"./boolean\";\nimport { FunctionCallNode, FunctionInputNode, FunctionOutputNode, LambdaCallNode } from \"./function\";\nimport ThreeJS from \"./threejs\";\nimport ThreeJSBox from \"./threejs_box\";\nimport RangeNode from \"./range\";\nimport { MapNode } from \"./map\";\nimport TextAreaNode from \"./textArea\";\nimport { PopNode, ShiftNode } from \"./pop\";\nimport LengthNode from \"./length\";\nimport { ObjectCreatorNode, ObjectExtractorNode } from \"./object\";\n\nfunction createNodeSchema(): { [nId: string]: NodeModel } {\n    return {\n        0: new CanvasNode(),\n        1: new RectangleNode(),\n        2: new RotateNode(),\n        3: new NumberNode(),\n        4: new TimerNode(),\n        5: new ColorNode(),\n        6: new TranslateNode(),\n        7: new IfElseNode(),\n        8: new StringNode(),\n        9: new SplitNode(),\n        10: new OperationNode(),\n        11: new LogNode(),\n        12: new ArcNode(),\n        13: new CheckNode(),\n        14: new BooleanNode(),\n        15: new FunctionInputNode(),\n        16: new FunctionOutputNode(),\n        17: new FunctionCallNode(),\n        18: new ThreeJS(),\n        19: new ThreeJSBox(),\n        20: new RangeNode(),\n        21: new MapNode(),\n        22: new TextAreaNode(),\n        23: new PopNode(),\n        24: new LengthNode(),\n        25: new ShiftNode(),\n        26: new ObjectCreatorNode(),\n        27: new ObjectExtractorNode(),\n        28: new LambdaCallNode()\n    };\n}\n\nfunction createNodeFromJson(jsonObj: any, nodeId: string, setNodes: React.Dispatch<React.SetStateAction<NodeCollection>>): Node {\n    let node: Node | undefined = undefined;\n    switch (jsonObj.name) {\n        case NodeName.Canvas:\n            node = CanvasNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Color:\n            node = ColorNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Number:\n            node = NumberNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Rectangle:\n            node = RectangleNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Rotate:\n            node = RotateNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Timer:\n            node = TimerNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Translate:\n            node = TranslateNode.createFromJson(jsonObj);\n            break;\n        case NodeName.IfElse:\n            node = IfElseNode.createFromJson(jsonObj);\n            break;\n        case NodeName.String:\n            node = StringNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Split:\n            node = SplitNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Operation:\n            node = OperationNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Log:\n            node = LogNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Arc:\n            node = ArcNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Check:\n            node = CheckNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Boolean:\n            node = BooleanNode.createFromJson(jsonObj);\n            break;\n        case NodeName.FunctionInputNode:\n            node = FunctionInputNode.createFromJson(jsonObj, nodeId, setNodes);\n            break;\n        case NodeName.FunctionOutputNode:\n            node = FunctionOutputNode.createFromJson(jsonObj);\n            break;\n        case NodeName.FunctionCallNode:\n            node = FunctionCallNode.createFromJson(jsonObj);\n            break;\n        case NodeName.ThreeJS:\n            node = ThreeJS.createFromJson(jsonObj);\n            break;\n        case NodeName.ThreeJSBox:\n            node = ThreeJSBox.createFromJson(jsonObj);\n            break;\n        case NodeName.Range:\n            node = RangeNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Map:\n            node = MapNode.createFromJson(jsonObj);\n            break;\n        case NodeName.TextArea:\n            node = TextAreaNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Pop:\n            node = PopNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Length:\n            node = LengthNode.createFromJson(jsonObj);\n            break;\n        case NodeName.Shift:\n            node = ShiftNode.createFromJson(jsonObj);\n            break;\n        case NodeName.ObjectCreatorNode:\n            node = ObjectCreatorNode.createFromJson(jsonObj, nodeId, setNodes);\n            break;\n        case NodeName.ObjectExtractorNode:\n            node = ObjectExtractorNode.createFromJson(jsonObj, nodeId, setNodes);\n            break;\n        case NodeName.LambdaCall:\n            node = LambdaCallNode.createFromJson(jsonObj, nodeId, setNodes);\n            break;\n    }\n    if (!node) {\n        throw new Error(\"Error while reading node from json\");\n    }\n    return node;\n}\n\nexport { Node, CanvasNode, createNodeSchema, createNodeFromJson };\n","import { useEffect, useRef } from \"react\";\nimport { ConnectorContentProps } from \"oura-node-editor\";\n\nconst Canvas = (props : ConnectorContentProps): JSX.Element => {\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    useEffect(() => {\n        if(canvasRef.current) {\n            const ctx = canvasRef.current.getContext(\"2d\");\n            if(ctx && props.connector.data.canvas_draw) {\n                props.connector.data.canvas_draw(ctx);\n            }\n        }\n    }, [canvasRef, props.connector.data]);\n\n    return (\n        <>\n            <div style={{position: \"absolute\", zIndex: 0.1, backgroundColor: props.connector.data.canvas_color, width: props.connector.data.canvas_width, height: props.connector.data.canvas_height}}></div>\n            <canvas style={{position: \"relative\", imageRendering: \"auto\"}} width={props.connector.data.canvas_width} height={props.connector.data.canvas_height} ref={canvasRef} />\n        </>\n    );\n};\n\nexport default Canvas;\n","import { ConnectorContentProps } from \"oura-node-editor\";\nimport * as THREE from \"three\";\nimport { useEffect, useRef } from \"react\";\n\nconst ThreeJs = (props: ConnectorContentProps): JSX.Element => {\n    const divRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (divRef.current) {\n            const div = divRef.current;\n            const scene = new THREE.Scene();\n            const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n            const renderer = new THREE.WebGLRenderer();\n            const light = new THREE.PointLight( 0xff0000, 1, 100 );\n            light.position.set( 1, 1, 1 );\n            scene.add(light);\n            renderer.setSize(500, 500);\n            div.appendChild(renderer.domElement);\n            camera.position.z = 5;\n\n            if (props.connector.data.obj) {\n                scene.add(props.connector.data.obj)\n            }\n\n            let id = 0;\n            const animate = () => {\n                id = requestAnimationFrame( animate );\n                renderer.render( scene, camera );\n            }\n            animate();\n\n            return () => {\n                cancelAnimationFrame(id);\n                div.removeChild(renderer.domElement);\n                renderer.dispose();\n            }\n        }\n    }, [divRef, props.connector.data]);\n\n    return (\n        <div style={{ width: 500, height: 500 }} ref={divRef}></div>\n    );\n};\n\nexport default ThreeJs;\n\n","import { ConnectorContentProps } from \"oura-node-editor\";\nimport Canvas from \"./canvas\";\nimport ThreeJs from \"./threejs\";\n\nexport function createCustomConnectorsContents(props: ConnectorContentProps): JSX.Element | null {\n    const { connector } = props;\n    if (connector.contentType === \"canvas\") {\n        return <Canvas {...props} />\n    }\n    if (connector.contentType === \"threejs\") {\n        return <ThreeJs {...props} />\n    }\n    return null;\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { produce } from \"immer\";\n\nimport {\n    NodeEditor,\n    LinkModel,\n    PanZoomModel,\n    generateUuid,\n    ConnectorModel,\n    NodeCollection,\n    LinkCollection,\n    NodeModel,\n    XYPosition,\n    SelectionItem,\n    AddNodeContextualMenu,\n    SelectionManagementContextualMenu\n} from \"oura-node-editor\";\nimport { createNodeFromJson, createNodeSchema } from \"./nodes\";\nimport { createCustomConnectorsContents } from \"./connector_content\";\nimport { TaskQueue } from \"./nodes/node\";\n\nlet taskQueue: TaskQueue = new TaskQueue();\n\nconst OuraCanvasApp = (): JSX.Element => {\n\n    const [nodePickerPos, setNodePickerPos] = React.useState<XYPosition | null>(null);\n    const [nodePickerOnMouseHover, setNodePickerOnMouseHover] = React.useState<boolean>(false);\n    const [panZoomInfo, setPanZoomInfo] = React.useState<PanZoomModel>({\n        zoom: 1,\n        topLeftCorner: { x: 0, y: 0 }\n    });\n    const [selectedItems, setSelectedItems] = React.useState<SelectionItem[]>([]);\n    const [nodes, setNodes] = React.useState<NodeCollection>({});\n    const [links, setLinks] = React.useState<LinkCollection>({});\n\n    const [runFirstPropagation, setRunFirstPropagation] = React.useState(false);\n    useEffect(() => {\n        const locallyStoredNodes = localStorage.getItem(\"nodes\");\n        const locallyStoredLinks = localStorage.getItem(\"links\");\n        const initNodes: NodeCollection = locallyStoredNodes ? JSON.parse(locallyStoredNodes) : {};\n        const initLinks: LinkCollection = locallyStoredLinks ? JSON.parse(locallyStoredLinks) : {};\n        if (locallyStoredNodes) {\n            Object.keys(initNodes).forEach((key) => {\n                initNodes[key] = createNodeFromJson(initNodes[key], key, setNodes);\n            });\n        }\n        setLinks(initLinks);\n        setNodes(initNodes);\n        setRunFirstPropagation(true);\n    }, []);\n\n    React.useEffect(() => {\n        if (runFirstPropagation) {\n            setRunFirstPropagation(false);\n            taskQueue.propagateAll(nodes, links);\n            taskQueue.runAll(nodes, links, setNodes);\n        }\n    }, [runFirstPropagation, links, nodes]);\n\n    useEffect(() => {\n        if (Object.keys(nodes).length > 0) {\n            localStorage.setItem(\"nodes\", JSON.stringify(nodes));\n        }\n    }, [nodes]);\n    useEffect(() => {\n        if (Object.keys(links).length > 0) {\n            localStorage.setItem(\"links\", JSON.stringify(links));\n        }\n    }, [links]);\n\n    const nodesSchemas: { [nId: string]: NodeModel } = createNodeSchema();\n\n    const setSelectedItemsAndMoveSelectedNodeFront = useCallback((selection: SelectionItem[]) => {\n        if (selection.length === 1 && selection[0].type === \"node\") {\n            setNodes(\n                (nodes: NodeCollection) => {\n                    const selectedNodeId = selection[0].id;\n                    const newNodes: NodeCollection = {};\n                    Object.keys(nodes).forEach(key => {\n                        if (key !== selectedNodeId) {\n                            newNodes[key] = nodes[key];\n                        }\n                    });\n                    newNodes[selectedNodeId] = nodes[selectedNodeId];\n                    return newNodes;\n                })\n        }\n        setSelectedItems(selection);\n    }, []);\n\n    React.useEffect(() => {\n        const interval = setInterval(() => {\n            const updated: string[] = [];\n            const newNodes = produce(nodes, (draft: NodeCollection) => {\n                for (let key of Object.keys(nodes)) {\n                    if (draft[key].name === \"timer\" && draft[key].connectors[1].data.value) {\n                        draft[key].connectors[0].data.value = (Number(draft[key].connectors[0].data.value) + 1).toString();\n                        updated.push(key);\n                    }\n                }\n            });\n            if (updated.length > 0) {\n                setNodes(newNodes);\n                updated.forEach(k => taskQueue.propagateNode(k, newNodes, links));\n                taskQueue.runAll(newNodes, links, setNodes);\n            }\n        }, 1000 / 60);\n        return () => clearInterval(interval);\n    }, [nodes, links]);\n\n    const onNodeMove = React.useCallback(\n        (id: string, newX: number, newY: number, newWidth: number) => {\n            setNodes(\n                nodes => produce(nodes, (draft: NodeCollection) => {\n                    draft[id].position = { x: newX, y: newY };\n                    draft[id].width = newWidth;\n                })\n            );\n        }, []\n    );\n\n    const onCreateLink = React.useCallback(\n        (link: LinkModel) => {\n            setLinks(\n                links => produce(links, (draft) => {\n                    draft[generateUuid()] = link;\n                })\n            );\n            const newLinks = produce(links, (draft) => {\n                draft[generateUuid()] = link;\n            });\n            taskQueue.propagateNode(link.outputNodeId, nodes, newLinks);\n            taskQueue.runAll(nodes, newLinks, setNodes);\n        }, [links, nodes]\n    );\n\n    const onDeleteSelection = React.useCallback(\n        () => {\n            const deleteNodeIds = selectedItems.filter((value: SelectionItem) => value.type === \"node\").map((value) => value.id);\n            const deletedLinksIds = selectedItems.filter((value: SelectionItem) => value.type === \"link\").map((value) => value.id);\n            setNodes(\n                nodes => produce(nodes, (draft: NodeCollection) => {\n                    deleteNodeIds.forEach((id) => {\n                        delete draft[id];\n                    });\n                })\n            );\n            setLinks(\n                links => produce(links, (draft: LinkCollection) => {\n                    Object.keys(links).forEach(linkKey => {\n                        const link = links[linkKey];\n                        if (deleteNodeIds.includes(link.inputNodeId) || deleteNodeIds.includes(link.outputNodeId)) {\n                            delete draft[linkKey];\n                        }\n                    });\n                    deletedLinksIds.forEach((id) => {\n                        delete draft[id];\n                    });\n                })\n            );\n\n            const newNodes = produce(nodes, (draft: NodeCollection) => {\n                deleteNodeIds.forEach((id) => {\n                    delete draft[id];\n                });\n            });\n            const nodeIdToRecompute: string[] = [];\n            const newLinks = produce(links, (draft: LinkCollection) => {\n                Object.keys(links).forEach(linkKey => {\n                    const link = links[linkKey];\n                    if (deleteNodeIds.includes(link.inputNodeId) || deleteNodeIds.includes(link.outputNodeId)) {\n                        if (deleteNodeIds.includes(link.outputNodeId) && !deleteNodeIds.includes(link.inputNodeId)) {\n                            nodeIdToRecompute.push(link.inputNodeId);\n                        }\n                        delete draft[linkKey];\n                    }\n                });\n                deletedLinksIds.forEach((id) => {\n                    delete draft[id];\n                });\n            });\n            // TODO purge taskQueue\n            //Object.keys(propagationValues).forEach(key => {\n            //    if (!(key in newLinks)) {\n            //        delete propagationValues[key];\n            //    }\n            //});\n            nodeIdToRecompute.forEach(nodeId => {\n                taskQueue.propagateNode(nodeId, newNodes, newLinks);\n                taskQueue.runAll(newNodes, newLinks, setNodes);\n            });\n        },\n        [selectedItems, nodes, links]\n    );\n\n    const [newNodeId, setNewNodeId] = useState<string | undefined>(undefined);\n    useEffect(() => {\n        if (newNodeId) {\n            taskQueue.propagateNode(newNodeId, nodes, links);\n            taskQueue.runAll(nodes, links, setNodes);\n            setNewNodeId(undefined);\n        }\n    }, [newNodeId, nodes, links]);\n    const onNodeSelection = React.useCallback(\n        (id: string) => {\n            if (nodePickerPos) {\n                const newNodeId = generateUuid();\n                setNodes(\n                    nodes => produce(nodes, (draft) => {\n                        const jsonObj = JSON.parse(JSON.stringify(nodesSchemas[id]));\n                        const newNode = createNodeFromJson(jsonObj, newNodeId, setNodes);\n                        const newX =\n                            -panZoomInfo.topLeftCorner.x / panZoomInfo.zoom +\n                            nodePickerPos.x / panZoomInfo.zoom;\n                        const newY =\n                            -panZoomInfo.topLeftCorner.y / panZoomInfo.zoom +\n                            nodePickerPos.y / panZoomInfo.zoom;\n                        newNode.position = { x: newX, y: newY };\n                        draft[newNodeId] = newNode;\n                    })\n                );\n                setNewNodeId(newNodeId);\n                setNodePickerOnMouseHover(false);\n                setNodePickerPos(null);\n            }\n        },\n        [panZoomInfo, nodePickerPos, nodesSchemas]\n    );\n\n    const onConnectorUpdate = React.useCallback(\n        (nodeId: string, cId: string, connector: ConnectorModel) => {\n            setNodes(\n                nodes => produce(nodes, (draft) => {\n                    draft[nodeId].connectors[cId] = connector;\n                })\n            );\n            const newNodes = produce(nodes, (draft) => {\n                draft[nodeId].connectors[cId] = connector;\n            });\n            taskQueue.propagateNode(nodeId, newNodes, links);\n            taskQueue.runAll(newNodes, links, setNodes);\n        }, [nodes, links]\n    );\n\n    const onContextMenu = React.useCallback(\n        (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n            event.preventDefault();\n            if (!nodePickerPos) {\n                setNodePickerPos({ x: event.pageX, y: event.pageY });\n            } else {\n                setNodePickerOnMouseHover(false);\n                setNodePickerPos(null);\n            }\n        },\n        [nodePickerPos]\n    );\n\n    const onMouseDown = React.useCallback(\n        () => {\n            if (nodePickerPos && !nodePickerOnMouseHover) {\n                setNodePickerOnMouseHover(false);\n                setNodePickerPos(null);\n            }\n        },\n        [nodePickerOnMouseHover, nodePickerPos, setNodePickerPos]\n    );\n\n    const onSaveButton = useCallback(() => {\n        const data = {\n            \"nodes\": nodes,\n            \"links\": links\n        };\n\n        const element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(data)));\n        element.setAttribute('download', \"oura-node-editor.json\");\n\n        element.style.display = 'none';\n        document.body.appendChild(element);\n\n        element.click();\n\n        document.body.removeChild(element);\n    }, [nodes, links]);\n\n    const onLoadButton = useCallback((evt) => {\n        taskQueue.reset();\n        if (evt.target.files.size < 1) {\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (file) => {\n            if (file.target && file.target.result && file.target.result) {\n                const data = JSON.parse(atob((file.target.result as string).substring(29)));\n                Object.keys(data.nodes).forEach((key) => {\n                    data.nodes[key] = createNodeFromJson(data.nodes[key], key, setNodes);\n                });\n                setNodes(data.nodes);\n                setLinks(data.links);\n                setRunFirstPropagation(true);\n            }\n        };\n        reader.readAsDataURL(evt.target.files[0]);\n    }, []);\n\n    const onResetButton = useCallback(() => {\n        taskQueue.reset();\n        setNodes({});\n        setLinks({});\n    }, []);\n\n    let nodePicker = null;\n    if (nodePickerPos && selectedItems.length === 0) {\n        nodePicker = <div\n            style={{\n                width: 640,\n                height: 500,\n                position: \"absolute\",\n                top: nodePickerPos.y,\n                left: nodePickerPos.x,\n                backgroundColor: \"white\"\n            }}>\n            <AddNodeContextualMenu\n                nodesSchema={nodesSchemas}\n                onNodeSelection={onNodeSelection}\n                onMouseHover={setNodePickerOnMouseHover}\n                createCustomConnectorComponent={createCustomConnectorsContents}\n            />\n        </div>;\n    }\n    else if (nodePickerPos) {\n        nodePicker = <div\n            style={{\n                width: 640,\n                height: 480,\n                position: \"absolute\",\n                top: nodePickerPos.y,\n                left: nodePickerPos.x,\n                backgroundColor: \"white\"\n            }}>\n            <SelectionManagementContextualMenu\n                onMouseHover={setNodePickerOnMouseHover}\n                onDeleteSelection={onDeleteSelection}\n            />\n        </div>\n    }\n\n    const buttonStyle = {\n        font: \"bold 11px Arial\",\n        textDecoration: \"none\",\n        backgroundColor: \"#EEEEEE\",\n        color: \"#333333\",\n        padding: \"2px 6px 2px 6px\",\n        borderTop: \"1px solid #CCCCCC\",\n        borderRight: \"1px solid #333333\",\n        borderBottom: \"1px solid #333333\",\n        borderLeft: \"1px solid #CCCCCC\"\n    };\n\n    return (\n        <>\n            <div\n                style={{ width: \"100%\", height: \"100%\" }}\n                onContextMenu={onContextMenu}\n                onMouseDown={onMouseDown}\n                tabIndex={0}>\n                <NodeEditor\n                    panZoomInfo={panZoomInfo}\n                    nodes={nodes}\n                    links={links}\n                    selectedItems={selectedItems}\n                    onPanZoomInfo={setPanZoomInfo}\n                    onSelectedItems={setSelectedItemsAndMoveSelectedNodeFront}\n                    onNodeMove={onNodeMove}\n                    onCreateLink={onCreateLink}\n                    onConnectorUpdate={onConnectorUpdate}\n                    createCustomConnectorComponent={createCustomConnectorsContents}\n                />\n                {nodePicker}\n            </div>\n            <button onClick={onSaveButton} style={{ position: \"absolute\", left: 5, bottom: 5, ...buttonStyle }}>save</button>\n            <label htmlFor=\"files\" className=\"btn\" style={{ position: \"absolute\", left: 55, bottom: 5, ...buttonStyle }}>load</label>\n            <input onChange={onLoadButton} id=\"files\" style={{ visibility: \"hidden\" }} type=\"file\" />\n            <button onClick={onResetButton} style={{ position: \"absolute\", right: 5, bottom: 5, ...buttonStyle }}>reset</button>\n        </>\n    );\n};\n\nexport default OuraCanvasApp;\n","import React from \"react\";\n\nimport OuraCanvasApp from \"./oura_canvas\";\n\nconst App = (): JSX.Element => (\n    <div style={{ width: \"100%\", height: \"100vh\" }} className=\"App\">\n        <OuraCanvasApp />\n    </div>\n);\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!); // createRoot(container!) if you use TypeScript\nroot.render(<React.StrictMode><App /></React.StrictMode>);\n"],"sourceRoot":""}